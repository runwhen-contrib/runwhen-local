# Build source image and test against K8s
name: Discovery K8s Tests

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "src/**"
      - ".github/workflows/test-k8s.yaml"

permissions:
  contents: "read"
  id-token: "write"
  security-events: "write"
  actions: "read"

env:
  PROJECT_ID: runwhen-nonprod-shared
  DEFAULT_BRANCH: "origin/${{ github.event.repository.default_branch }}"
          
jobs:
  build-image:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ github.sha }}
    steps:
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - uses: actions/checkout@v2
        name: Checkout

      - name: Build Image
        run: |-
          cd .test/k8s/basic
          docker buildx create --use --name=mybuilder
          docker buildx inspect --bootstrap
          task build-rwl
          docker save -o image.tar runwhen-local:test || (echo "Image not found!" && exit 1)


      - name: Upload Image as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: container-image
          path: .test/k8s/basic/image.tar
          retention-days: 1

  k8s-basic-test:
    needs: build-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: [ci-test-1, ci-test-2]  # Define multiple tests
    steps:
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - uses: actions/checkout@v2
        name: Checkout

      - name: Download Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: container-image
          path: .test/k8s/basic

      - name: Load Docker Image
        run: |
          docker load -i .test/k8s/basic/image.tar

      - name: Run Test - ${{ matrix.test }}
        env:
          KUBECONFIG_SECRET: ${{ secrets.SANDBOX_KUBECONFIG }}
        run: |-
          cd .test/k8s/basic
          echo "$KUBECONFIG_SECRET" > kubeconfig.secret
          echo "Task Description:"
          yq '.tasks.${{ matrix.test }}.desc' Taskfile.yaml
          task ${{ matrix.test }}


  notify:
    runs-on: ubuntu-latest
    needs:
      - build-image
      - k8s-basic-test
    if: always() 

    steps:
      - name: Set Workflow Status
        id: status
        run: |
          if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            echo "status=❌ *Failure*" >> $GITHUB_ENV
          else
            echo "status=✅ *Success*" >> $GITHUB_ENV
          fi


      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: "#runwhen-local"
          slack-message: "${{ env.status }} - Workflow *${{ github.workflow }}* in repo *${{ github.repository }}* on branch *${{ github.ref_name }}*"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}