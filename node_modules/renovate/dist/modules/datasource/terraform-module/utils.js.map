{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/terraform-module/utils.ts"],"names":[],"mappings":";;AAMA,gDAYC;AAlBD,2CAA4D;AAM5D,SAAgB,kBAAkB,CAChC,WAAmB,EACnB,MAAoC,EACpC,QAAgC,EAChC,OAAe;IAEf,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAC1C,MAAM,QAAQ,GAAG,IAAA,kBAAY,EAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IACnD,IAAI,IAAA,eAAS,EAAC,QAAQ,CAAC,EAAE,CAAC;QACxB,OAAO,QAAQ,CAAC;IAClB,CAAC;IACD,OAAO,IAAA,kBAAY,EAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AAC7C,CAAC","sourcesContent":["import { isHttpUrl, joinUrlParts } from '../../../util/url';\nimport type {\n  ServiceDiscoveryEndpointType,\n  ServiceDiscoveryResult,\n} from './types';\n\nexport function createSDBackendURL(\n  registryURL: string,\n  sdType: ServiceDiscoveryEndpointType,\n  sdResult: ServiceDiscoveryResult,\n  subPath: string,\n): string {\n  const sdEndpoint = sdResult[sdType] ?? '';\n  const fullPath = joinUrlParts(sdEndpoint, subPath);\n  if (isHttpUrl(fullPath)) {\n    return fullPath;\n  }\n  return joinUrlParts(registryURL, fullPath);\n}\n"]}