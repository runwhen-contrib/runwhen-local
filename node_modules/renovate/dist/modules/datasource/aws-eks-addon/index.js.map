{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/aws-eks-addon/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { DescribeAddonVersionsCommand, EKSClient } from '@aws-sdk/client-eks';\nimport { fromNodeProviderChain } from '@aws-sdk/credential-providers';\nimport is from '@sindresorhus/is';\nimport { logger } from '../../../logger';\nimport { coerceArray } from '../../../util/array';\nimport { cache } from '../../../util/cache/package/decorator';\nimport * as awsEksAddonVersioning from '../../versioning/aws-eks-addon';\nimport { Datasource } from '../datasource';\nimport type { GetReleasesConfig, ReleaseResult } from '../types';\nimport { EksAddonsFilter } from './schema';\n\nexport class AwsEKSAddonDataSource extends Datasource {\n  static readonly id = 'aws-eks-addon';\n\n  override readonly defaultVersioning = awsEksAddonVersioning.id;\n  override readonly caching = true;\n  private readonly clients: Record<string, EKSClient> = {};\n\n  constructor() {\n    super(AwsEKSAddonDataSource.id);\n  }\n\n  @cache({\n    namespace: `datasource-${AwsEKSAddonDataSource.id}`,\n    key: ({ packageName }: GetReleasesConfig) => `getReleases:${packageName}`,\n  })\n  async getReleases({\n    packageName: serializedFilter,\n  }: GetReleasesConfig): Promise<ReleaseResult | null> {\n    const res = EksAddonsFilter.safeParse(serializedFilter);\n    if (!res.success) {\n      logger.warn(\n        { err: res.error, serializedFilter },\n        'Error parsing eks-addons config.',\n      );\n      return null;\n    }\n\n    const filter = res.data;\n\n    const cmd = new DescribeAddonVersionsCommand({\n      kubernetesVersion: filter.kubernetesVersion,\n      addonName: filter.addonName,\n      maxResults: 1,\n    });\n    const response = await this.getClient(filter).send(cmd);\n    const addons = coerceArray(response.addons);\n    return {\n      releases: addons\n        .flatMap((addon) => {\n          return addon.addonVersions;\n        })\n        .filter(is.truthy)\n        .map((versionInfo) => ({\n          version: versionInfo.addonVersion ?? '',\n          default:\n            versionInfo.compatibilities?.some((comp) => comp.defaultVersion) ??\n            false,\n          compatibleWith: versionInfo.compatibilities?.flatMap(\n            (comp) => comp.clusterVersion,\n          ),\n        }))\n        .filter((release) => release.version && release.version !== '')\n        .filter((release) => {\n          if (filter.default) {\n            return release.default && release.default === filter.default;\n          }\n          return true;\n        }),\n    };\n  }\n\n  private getClient({ region, profile }: EksAddonsFilter): EKSClient {\n    const cacheKey = `${region ?? 'default'}#${profile ?? 'default'}`;\n    if (!(cacheKey in this.clients)) {\n      this.clients[cacheKey] = new EKSClient({\n        ...(region && { region }),\n        credentials: fromNodeProviderChain(profile ? { profile } : undefined),\n      });\n    }\n    return this.clients[cacheKey];\n  }\n}\n"]}