import { type ZodEffects, type ZodString, z } from 'zod';
export declare const EksAddonsFilterSchema: z.ZodObject<{
    addonName: ZodString;
    kubernetesVersion: z.ZodOptional<ZodString>;
    default: z.ZodUnion<[z.ZodOptional<z.ZodBoolean>, ZodEffects<ZodString, boolean, string>]>;
    region: z.ZodOptional<ZodString>;
    profile: z.ZodOptional<ZodString>;
}, "strip", z.ZodTypeAny, {
    addonName: string;
    default?: boolean | undefined;
    profile?: string | undefined;
    kubernetesVersion?: string | undefined;
    region?: string | undefined;
}, {
    addonName: string;
    default?: string | boolean | undefined;
    profile?: string | undefined;
    kubernetesVersion?: string | undefined;
    region?: string | undefined;
}>;
export type EksAddonsFilter = z.infer<typeof EksAddonsFilterSchema>;
export declare const EksAddonsFilter: z.ZodPipeline<ZodEffects<ZodString, string | number | boolean | import("type-fest").JsonObject | import("type-fest").JsonValue[] | readonly import("type-fest").JsonValue[] | null, string>, z.ZodObject<{
    addonName: ZodString;
    kubernetesVersion: z.ZodOptional<ZodString>;
    default: z.ZodUnion<[z.ZodOptional<z.ZodBoolean>, ZodEffects<ZodString, boolean, string>]>;
    region: z.ZodOptional<ZodString>;
    profile: z.ZodOptional<ZodString>;
}, "strip", z.ZodTypeAny, {
    addonName: string;
    default?: boolean | undefined;
    profile?: string | undefined;
    kubernetesVersion?: string | undefined;
    region?: string | undefined;
}, {
    addonName: string;
    default?: string | boolean | undefined;
    profile?: string | undefined;
    kubernetesVersion?: string | undefined;
    region?: string | undefined;
}>>;
