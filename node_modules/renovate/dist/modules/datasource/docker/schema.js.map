{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/docker/schema.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\nimport { logger } from '../../../logger';\nimport { Json, LooseArray } from '../../../util/schema-utils';\n\n// OCI manifests\n\n/**\n *  OCI manifest object\n */\nexport const ManifestObject = z.object({\n  schemaVersion: z.literal(2),\n  mediaType: z.string().nullish(),\n});\n\n/**\n * Oci descriptor\n * https://github.com/opencontainers/image-spec/blob/main/descriptor.md\n */\nexport const Descriptor = z.object({\n  mediaType: z.string(),\n  digest: z.string(),\n  size: z.number().int().gte(0).nullish(),\n});\n/**\n * OCI platform properties\n * https://github.com/opencontainers/image-spec/blob/main/image-index.md\n */\nconst OciPlatform = z\n  .object({\n    architecture: z.string().nullish(),\n  })\n  .nullish();\n\n/**\n * OCI Image Configuration.\n *\n * Compatible with old docker configiguration.\n * https://github.com/opencontainers/image-spec/blob/main/config.md\n */\nexport const OciImageConfig = z.object({\n  // This is required by the spec, but probably not present in the wild.\n  architecture: z.string().nullish(),\n  config: z.object({ Labels: z.record(z.string()).nullish() }).nullish(),\n});\nexport type OciImageConfig = z.infer<typeof OciImageConfig>;\n\n/**\n * OCI Helm Configuration\n * https://helm.sh/docs/topics/charts/#the-chartyaml-file\n */\nexport const OciHelmConfig = z.object({\n  name: z.string(),\n  version: z.string(),\n  home: z.string().nullish(),\n  sources: z.array(z.string()).nullish(),\n});\nexport type OciHelmConfig = z.infer<typeof OciHelmConfig>;\n\n/**\n * OCI Image Manifest\n * The same structure as docker image manifest, but mediaType is not required and is not present in the wild.\n * https://github.com/opencontainers/image-spec/blob/main/manifest.md\n */\nexport const OciImageManifest = ManifestObject.extend({\n  mediaType: z.literal('application/vnd.oci.image.manifest.v1+json'),\n  config: Descriptor.extend({\n    mediaType: z.enum([\n      'application/vnd.oci.image.config.v1+json',\n      'application/vnd.cncf.helm.config.v1+json',\n      'application/vnd.devcontainers',\n      'application/vnd.oci.empty.v1+json',\n      'application/vnd.cncf.flux.config.v1+json',\n    ]),\n  }),\n  annotations: z.record(z.string()).nullish(),\n});\nexport type OciImageManifest = z.infer<typeof OciImageManifest>;\n\n/**\n * OCI Image List\n * mediaType is not required.\n * https://github.com/opencontainers/image-spec/blob/main/image-index.md\n */\nexport const OciImageIndexManifest = ManifestObject.extend({\n  mediaType: z.literal('application/vnd.oci.image.index.v1+json'),\n  manifests: z.array(\n    Descriptor.extend({\n      mediaType: z.enum([\n        'application/vnd.oci.image.manifest.v1+json',\n        'application/vnd.oci.image.index.v1+json',\n      ]),\n      platform: OciPlatform,\n    }),\n  ),\n  annotations: z.record(z.string()).nullish(),\n});\n\n// Old Docker manifests\n\n/**\n * Image Manifest\n * https://docs.docker.com/registry/spec/manifest-v2-2/#image-manifest\n */\nexport const DistributionManifest = ManifestObject.extend({\n  mediaType: z.literal('application/vnd.docker.distribution.manifest.v2+json'),\n  config: Descriptor.extend({\n    mediaType: z.literal('application/vnd.docker.container.image.v1+json'),\n  }),\n});\nexport type DistributionManifest = z.infer<typeof DistributionManifest>;\n\n/**\n * Manifest List\n * https://docs.docker.com/registry/spec/manifest-v2-2/#manifest-list\n */\nexport const DistributionListManifest = ManifestObject.extend({\n  mediaType: z.literal(\n    'application/vnd.docker.distribution.manifest.list.v2+json',\n  ),\n  manifests: z.array(\n    Descriptor.extend({\n      mediaType: z.literal(\n        'application/vnd.docker.distribution.manifest.v2+json',\n      ),\n      platform: OciPlatform,\n    }),\n  ),\n});\n\n// Combined manifests\nexport const Manifest = ManifestObject.passthrough()\n  .transform((value, ctx) => {\n    if (value.mediaType === undefined) {\n      if ('config' in value) {\n        value.mediaType = 'application/vnd.oci.image.manifest.v1+json';\n      } else if ('manifests' in value) {\n        value.mediaType = 'application/vnd.oci.image.index.v1+json';\n      } else {\n        ctx.addIssue({\n          code: 'custom',\n          message: 'Invalid manifest, missing mediaType.',\n        });\n        return z.NEVER;\n      }\n    }\n    return value;\n  })\n  .pipe(\n    z.discriminatedUnion('mediaType', [\n      DistributionManifest,\n      DistributionListManifest,\n      OciImageManifest,\n      OciImageIndexManifest,\n    ]),\n  );\n\nexport type Manifest = z.infer<typeof Manifest>;\nexport const ManifestJson = Json.pipe(Manifest);\n\nexport const DockerHubTag = z.object({\n  id: z.number(),\n  last_updated: z.string().datetime(),\n  name: z.string(),\n  tag_last_pushed: z.string().datetime().nullable().catch(null),\n  digest: z.string().nullable().catch(null),\n});\nexport type DockerHubTag = z.infer<typeof DockerHubTag>;\n\nexport const DockerHubTagsPage = z.object({\n  count: z.number(),\n  next: z.string().nullable().catch(null),\n  results: LooseArray(DockerHubTag, {\n    /* v8 ignore next 6 -- TODO: add test */\n    onError: ({ error }) => {\n      logger.debug(\n        { error },\n        'Docker: Failed to parse some tags from Docker Hub',\n      );\n    },\n  }),\n});\n"]}