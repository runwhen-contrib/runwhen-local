{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/packagist/schema.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { z } from 'zod';\nimport { logger } from '../../../logger';\nimport { LooseArray, LooseRecord } from '../../../util/schema-utils';\nimport { MaybeTimestamp } from '../../../util/timestamp';\nimport type { Release, ReleaseResult } from '../types';\n\nexport const MinifiedArray = z.array(z.record(z.unknown())).transform((xs) => {\n  // Ported from: https://github.com/composer/metadata-minifier/blob/main/src/MetadataMinifier.php#L17\n  if (xs.length === 0) {\n    return xs;\n  }\n\n  const prevVals: Record<string, unknown> = {};\n  for (const x of xs) {\n    for (const key of Object.keys(x)) {\n      prevVals[key] ??= undefined;\n    }\n\n    for (const key of Object.keys(prevVals)) {\n      const val = x[key];\n      if (val === '__unset') {\n        delete x[key];\n        prevVals[key] = undefined;\n        continue;\n      }\n\n      if (!is.undefined(val)) {\n        prevVals[key] = val;\n        continue;\n      }\n\n      if (!is.undefined(prevVals[key])) {\n        x[key] = prevVals[key];\n        continue;\n      }\n    }\n  }\n\n  return xs;\n});\nexport type MinifiedArray = z.infer<typeof MinifiedArray>;\n\nexport const ComposerRelease = z.object({\n  version: z.string(),\n  homepage: z.string().nullable().catch(null),\n  source: z.object({ url: z.string() }).nullable().catch(null),\n  time: MaybeTimestamp,\n  require: z.object({ php: z.string() }).nullable().catch(null),\n});\nexport type ComposerRelease = z.infer<typeof ComposerRelease>;\n\nexport const ComposerReleases = z\n  .union([\n    MinifiedArray.pipe(LooseArray(ComposerRelease)),\n    LooseRecord(ComposerRelease).transform((map) => Object.values(map)),\n  ])\n  .catch([]);\nexport type ComposerReleases = z.infer<typeof ComposerReleases>;\n\nexport const ComposerPackagesResponse = z\n  .object({\n    packageName: z.string(),\n    packagesResponse: z.object({\n      packages: z.record(z.unknown()),\n    }),\n  })\n  .transform(\n    ({ packageName, packagesResponse }) =>\n      packagesResponse.packages[packageName],\n  )\n  .transform((xs) => ComposerReleases.parse(xs));\nexport type ComposerPackagesResponse = z.infer<typeof ComposerPackagesResponse>;\n\nexport function parsePackagesResponse(\n  packageName: string,\n  packagesResponse: unknown,\n): ComposerReleases {\n  try {\n    return ComposerPackagesResponse.parse({ packageName, packagesResponse });\n  } catch (err) {\n    logger.debug(\n      { packageName, err },\n      `Error parsing packagist response for ${packageName}`,\n    );\n    return [];\n  }\n}\n\nexport function extractReleaseResult(\n  ...composerReleasesArrays: ComposerReleases[]\n): ReleaseResult | null {\n  const releases: Release[] = [];\n  let homepage: string | null | undefined;\n  let sourceUrl: string | null | undefined;\n\n  for (const composerReleasesArray of composerReleasesArrays) {\n    for (const composerRelease of composerReleasesArray) {\n      const version = composerRelease.version.replace(/^v/, '');\n      const gitRef = composerRelease.version;\n\n      const dep: Release = { version, gitRef };\n\n      if (composerRelease.time) {\n        dep.releaseTimestamp = composerRelease.time;\n      }\n\n      if (composerRelease.require?.php) {\n        dep.constraints = { php: [composerRelease.require.php] };\n      }\n\n      releases.push(dep);\n\n      if (!homepage && composerRelease.homepage) {\n        homepage = composerRelease.homepage;\n      }\n\n      if (!sourceUrl && composerRelease.source?.url) {\n        sourceUrl = composerRelease.source.url;\n      }\n    }\n  }\n\n  if (releases.length === 0) {\n    return null;\n  }\n\n  const result: ReleaseResult = { releases };\n\n  if (homepage) {\n    result.homepage = homepage;\n  }\n\n  if (sourceUrl) {\n    result.sourceUrl = sourceUrl;\n  }\n\n  return result;\n}\n\nexport function extractDepReleases(\n  composerReleases: unknown,\n): ReleaseResult | null {\n  const parsedReleases = ComposerReleases.parse(composerReleases);\n  return extractReleaseResult(parsedReleases);\n}\n\nexport function parsePackagesResponses(\n  packageName: string,\n  packagesResponses: unknown[],\n): ReleaseResult | null {\n  const releaseArrays = packagesResponses.map((pkgResp) =>\n    parsePackagesResponse(packageName, pkgResp),\n  );\n  return extractReleaseResult(...releaseArrays);\n}\n\nexport const HashSpec = z.union([\n  z\n    .object({ sha256: z.string().nullable() })\n    .transform(({ sha256 }) => ({ hash: sha256 })),\n  z\n    .object({ sha1: z.string().nullable() })\n    .transform(({ sha1 }) => ({ hash: sha1 })),\n]);\nexport type HashSpec = z.infer<typeof HashSpec>;\n\nexport const RegistryFile = z.intersection(\n  HashSpec,\n  z.object({ key: z.string() }),\n);\nexport type RegistryFile = z.infer<typeof RegistryFile>;\n\nexport const PackagesResponse = z.object({\n  packages: LooseRecord(ComposerReleases).catch({}),\n});\nexport type PackagesResponse = z.infer<typeof PackagesResponse>;\n\nexport const PackagistFile = PackagesResponse.merge(\n  z.object({\n    providers: LooseRecord(HashSpec)\n      .transform((x) =>\n        Object.fromEntries(\n          Object.entries(x).map(([key, { hash }]) => [key, hash]),\n        ),\n      )\n      .catch({}),\n  }),\n);\nexport type PackagistFile = z.infer<typeof PackagistFile>;\n\nexport const RegistryMeta = z\n  .record(z.unknown())\n  .catch({})\n  .pipe(\n    PackagistFile.merge(\n      z.object({\n        ['includes']: LooseRecord(HashSpec)\n          .transform((x) =>\n            Object.entries(x).map(([name, { hash }]) => ({ key: name, hash })),\n          )\n          .catch([]),\n        ['provider-includes']: LooseRecord(HashSpec)\n          .transform((x) =>\n            Object.entries(x).map(([key, { hash }]) => ({ key, hash })),\n          )\n          .catch([]),\n        ['providers-lazy-url']: z.string().nullable().catch(null),\n        ['providers-url']: z.string().nullable().catch(null),\n        ['metadata-url']: z.string().nullable().catch(null),\n        ['available-packages']: z.array(z.string()).nullable().catch(null),\n      }),\n    ),\n  )\n  .transform(\n    ({\n      ['includes']: includesFiles,\n      ['packages']: packages,\n      ['provider-includes']: files,\n      ['providers']: providerPackages,\n      ['providers-lazy-url']: providersLazyUrl,\n      ['providers-url']: providersUrl,\n      ['metadata-url']: metadataUrl,\n      ['available-packages']: availablePackages,\n    }) => ({\n      packages,\n      includesFiles,\n      providerPackages,\n      files,\n      providersUrl,\n      providersLazyUrl,\n      metadataUrl,\n      includesPackages: {} as Record<string, ReleaseResult | null>,\n      availablePackages,\n    }),\n  );\nexport type RegistryMeta = z.infer<typeof RegistryMeta>;\n"]}