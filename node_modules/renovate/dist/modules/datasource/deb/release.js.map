{"version":3,"file":"release.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/deb/release.ts"],"names":[],"mappings":";;AAUA,sEAKC;AAQD,kDAOC;AA3BD;;;;;;GAMG;AACH,SAAgB,6BAA6B,CAC3C,GAAkB,EAClB,GAAkB;IAElB,OAAO,GAAG,CAAC,QAAQ,KAAK,GAAG,CAAC,QAAQ,CAAC;AACvC,CAAC;AAED;;;;;GAKG;AACH,SAAgB,mBAAmB,CACjC,YAAkC;IAElC,OAAO;QACL,QAAQ,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,OAAQ,EAAE,CAAC,CAAC;QAC5D,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,QAAQ;KACpC,CAAC;AACJ,CAAC","sourcesContent":["import type { ReleaseResult } from '..';\nimport type { PackageDescription } from './types';\n\n/**\n * Checks if two release metadata objects match.\n *\n * @param lhs - The first release result.\n * @param rhs - The second release result.\n * @returns True if the metadata matches, otherwise false.\n */\nexport function releaseMetaInformationMatches(\n  lhs: ReleaseResult,\n  rhs: ReleaseResult,\n): boolean {\n  return lhs.homepage === rhs.homepage;\n}\n\n/**\n * Formats the package description into a ReleaseResult.\n *\n * @param packagesDesc - list of package description objects.\n * @returns A formatted ReleaseResult.\n */\nexport function formatReleaseResult(\n  packagesDesc: PackageDescription[],\n): ReleaseResult {\n  return {\n    releases: packagesDesc.map((p) => ({ version: p.Version! })),\n    homepage: packagesDesc[0]?.Homepage,\n  };\n}\n"]}