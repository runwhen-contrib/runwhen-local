{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/azure-bicep-resource/index.ts"],"names":[],"mappings":";;;;AAAA,qEAA8D;AAC9D,mGAA6E;AAC7E,8CAA2C;AAE3C,qCAAqD;AAErD,MAAM,qBAAqB,GACzB,kFAAkF,CAAC;AAErF,MAAa,4BAA6B,SAAQ,uBAAU;IAC1D,MAAM,CAAU,EAAE,GAAG,sBAAsB,CAAC;IAE1B,aAAa,GAAG;QAChC,kBAAkB,EAAE,sBAAsB;QAC1C,kBAAkB,EAAE,qBAAqB;QACzC,aAAa,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC;QACrC,iBAAiB,EAAE;YACjB,QAAQ,EAAE,qBAAqB;SAChC;KACF,CAAC;IAEgB,iBAAiB,GAAG,yBAAyB,CAAC,EAAE,CAAC;IAEnE;QACE,KAAK,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;IAEO,eAAe,CAAC,WAAmB;QACzC,MAAM,eAAe,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjD,MAAM,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;QAChE,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;QACpD,OAAO,qDAAqD,iBAAiB,eAAe,IAAI,EAAE,CAAC;IACrG,CAAC;IAMK,AAAN,KAAK,CAAC,WAAW,CACf,iBAAoC;QAEpC,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAClE,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAChE,MAAM,QAAQ,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC;YACtB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QACvD,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAC1C,OAAO;YACP,YAAY,EAAE,GAAG,YAAY,IAAI,OAAO,EAAE;SAC3C,CAAC,CAAC,CAAC;QACJ,OAAO,EAAE,QAAQ,EAAE,CAAC;IACtB,CAAC;IAOK,AAAN,KAAK,CAAC,uBAAuB;QAC3B,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CACtC,qBAAqB,EACrB,kCAAyB,CAC1B,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;;AA1DH,oEA2DC;AA9BO;IAJL,IAAA,iBAAK,EAAC;QACL,SAAS,EAAE,cAAc,4BAA4B,CAAC,EAAE,EAAE;QAC1D,GAAG,EAAE,CAAC,EAAE,WAAW,EAAqB,EAAE,EAAE,CAAC,eAAe,WAAW,EAAE;KAC1E,CAAC;+DAiBD;AAOK;IALL,IAAA,iBAAK,EAAC;QACL,SAAS,EAAE,cAAc,4BAA4B,CAAC,EAAE,EAAE;QAC1D,GAAG,EAAE,yBAAyB;QAC9B,UAAU,EAAE,EAAE,GAAG,EAAE;KACpB,CAAC;2EAOD","sourcesContent":["import { cache } from '../../../util/cache/package/decorator';\nimport * as azureRestApiVersioningApi from '../../versioning/azure-rest-api';\nimport { Datasource } from '../datasource';\nimport type { GetReleasesConfig, ReleaseResult } from '../types';\nimport { BicepResourceVersionIndex } from './schema';\n\nconst BICEP_TYPES_INDEX_URL =\n  'https://raw.githubusercontent.com/Azure/bicep-types-az/main/generated/index.json';\n\nexport class AzureBicepResourceDatasource extends Datasource {\n  static readonly id = 'azure-bicep-resource';\n\n  override readonly defaultConfig = {\n    commitMessageTopic: 'resource {{depName}}',\n    commitMessageExtra: 'to {{{newVersion}}}',\n    prBodyColumns: ['Resource', 'Change'],\n    prBodyDefinitions: {\n      Resource: '{{{depNameLinked}}}',\n    },\n  };\n\n  override readonly defaultVersioning = azureRestApiVersioningApi.id;\n\n  constructor() {\n    super(AzureBicepResourceDatasource.id);\n  }\n\n  private getChangelogUrl(packageName: string): string {\n    const firstSlashIndex = packageName.indexOf('/');\n    const namespaceProvider = packageName.slice(0, firstSlashIndex);\n    const type = packageName.slice(firstSlashIndex + 1);\n    return `https://learn.microsoft.com/en-us/azure/templates/${namespaceProvider}/change-log/${type}`;\n  }\n\n  @cache({\n    namespace: `datasource-${AzureBicepResourceDatasource.id}`,\n    key: ({ packageName }: GetReleasesConfig) => `getReleases-${packageName}`,\n  })\n  async getReleases(\n    getReleasesConfig: GetReleasesConfig,\n  ): Promise<ReleaseResult | null> {\n    const resourceVersionIndex = await this.getResourceVersionIndex();\n    const packageName = getReleasesConfig.packageName.toLowerCase();\n    const versions = resourceVersionIndex[packageName];\n    if (!versions?.length) {\n      return null;\n    }\n\n    const changelogUrl = this.getChangelogUrl(packageName);\n    const releases = versions.map((version) => ({\n      version,\n      changelogUrl: `${changelogUrl}#${version}`,\n    }));\n    return { releases };\n  }\n\n  @cache({\n    namespace: `datasource-${AzureBicepResourceDatasource.id}`,\n    key: 'getResourceVersionIndex',\n    ttlMinutes: 24 * 60,\n  })\n  async getResourceVersionIndex(): Promise<BicepResourceVersionIndex> {\n    const { body } = await this.http.getJson(\n      BICEP_TYPES_INDEX_URL,\n      BicepResourceVersionIndex,\n    );\n    return body;\n  }\n}\n"]}