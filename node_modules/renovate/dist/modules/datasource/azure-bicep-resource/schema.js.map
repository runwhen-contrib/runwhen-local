{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/azure-bicep-resource/schema.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AAEX,QAAA,yBAAyB,GAAG,OAAC;KACvC,MAAM,CAAC;IACN,SAAS,EAAE,OAAC,CAAC,MAAM,CAAC,OAAC,CAAC,MAAM,EAAE,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC;CAC7C,CAAC;KACD,SAAS,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE;IAC3B,MAAM,UAAU,GAAG,IAAI,GAAG,EAAoB,CAAC;IAE/C,KAAK,MAAM,iBAAiB,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;QACvD,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,iBAAiB,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACtE,MAAM,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAC5C,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvB,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACjC,CAAC;IAED,OAAO,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\n\nexport const BicepResourceVersionIndex = z\n  .object({\n    resources: z.record(z.string(), z.unknown()),\n  })\n  .transform(({ resources }) => {\n    const releaseMap = new Map<string, string[]>();\n\n    for (const resourceReference of Object.keys(resources)) {\n      const [type, version] = resourceReference.toLowerCase().split('@', 2);\n      const versions = releaseMap.get(type) ?? [];\n      versions.push(version);\n      releaseMap.set(type, versions);\n    }\n\n    return Object.fromEntries(releaseMap);\n  });\n\nexport type BicepResourceVersionIndex = z.infer<\n  typeof BicepResourceVersionIndex\n>;\n"]}