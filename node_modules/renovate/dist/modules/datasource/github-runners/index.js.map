{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/github-runners/index.ts"],"names":[],"mappings":";;;AAAA,oDAAmE;AACnE,8CAA2C;AAG3C,MAAa,uBAAwB,SAAQ,uBAAU;IACrD,MAAM,CAAU,EAAE,GAAG,gBAAgB,CAAC;IAEpB,gBAAgB,GAAG,SAAS,CAAC;IAC7B,aAAa,GAC7B,2DAA2D,CAAC;IAE9D;;;;;;OAMG;IACK,MAAM,CAAU,QAAQ,GAA0C;QACxE,MAAM,EAAE;YACN,EAAE,OAAO,EAAE,OAAO,EAAE;YACpB,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE;YACzC,EAAE,OAAO,EAAE,OAAO,EAAE;YACpB,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE;YACzC,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE;YACxC,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE;YACxC,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE;SACzC;QACD,KAAK,EAAE;YACL,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE;YAClC,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;YACxC,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE;YACzC,EAAE,OAAO,EAAE,IAAI,EAAE;YACjB,EAAE,OAAO,EAAE,UAAU,EAAE;YACvB,EAAE,OAAO,EAAE,WAAW,EAAE;YACxB,EAAE,OAAO,EAAE,IAAI,EAAE;YACjB,EAAE,OAAO,EAAE,UAAU,EAAE;YACvB,EAAE,OAAO,EAAE,WAAW,EAAE;YACxB,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,IAAI,EAAE;YAC3C,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE;YACrC,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE;YACrC,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE;SACzC;QACD,OAAO,EAAE;YACP,EAAE,OAAO,EAAE,MAAM,EAAE;YACnB,EAAE,OAAO,EAAE,MAAM,EAAE;YACnB,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE;YACvC,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE;SACxC;KACF,CAAC;IAEK,MAAM,CAAC,aAAa,CACzB,UAAkB,EAClB,aAAqB;QAErB,MAAM,cAAc,GAAG,uBAAuB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACpE,IAAI,CAAC,cAAc,EAAE,CAAC;YACpB,OAAO,KAAK,CAAC;QACf,CAAC;QAED,MAAM,aAAa,GAAG,cAAc,CAAC,IAAI,CACvC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,OAAO,KAAK,aAAa,CAC3C,CAAC;QAEF,OAAO,aAAa,KAAK,QAAQ,IAAI,aAAa,CAAC;IACrD,CAAC;IAEiB,iBAAiB,GAAG,WAAkB,CAAC;IAEzD;QACE,KAAK,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAEQ,WAAW,CAAC,EACnB,WAAW,GACO;QAClB,MAAM,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC/D,MAAM,aAAa,GAAyB,QAAQ;YAClD,CAAC,CAAC;gBACE,QAAQ;gBACR,SAAS,EAAE,0CAA0C;aACtD;YACH,CAAC,CAAC,IAAI,CAAC;QACT,OAAO,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;;AAhFH,0DAiFC","sourcesContent":["import { id as dockerVersioningId } from '../../versioning/docker';\nimport { Datasource } from '../datasource';\nimport type { GetReleasesConfig, Release, ReleaseResult } from '../types';\n\nexport class GithubRunnersDatasource extends Datasource {\n  static readonly id = 'github-runners';\n\n  override readonly sourceUrlSupport = 'package';\n  override readonly sourceUrlNote =\n    'We use the URL: https://github.com/actions/runner-images.';\n\n  /**\n   * Unstable runners must have the `isStable: false` property.\n   * Deprecated runners must have the `isDeprecated: true` property.\n   * Stable runners should have no extra properties.\n   * For more details, read the github-runners datasource readme.\n   * Check https://github.blog/changelog/label/actions/ for stable and deprecation dates.\n   */\n  private static readonly releases: Record<string, Release[] | undefined> = {\n    ubuntu: [\n      { version: '24.04' },\n      { version: '24.04-arm', isStable: false },\n      { version: '22.04' },\n      { version: '22.04-arm', isStable: false },\n      { version: '20.04', isDeprecated: true },\n      { version: '18.04', isDeprecated: true },\n      { version: '16.04', isDeprecated: true },\n    ],\n    macos: [\n      { version: '15', isStable: false },\n      { version: '15-large', isStable: false },\n      { version: '15-xlarge', isStable: false },\n      { version: '14' },\n      { version: '14-large' },\n      { version: '14-xlarge' },\n      { version: '13' },\n      { version: '13-large' },\n      { version: '13-xlarge' },\n      { version: '12-large', isDeprecated: true },\n      { version: '12', isDeprecated: true },\n      { version: '11', isDeprecated: true },\n      { version: '10.15', isDeprecated: true },\n    ],\n    windows: [\n      { version: '2025' },\n      { version: '2022' },\n      { version: '2019', isDeprecated: true },\n      { version: '2016', isDeprecated: true },\n    ],\n  };\n\n  public static isValidRunner(\n    runnerName: string,\n    runnerVersion: string,\n  ): boolean {\n    const runnerReleases = GithubRunnersDatasource.releases[runnerName];\n    if (!runnerReleases) {\n      return false;\n    }\n\n    const versionExists = runnerReleases.some(\n      ({ version }) => version === runnerVersion,\n    );\n\n    return runnerVersion === 'latest' || versionExists;\n  }\n\n  override readonly defaultVersioning = dockerVersioningId;\n\n  constructor() {\n    super(GithubRunnersDatasource.id);\n  }\n\n  override getReleases({\n    packageName,\n  }: GetReleasesConfig): Promise<ReleaseResult | null> {\n    const releases = GithubRunnersDatasource.releases[packageName];\n    const releaseResult: ReleaseResult | null = releases\n      ? {\n          releases,\n          sourceUrl: 'https://github.com/actions/runner-images',\n        }\n      : null;\n    return Promise.resolve(releaseResult);\n  }\n}\n"]}