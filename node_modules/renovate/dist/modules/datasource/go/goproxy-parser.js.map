{"version":3,"file":"goproxy-parser.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/go/goproxy-parser.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport moo from 'moo';\nimport * as memCache from '../../../util/cache/memory';\nimport { regEx } from '../../../util/regex';\nimport type { GoproxyItem } from './types';\n\n/**\n * Parse `GOPROXY` to the sequence of url + fallback strategy tags.\n *\n * @example\n * parseGoproxy('foo.example.com|bar.example.com,baz.example.com')\n * // [\n * //   { url: 'foo.example.com', fallback: '|' },\n * //   { url: 'bar.example.com', fallback: ',' },\n * //   { url: 'baz.example.com', fallback: '|' },\n * // ]\n *\n * @see https://golang.org/ref/mod#goproxy-protocol\n */\nexport function parseGoproxy(\n  input: string | undefined = process.env.GOPROXY,\n): GoproxyItem[] {\n  if (!is.string(input)) {\n    return [];\n  }\n\n  const cacheKey = `goproxy::${input}`;\n  const cachedResult = memCache.get<GoproxyItem[]>(cacheKey);\n  if (cachedResult) {\n    return cachedResult;\n  }\n\n  const result: GoproxyItem[] = input\n    .split(regEx(/([^,|]*(?:,|\\|))/))\n    .filter(Boolean)\n    .map((s) => s.split(/(?=,|\\|)/)) // TODO: #12872 lookahead\n    .map(([url, separator]) => ({\n      url,\n      fallback: separator === ',' ? ',' : '|',\n    }));\n\n  memCache.set(cacheKey, result);\n  return result;\n}\n\n// https://golang.org/pkg/path/#Match\nconst noproxyLexer = moo.states({\n  main: {\n    separator: {\n      match: /\\s*?,\\s*?/, // TODO #12870\n      value: (_: string) => '|',\n    },\n    asterisk: {\n      match: '*',\n      value: (_: string) => '[^/]*',\n    },\n    qmark: {\n      match: '?',\n      value: (_: string) => '[^/]',\n    },\n    characterRangeOpen: {\n      match: '[',\n      push: 'characterRange',\n      value: (_: string) => '[',\n    },\n    trailingSlash: {\n      match: /\\/$/,\n      value: (_: string) => '',\n    },\n    char: {\n      match: /[^*?\\\\[\\n]/,\n      value: (s: string) => s.replace(regEx('\\\\.', 'g'), '\\\\.'),\n    },\n    escapedChar: {\n      match: /\\\\./, // TODO #12870\n      value: (s: string) => s.slice(1),\n    },\n  },\n  characterRange: {\n    char: /[^\\\\\\]\\n]/, // TODO #12870\n    escapedChar: {\n      match: /\\\\./, // TODO #12870\n      value: (s: string) => s.slice(1),\n    },\n    characterRangeEnd: {\n      match: ']',\n      pop: 1,\n    },\n  },\n});\n\nexport function parseNoproxy(\n  input: unknown = process.env.GONOPROXY ?? process.env.GOPRIVATE,\n): RegExp | null {\n  if (!is.string(input)) {\n    return null;\n  }\n\n  const cacheKey = `noproxy::${input}`;\n  const cachedResult = memCache.get<RegExp | null>(cacheKey);\n  if (cachedResult !== undefined) {\n    return cachedResult;\n  }\n\n  const noproxyPattern = [...noproxyLexer.reset(input)]\n    .map(({ value }) => value)\n    .join('');\n\n  const result = noproxyPattern\n    ? regEx(`^(?:${noproxyPattern})(?:/.*)?$`)\n    : null;\n\n  memCache.set(cacheKey, result);\n  return result;\n}\n"]}