{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../lib/modules/datasource/common.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { logger } from '../../logger';\nimport { filterMap } from '../../util/filter-map';\nimport { regEx } from '../../util/regex';\nimport { defaultVersioning } from '../versioning';\nimport * as allVersioning from '../versioning';\nimport datasources from './api';\nimport { CustomDatasource } from './custom';\nimport type {\n  DatasourceApi,\n  GetPkgReleasesConfig,\n  ReleaseResult,\n} from './types';\n\nexport function getDatasourceFor(datasource: string): DatasourceApi | null {\n  if (datasource?.startsWith('custom.')) {\n    return getDatasourceFor(CustomDatasource.id);\n  }\n  return datasources.get(datasource) ?? null;\n}\n\nexport function getDefaultVersioning(\n  datasourceName: string | undefined,\n): string {\n  if (!datasourceName) {\n    return defaultVersioning.id;\n  }\n\n  const datasource = getDatasourceFor(datasourceName);\n\n  if (!datasource) {\n    logger.warn({ datasourceName }, 'Missing datasource!');\n    return defaultVersioning.id;\n  }\n\n  if (!datasource.defaultVersioning) {\n    return defaultVersioning.id;\n  }\n\n  return datasource.defaultVersioning;\n}\n\nexport function isGetPkgReleasesConfig(\n  input: unknown,\n): input is GetPkgReleasesConfig {\n  return (\n    is.nonEmptyStringAndNotWhitespace(\n      (input as GetPkgReleasesConfig).datasource,\n    ) &&\n    is.nonEmptyStringAndNotWhitespace(\n      (input as GetPkgReleasesConfig).packageName,\n    )\n  );\n}\n\nexport function applyVersionCompatibility(\n  releaseResult: ReleaseResult,\n  versionCompatibility: string | undefined,\n  currentCompatibility: string | undefined,\n): ReleaseResult {\n  if (!versionCompatibility) {\n    return releaseResult;\n  }\n\n  const versionCompatibilityRegEx = regEx(versionCompatibility);\n  releaseResult.releases = filterMap(releaseResult.releases, (release) => {\n    const regexResult = versionCompatibilityRegEx.exec(release.version);\n    if (!regexResult?.groups?.version) {\n      logger.trace(\n        { releaseVersion: release.version, versionCompatibility },\n        'versionCompatibility: Does not match regex',\n      );\n      return null;\n    }\n    if (regexResult?.groups?.compatibility !== currentCompatibility) {\n      logger.trace(\n        { releaseVersion: release.version, versionCompatibility },\n        'versionCompatibility: Does not match compatibility',\n      );\n      return null;\n    }\n    logger.trace(\n      {\n        releaseVersion: release.version,\n        versionCompatibility,\n        version: regexResult.groups.version,\n        compatibility: regexResult.groups.compatibility,\n      },\n      'versionCompatibility: matches',\n    );\n    release.version = regexResult.groups.version;\n    return release;\n  });\n\n  return releaseResult;\n}\n\nexport function applyExtractVersion(\n  releaseResult: ReleaseResult,\n  extractVersion: string | undefined,\n): ReleaseResult {\n  if (!extractVersion) {\n    return releaseResult;\n  }\n\n  const extractVersionRegEx = regEx(extractVersion);\n  releaseResult.releases = filterMap(releaseResult.releases, (release) => {\n    const version = extractVersionRegEx.exec(release.version)?.groups?.version;\n    if (!version) {\n      return null;\n    }\n\n    release.versionOrig = release.version;\n    release.version = version;\n    return release;\n  });\n\n  return releaseResult;\n}\n\nexport function filterValidVersions<\n  Config extends Pick<GetPkgReleasesConfig, 'versioning' | 'datasource'>,\n>(releaseResult: ReleaseResult, config: Config): ReleaseResult {\n  const versioningName =\n    config.versioning ?? getDefaultVersioning(config.datasource);\n  const versioning = allVersioning.get(versioningName);\n\n  releaseResult.releases = filterMap(releaseResult.releases, (release) =>\n    versioning.isVersion(release.version) ? release : null,\n  );\n\n  return releaseResult;\n}\n\nexport function sortAndRemoveDuplicates<\n  Config extends Pick<GetPkgReleasesConfig, 'versioning' | 'datasource'>,\n>(releaseResult: ReleaseResult, config: Config): ReleaseResult {\n  const versioningName =\n    config.versioning ?? getDefaultVersioning(config.datasource);\n  const versioning = allVersioning.get(versioningName);\n\n  releaseResult.releases = releaseResult.releases.sort((a, b) =>\n    versioning.sortVersions(a.version, b.version),\n  );\n\n  // Once releases are sorted, deduplication is straightforward and efficient\n  let previousVersion: string | null = null;\n  releaseResult.releases = filterMap(releaseResult.releases, (release) => {\n    if (previousVersion === release.version) {\n      return null;\n    }\n    previousVersion = release.version;\n    return release;\n  });\n\n  return releaseResult;\n}\n\nexport function applyConstraintsFiltering<\n  Config extends Pick<\n    GetPkgReleasesConfig,\n    | 'constraintsFiltering'\n    | 'versioning'\n    | 'datasource'\n    | 'constraints'\n    | 'packageName'\n  >,\n>(releaseResult: ReleaseResult, config: Config): ReleaseResult {\n  if (config?.constraintsFiltering !== 'strict') {\n    for (const release of releaseResult.releases) {\n      delete release.constraints;\n    }\n\n    return releaseResult;\n  }\n\n  const versioningName =\n    config.versioning ?? getDefaultVersioning(config.datasource);\n  const versioning = allVersioning.get(versioningName);\n\n  const configConstraints = config.constraints;\n  const filteredReleases: string[] = [];\n  const startingLength = releaseResult.releases.length;\n  releaseResult.releases = filterMap(releaseResult.releases, (release) => {\n    const releaseConstraints = release.constraints;\n    delete release.constraints;\n\n    if (!configConstraints || !releaseConstraints) {\n      return release;\n    }\n\n    for (const [name, configConstraint] of Object.entries(configConstraints)) {\n      if (!versioning.isValid(configConstraint)) {\n        logger.once.warn(\n          {\n            packageName: config.packageName,\n            constraint: configConstraint,\n            versioning: versioningName,\n          },\n          'Invalid constraint used with strict constraintsFiltering',\n        );\n        continue;\n      }\n\n      const constraint = releaseConstraints[name];\n      if (!is.nonEmptyArray(constraint)) {\n        // A release with no constraints is OK\n        continue;\n      }\n\n      let satisfiesConstraints = false;\n      for (const releaseConstraint of constraint) {\n        if (!releaseConstraint) {\n          satisfiesConstraints = true;\n          logger.once.debug(\n            {\n              packageName: config.packageName,\n              versioning: versioningName,\n              constraint: releaseConstraint,\n            },\n            'Undefined release constraint',\n          );\n          break;\n        }\n\n        if (!versioning.isValid(releaseConstraint)) {\n          logger.once.debug(\n            {\n              packageName: config.packageName,\n              versioning: versioningName,\n              constraint: releaseConstraint,\n            },\n            'Invalid release constraint',\n          );\n          break;\n        }\n\n        if (configConstraint === releaseConstraint) {\n          satisfiesConstraints = true;\n          break;\n        }\n\n        if (versioning.subset?.(configConstraint, releaseConstraint)) {\n          satisfiesConstraints = true;\n          break;\n        }\n\n        if (versioning.matches(configConstraint, releaseConstraint)) {\n          satisfiesConstraints = true;\n          break;\n        }\n      }\n\n      if (!satisfiesConstraints) {\n        filteredReleases.push(release.version);\n        return null;\n      }\n    }\n\n    return release;\n  });\n\n  if (filteredReleases.length) {\n    const count = filteredReleases.length;\n    const packageName = config.packageName;\n    const releases = filteredReleases.join(', ');\n    logger.debug(\n      `Filtered out ${count} non-matching releases out of ${startingLength} total for ${packageName} due to constraintsFiltering=strict: ${releases}`,\n    );\n  }\n\n  return releaseResult;\n}\n"]}