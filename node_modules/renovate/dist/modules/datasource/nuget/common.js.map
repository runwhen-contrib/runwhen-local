{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/nuget/common.ts"],"names":[],"mappings":";;AAQA,0CAEC;AAID,gCAYC;AAID,4CAuBC;AAQD,8CAYC;AAzED,4CAAyC;AACzC,+CAA4C;AAC5C,2CAA6C;AAC7C,kDAA2D;AAG3D,MAAM,WAAW,GAAG,IAAA,aAAK,EAAC,QAAQ,CAAC,CAAC;AAEpC,SAAgB,eAAe,CAAC,OAAe;IAC7C,OAAO,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAC1C,CAAC;AAED,MAAM,eAAe,GAAG,IAAA,aAAK,EAAC,KAAK,CAAC,CAAC;AAErC,SAAgB,UAAU,CAAC,GAA8B;IACvD,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;QACtC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,SAAS,GAAG,GAAG,CAAC;IAEpB,yFAAyF;IACzF,gDAAgD;IAChD,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IAEtD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAM,qBAAqB,GAAG,IAAA,aAAK,EAAC,mCAAmC,CAAC,CAAC;AAEzE,SAAgB,gBAAgB,CAAC,WAAmB;IAClD,MAAM,SAAS,GAAG,IAAA,cAAQ,EAAC,WAAW,CAAC,CAAC;IACxC,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CACV,EAAE,GAAG,EAAE,WAAW,EAAE,EACpB,uCAAuC,WAAW,EAAE,CACrD,CAAC;QACF,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;IACzD,CAAC;IACD,IAAI,eAAe,GAAG,CAAC,CAAC;IACxB,MAAM,oBAAoB,GAAG,qBAAqB,CAAC,IAAI,CACrD,SAAS,CAAC,IAAI,CACf,EAAE,MAAM,CAAC;IACV,IAAI,oBAAoB,EAAE,CAAC;QACzB,MAAM,EAAE,QAAQ,EAAE,GAAG,oBAAoB,CAAC;QAC1C,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC;QACpB,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;SAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;QAChD,eAAe,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC;IAC/B,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;AACtC,CAAC;AAED;;;;;GAKG;AACH,SAAgB,iBAAiB,CAAC,CAAS,EAAE,CAAS;IACpD,IAAI,WAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1B,IAAI,WAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1B,OAAO,WAAU,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,CAAC;QACX,CAAC;IACH,CAAC;SAAM,IAAI,WAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QACjC,OAAO,CAAC,CAAC,CAAC;IACZ,CAAC;SAAM,CAAC;QACN,OAAO,CAAC,CAAC;IACX,CAAC;AACH,CAAC","sourcesContent":["import { logger } from '../../../logger';\nimport { regEx } from '../../../util/regex';\nimport { parseUrl } from '../../../util/url';\nimport { api as versioning } from '../../versioning/nuget';\nimport type { ParsedRegistryUrl } from './types';\n\nconst buildMetaRe = regEx(/\\+.+$/g);\n\nexport function removeBuildMeta(version: string): string {\n  return version.replace(buildMetaRe, '');\n}\n\nconst urlWhitespaceRe = regEx(/\\s/g);\n\nexport function massageUrl(url: string | null | undefined): string | null {\n  if (url === null || url === undefined) {\n    return null;\n  }\n\n  let resultUrl = url;\n\n  // During `dotnet pack` certain URLs are being URL decoded which may introduce whitespace\n  // and causes Markdown link generation problems.\n  resultUrl = resultUrl.replace(urlWhitespaceRe, '%20');\n\n  return resultUrl;\n}\n\nconst protocolVersionRegExp = regEx(/#protocolVersion=(?<protocol>2|3)/);\n\nexport function parseRegistryUrl(registryUrl: string): ParsedRegistryUrl {\n  const parsedUrl = parseUrl(registryUrl);\n  if (!parsedUrl) {\n    logger.debug(\n      { urL: registryUrl },\n      `nuget registry failure: can't parse ${registryUrl}`,\n    );\n    return { feedUrl: registryUrl, protocolVersion: null };\n  }\n  let protocolVersion = 2;\n  const protocolVersionMatch = protocolVersionRegExp.exec(\n    parsedUrl.hash,\n  )?.groups;\n  if (protocolVersionMatch) {\n    const { protocol } = protocolVersionMatch;\n    parsedUrl.hash = '';\n    protocolVersion = Number.parseInt(protocol, 10);\n  } else if (parsedUrl.pathname.endsWith('.json')) {\n    protocolVersion = 3;\n  }\n\n  const feedUrl = parsedUrl.href;\n  return { feedUrl, protocolVersion };\n}\n\n/**\n * Compare two versions. Return:\n * - `1` if `a > b` or `b` is invalid\n * - `-1` if `a < b` or `a` is invalid\n * - `0` if `a == b` or both `a` and `b` are invalid\n */\nexport function sortNugetVersions(a: string, b: string): number {\n  if (versioning.isValid(a)) {\n    if (versioning.isValid(b)) {\n      return versioning.sortVersions(a, b);\n    } else {\n      return 1;\n    }\n  } else if (versioning.isValid(b)) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n"]}