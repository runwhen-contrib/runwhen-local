{"version":3,"file":"json.js","sourceRoot":"","sources":["../../../../../lib/modules/datasource/custom/formats/json.ts"],"names":[],"mappings":";;;AAAA,4CAAoD;AAIpD,MAAa,WAAW;IACtB,KAAK,CAAC,KAAK,CAAC,IAAU,EAAE,WAAmB;QACzC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC1D,OAAO,QAAQ,CAAC,IAAI,CAAC;IACvB,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,WAAmB;QAChC,MAAM,WAAW,GAAG,MAAM,IAAA,kBAAa,EAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAE7D,OAAO,IAAI,CAAC,KAAK,CAAC,WAAY,CAAC,CAAC;IAClC,CAAC;CACF;AAXD,kCAWC","sourcesContent":["import { readLocalFile } from '../../../../util/fs';\nimport type { Http } from '../../../../util/http';\nimport type { CustomDatasourceFetcher } from './types';\n\nexport class JSONFetcher implements CustomDatasourceFetcher {\n  async fetch(http: Http, registryURL: string): Promise<unknown> {\n    const response = await http.getJsonUnchecked(registryURL);\n    return response.body;\n  }\n\n  async readFile(registryURL: string): Promise<unknown> {\n    const fileContent = await readLocalFile(registryURL, 'utf8');\n\n    return JSON.parse(fileContent!);\n  }\n}\n"]}