{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/bun/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { logger } from '../../../logger';\nimport {\n  getParentDir,\n  getSiblingFileName,\n  readLocalFile,\n} from '../../../util/fs';\n\nimport { extractPackageJson } from '../npm/extract/common/package-file';\nimport type { NpmPackage } from '../npm/extract/types';\nimport type { NpmManagerData } from '../npm/types';\nimport type { ExtractConfig, PackageFile } from '../types';\nimport { filesMatchingWorkspaces } from './utils';\n\nfunction matchesFileName(fileNameWithPath: string, fileName: string): boolean {\n  return (\n    fileNameWithPath === fileName || fileNameWithPath.endsWith(`/${fileName}`)\n  );\n}\n\nexport async function processPackageFile(\n  packageFile: string,\n): Promise<PackageFile | null> {\n  const fileContent = await readLocalFile(packageFile, 'utf8');\n  if (!fileContent) {\n    logger.warn({ fileName: packageFile }, 'Could not read file content');\n    return null;\n  }\n  let packageJson: NpmPackage;\n  try {\n    packageJson = JSON.parse(fileContent);\n  } catch (err) {\n    logger.debug({ err }, 'Error parsing package.json');\n    return null;\n  }\n  const result = extractPackageJson(packageJson, packageFile);\n  if (!result) {\n    logger.debug({ packageFile }, 'No dependencies found');\n    return null;\n  }\n  return {\n    ...result,\n    packageFile,\n  };\n}\nexport async function extractAllPackageFiles(\n  config: ExtractConfig,\n  matchedFiles: string[],\n): Promise<PackageFile[]> {\n  const packageFiles: PackageFile<NpmManagerData>[] = [];\n  const allLockFiles = matchedFiles.filter(\n    (file) =>\n      matchesFileName(file, 'bun.lock') || matchesFileName(file, 'bun.lockb'),\n  );\n  if (allLockFiles.length === 0) {\n    logger.debug('No bun lockfiles found');\n    return packageFiles;\n  }\n  const allPackageJson = matchedFiles.filter((file) =>\n    matchesFileName(file, 'package.json'),\n  );\n  for (const lockFile of allLockFiles) {\n    const packageFile = getSiblingFileName(lockFile, 'package.json');\n    const res = await processPackageFile(packageFile);\n    if (res) {\n      packageFiles.push({ ...res, lockFiles: [lockFile] });\n    }\n    // Check if package.json contains workspaces\n    const workspaces = res?.managerData?.workspaces;\n\n    if (!is.array(workspaces, is.string)) {\n      continue;\n    }\n\n    logger.debug(`Found bun workspaces in ${packageFile}`);\n    const pwd = getParentDir(packageFile);\n    const workspacePackageFiles = filesMatchingWorkspaces(\n      pwd,\n      allPackageJson,\n      workspaces,\n    );\n    if (workspacePackageFiles.length) {\n      logger.debug({ workspacePackageFiles }, 'Found bun workspace files');\n      for (const workspaceFile of workspacePackageFiles) {\n        const res = await processPackageFile(workspaceFile);\n        if (res) {\n          packageFiles.push({ ...res, lockFiles: [lockFile] });\n        }\n      }\n    }\n  }\n\n  return packageFiles;\n}\n"]}