{"version":3,"file":"parsing.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pre-commit/parsing.ts"],"names":[],"mappings":";;AAWA,0EAIC;AASD,kFASC;AAjCD,iDAA8C;AAG9C;;;;;;;GAOG;AACH,SAAgB,+BAA+B,CAC7C,IAAa;IAEb,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAA,eAAM,EAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AACvE,CAAC;AAED;;;;;;GAMG;AACH,SAAgB,mCAAmC,CACjD,IAAa;IAEb,OAAO,CAAC,CAAC,CACP,IAAI;QACJ,OAAO,IAAI,KAAK,QAAQ;QACxB,IAAA,eAAM,EAAC,MAAM,EAAE,IAAI,CAAC;QACpB,IAAA,eAAM,EAAC,KAAK,EAAE,IAAI,CAAC,CACpB,CAAC;AACJ,CAAC","sourcesContent":["import { hasKey } from '../../../util/object';\nimport type { PreCommitConfig, PreCommitDependency } from './types';\n\n/**\n * Type guard to determine whether the file matches pre-commit configuration format\n * Example original yaml:\n *\n *   repos\n *   - repo: https://github.com/user/repo\n *     rev: v1.0.0\n */\nexport function matchesPrecommitConfigHeuristic(\n  data: unknown,\n): data is PreCommitConfig {\n  return !!(data && typeof data === 'object' && hasKey('repos', data));\n}\n\n/**\n * Type guard to determine whether a given repo definition defines a pre-commit Git hook dependency.\n * Example original yaml portion\n *\n *   - repo: https://github.com/user/repo\n *     rev: v1.0.0\n */\nexport function matchesPrecommitDependencyHeuristic(\n  data: unknown,\n): data is PreCommitDependency {\n  return !!(\n    data &&\n    typeof data === 'object' &&\n    hasKey('repo', data) &&\n    hasKey('rev', data)\n  );\n}\n"]}