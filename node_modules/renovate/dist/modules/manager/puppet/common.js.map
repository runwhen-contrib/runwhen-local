{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../lib/modules/manager/puppet/common.ts"],"names":[],"mappings":";;;AAOA,8CAyBC;AAED,kCAIC;AAtCD,+CAA4C;AAC5C,2CAA6C;AAEhC,QAAA,oCAAoC,GAAG,IAAA,aAAK,EACvD,+BAA+B,CAChC,CAAC;AAEF,SAAgB,iBAAiB,CAC/B,GAAW,EACX,SAAkB;IAElB,MAAM,aAAa,GAAG,4CAAoC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAErE,IAAI,aAAa,EAAE,MAAM,EAAE,CAAC;QAC1B,OAAO,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;IACtE,CAAC;SAAM,CAAC;QACN,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,GAAG;iBACP,OAAO,CAAC,IAAA,aAAK,EAAC,UAAU,CAAC,EAAE,EAAE,CAAC;iBAC9B,OAAO,CAAC,IAAA,aAAK,EAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;iBAC5B,OAAO,CAAC,IAAA,aAAK,EAAC,0BAA0B,CAAC,EAAE,EAAE,CAAC;iBAC9C,OAAO,CAAC,IAAA,aAAK,EAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;QAClC,CAAC;QAED,MAAM,GAAG,GAAG,IAAA,cAAQ,EAAC,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,GAAG,EAAE,CAAC;YACT,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;IAC7E,CAAC;AACH,CAAC;AAED,SAAgB,WAAW,CAAC,MAAc,EAAE,SAAqB;IAC/D,OAAO,CACL,SAAS,EAAE,IAAI,KAAK,YAAY,IAAI,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,CACxE,CAAC;AACJ,CAAC","sourcesContent":["import { regEx } from '../../../util/regex';\nimport { parseUrl } from '../../../util/url';\n\nexport const RE_REPOSITORY_GENERIC_GIT_SSH_FORMAT = regEx(\n  /^git@[^:]*:(?<repository>.+)$/,\n);\n\nexport function parseGitOwnerRepo(\n  git: string,\n  githubUrl: boolean,\n): string | null {\n  const genericGitSsh = RE_REPOSITORY_GENERIC_GIT_SSH_FORMAT.exec(git);\n\n  if (genericGitSsh?.groups) {\n    return genericGitSsh.groups.repository.replace(regEx(/\\.git$/), '');\n  } else {\n    if (githubUrl) {\n      return git\n        .replace(regEx(/^github:/), '')\n        .replace(regEx(/^git\\+/), '')\n        .replace(regEx(/^https:\\/\\/github\\.com\\//), '')\n        .replace(regEx(/\\.git$/), '');\n    }\n\n    const url = parseUrl(git);\n\n    if (!url) {\n      return null;\n    }\n\n    return url.pathname.replace(regEx(/\\.git$/), '').replace(regEx(/^\\//), '');\n  }\n}\n\nexport function isGithubUrl(gitUrl: string, parsedUrl: URL | null): boolean {\n  return (\n    parsedUrl?.host === 'github.com' || gitUrl.startsWith('git@github.com')\n  );\n}\n"]}