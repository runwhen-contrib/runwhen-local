{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/manager/gradle-wrapper/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import os from 'node:os';\nimport { dirname, join } from 'upath';\nimport { GlobalConfig } from '../../../config/global';\nimport { logger } from '../../../logger';\nimport {\n  chmodLocalFile,\n  localPathExists,\n  readLocalFile,\n  statLocalFile,\n} from '../../../util/fs';\nimport { regEx } from '../../../util/regex';\nimport gradleVersioning from '../../versioning/gradle';\nimport { parseJavaToolchainVersion } from '../gradle/parser';\nimport type { GradleVersionExtract } from './types';\n\nexport const extraEnv = {\n  GRADLE_OPTS:\n    '-Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true -Dorg.gradle.daemon=false -Dorg.gradle.caching=false',\n};\n\nexport function gradleWrapperFileName(): string {\n  if (\n    os.platform() === 'win32' &&\n    GlobalConfig.get('binarySource') !== 'docker'\n  ) {\n    return 'gradlew.bat';\n  }\n  return './gradlew';\n}\n\nexport async function prepareGradleCommand(\n  gradlewFile: string,\n): Promise<string | null> {\n  const gradlewStat = await statLocalFile(gradlewFile);\n  if (gradlewStat?.isFile() === true) {\n    // if the file is not executable by others\n    if (os.platform() !== 'win32' && (gradlewStat.mode & 0o1) === 0) {\n      logger.debug('Gradle wrapper is missing the executable bit');\n      // add the execution permission to the owner, group and others\n      await chmodLocalFile(gradlewFile, gradlewStat.mode | 0o111);\n    }\n    return gradleWrapperFileName();\n  }\n  return null;\n}\n\n/**\n * Find compatible java version for gradle.\n * see https://docs.gradle.org/current/userguide/compatibility.html\n * @param gradleVersion current gradle version\n * @param gradlewFile path to gradle wrapper\n * @returns A Java semver range\n */\nexport async function getJavaConstraint(\n  gradleVersion: string | null | undefined,\n  gradlewFile: string,\n): Promise<string> {\n  const major = gradleVersion ? gradleVersioning.getMajor(gradleVersion) : null;\n  const minor = gradleVersion ? gradleVersioning.getMinor(gradleVersion) : null;\n\n  if (major) {\n    // https://docs.gradle.org/8.8/release-notes.html#daemon-toolchains\n    if (major > 8 || (major === 8 && minor && minor >= 8)) {\n      const toolChainVersion = await getJvmConfiguration(gradlewFile);\n      if (toolChainVersion) {\n        return `^${toolChainVersion}.0.0`;\n      }\n    }\n    // https://docs.gradle.org/6.7/release-notes.html#new-jvm-ecosystem-features\n    if (major > 6 || (major === 6 && minor && minor >= 7)) {\n      const languageVersion = await getJavaLanguageVersion(gradlewFile);\n      if (languageVersion) {\n        return `^${languageVersion}.0.0`;\n      }\n    }\n    if (major > 8 || (major === 8 && minor && minor >= 5)) {\n      return '^21.0.0';\n    }\n    if (major > 7 || (major === 7 && minor && minor >= 3)) {\n      return '^17.0.0';\n    }\n    if (major === 7) {\n      return '^16.0.0';\n    }\n    // first public gradle version was 2.0\n    if (major > 0 && major < 5) {\n      return '^8.0.0';\n    }\n  }\n\n  return '^11.0.0';\n}\n\n/**\n * https://docs.gradle.org/current/userguide/gradle_daemon.html#sec:daemon_jvm_criteria\n */\nexport async function getJvmConfiguration(\n  gradlewFile: string,\n): Promise<string | null> {\n  const daemonJvmFile = join(\n    dirname(gradlewFile),\n    'gradle/gradle-daemon-jvm.properties',\n  );\n  const daemonJvm = await readLocalFile(daemonJvmFile, 'utf8');\n  if (daemonJvm) {\n    const TOOLCHAIN_VERSION_REGEX = regEx(\n      '^(?:toolchainVersion\\\\s*=\\\\s*)(?<version>\\\\d+)$',\n      'm',\n    );\n    const toolChainMatch = TOOLCHAIN_VERSION_REGEX.exec(daemonJvm);\n    if (toolChainMatch?.groups) {\n      return toolChainMatch.groups.version;\n    }\n  }\n\n  return null;\n}\n\n/**\n * https://docs.gradle.org/current/userguide/toolchains.html#sec:consuming\n */\nexport async function getJavaLanguageVersion(\n  gradlewFile: string,\n): Promise<string | null> {\n  const localGradleDir = dirname(gradlewFile);\n  let buildFileName = join(localGradleDir, 'build.gradle');\n  if (!(await localPathExists(buildFileName))) {\n    buildFileName = join(localGradleDir, 'build.gradle.kts');\n  }\n\n  const buildFileContent = await readLocalFile(buildFileName, 'utf8');\n  if (!buildFileContent) {\n    logger.debug('build.gradle or build.gradle.kts not found');\n    return null;\n  }\n\n  return parseJavaToolchainVersion(buildFileContent);\n}\n\n// https://regex101.com/r/IcOs7P/1\nconst DISTRIBUTION_URL_REGEX = regEx(\n  '^(?:distributionUrl\\\\s*=\\\\s*)(?<url>\\\\S*-(?<version>\\\\d+\\\\.\\\\d+(?:\\\\.\\\\d+)?(?:-\\\\w+)*)-(?<type>bin|all)\\\\.zip)\\\\s*$',\n  'm',\n);\n\nexport function extractGradleVersion(\n  fileContent: string,\n): GradleVersionExtract | null {\n  const distributionUrlMatch = DISTRIBUTION_URL_REGEX.exec(fileContent);\n  if (distributionUrlMatch?.groups) {\n    return {\n      url: distributionUrlMatch.groups.url,\n      version: distributionUrlMatch.groups.version,\n    };\n  }\n  logger.debug(\n    'Gradle wrapper version and url could not be extracted from properties - skipping update',\n  );\n\n  return null;\n}\n"]}