{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../lib/modules/manager/npm/update/locked-dependency/index.ts"],"names":[],"mappings":";;AAMA,wDAyBC;;AA/BD,kDAA+C;AAC/C,mFAAmD;AAEnD,oEAA8C;AAC9C,8DAAwC;AAEjC,KAAK,UAAU,sBAAsB,CAC1C,MAA0B;IAE1B,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;IACxD,IAAI,CAAC,CAAC,gBAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,gBAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC;QACxE,eAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,+BAA+B,CAAC,CAAC;QACzD,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC;IACrC,CAAC;IACD,IAAI,QAAQ,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE,CAAC;QAC3C,MAAM,GAAG,GAAG,MAAM,WAAW,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QAC7D,OAAO,GAAG,CAAC;IACb,CAAC;IACD,IAAI,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;QACnC,OAAO,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IACD,IAAI,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC;QACxC,eAAM,CAAC,KAAK,CACV,mEAAmE,CACpE,CAAC;QACF,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC;IACnC,CAAC;IAED,eAAM,CAAC,KAAK,CAAC,oDAAoD,QAAQ,EAAE,CAAC,CAAC;IAE7E,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC;AACrC,CAAC","sourcesContent":["import { logger } from '../../../../../logger';\nimport semver from '../../../../versioning/semver';\nimport type { UpdateLockedConfig, UpdateLockedResult } from '../../../types';\nimport * as packageLock from './package-lock';\nimport * as yarnLock from './yarn-lock';\n\nexport async function updateLockedDependency(\n  config: UpdateLockedConfig,\n): Promise<UpdateLockedResult> {\n  const { currentVersion, newVersion, lockFile } = config;\n  if (!(semver.isVersion(currentVersion) && semver.isVersion(newVersion))) {\n    logger.warn({ config }, 'Update versions are not valid');\n    return { status: 'update-failed' };\n  }\n  if (lockFile.endsWith('package-lock.json')) {\n    const res = await packageLock.updateLockedDependency(config);\n    return res;\n  }\n  if (lockFile.endsWith('yarn.lock')) {\n    return yarnLock.updateLockedDependency(config);\n  }\n  if (lockFile.endsWith('pnpm-lock.yaml')) {\n    logger.debug(\n      'Cannot patch pnpm lock file directly - falling back to using pnpm',\n    );\n    return { status: 'unsupported' };\n  }\n\n  logger.debug(`updateLockedDependency(): unsupported lock file: ${lockFile}`);\n\n  return { status: 'update-failed' };\n}\n"]}