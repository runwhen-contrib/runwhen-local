{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../lib/modules/manager/npm/schema.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\nimport { Json, LooseRecord } from '../../../util/schema-utils';\n\nexport const PnpmCatalogsSchema = z.object({\n  catalog: z.optional(z.record(z.string())),\n  catalogs: z.optional(z.record(z.record(z.string()))),\n});\n\nexport const PnpmWorkspaceFileSchema = z\n  .object({\n    packages: z.array(z.string()),\n  })\n  .and(PnpmCatalogsSchema);\n\nexport const PackageManagerSchema = z\n  .string()\n  .transform((val) => val.split('@'))\n  .transform(([name, ...version]) => ({ name, version: version.join('@') }));\n\nexport const PackageJsonSchema = z.object({\n  engines: LooseRecord(z.string()).optional(),\n  dependencies: LooseRecord(z.string()).optional(),\n  devDependencies: LooseRecord(z.string()).optional(),\n  peerDependencies: LooseRecord(z.string()).optional(),\n  packageManager: PackageManagerSchema.optional(),\n});\n\nexport type PackageJsonSchema = z.infer<typeof PackageJsonSchema>;\n\nexport const PackageJson = Json.pipe(PackageJsonSchema);\n\nexport const PackageLockV3Schema = z.object({\n  lockfileVersion: z.literal(3),\n  packages: LooseRecord(\n    z\n      .string()\n      .transform((x) => x.replace(/^node_modules\\//, ''))\n      .refine((x) => x.trim() !== ''),\n    z.object({ version: z.string() }),\n  ),\n});\n\nexport const PackageLockPreV3Schema = z\n  .object({\n    lockfileVersion: z.union([z.literal(2), z.literal(1)]),\n    dependencies: LooseRecord(z.object({ version: z.string() })),\n  })\n  .transform(({ lockfileVersion, dependencies: packages }) => ({\n    lockfileVersion,\n    packages,\n  }));\n\nexport const PackageLock = Json.pipe(\n  z.union([PackageLockV3Schema, PackageLockPreV3Schema]),\n).transform(({ packages, lockfileVersion }) => {\n  const lockedVersions: Record<string, string> = {};\n  for (const [entry, val] of Object.entries(packages)) {\n    lockedVersions[entry] = val.version;\n  }\n  return { lockedVersions, lockfileVersion };\n});\n"]}