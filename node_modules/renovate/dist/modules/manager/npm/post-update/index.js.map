{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/post-update/index.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO: types (#22198)\nimport is from '@sindresorhus/is';\nimport deepmerge from 'deepmerge';\nimport upath from 'upath';\nimport { logger } from '../../../../logger';\nimport { ExternalHostError } from '../../../../types/errors/external-host-error';\nimport { getChildProcessEnv } from '../../../../util/exec/env';\nimport {\n  ensureCacheDir,\n  getSiblingFileName,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../../util/fs';\nimport { getFile, getRepoStatus } from '../../../../util/git';\nimport type { FileChange } from '../../../../util/git/types';\nimport * as hostRules from '../../../../util/host-rules';\nimport { newlineRegex, regEx } from '../../../../util/regex';\nimport { ensureTrailingSlash } from '../../../../util/url';\nimport { dump, parseSingleYaml } from '../../../../util/yaml';\nimport { NpmDatasource } from '../../../datasource/npm';\nimport { scm } from '../../../platform/scm';\nimport type { PackageFile, PostUpdateConfig, Upgrade } from '../../types';\nimport { getZeroInstallPaths } from '../extract/yarn';\nimport type { NpmManagerData } from '../types';\nimport {\n  composeLockFile,\n  getNpmrcContent,\n  parseLockFile,\n  resetNpmrcContent,\n  updateNpmrcContent,\n} from '../utils';\nimport * as npm from './npm';\nimport * as pnpm from './pnpm';\nimport { processHostRules } from './rules';\nimport type {\n  AdditionalPackageFiles,\n  ArtifactError,\n  DetermineLockFileDirsResult,\n  WriteExistingFilesResult,\n  YarnRcYmlFile,\n} from './types';\nimport * as yarn from './yarn';\n\n// Strips empty values, deduplicates, and returns the directories from filenames\nconst getDirs = (arr: (string | null | undefined)[]): string[] =>\n  Array.from(new Set(arr.filter(is.string)));\n\nexport function determineLockFileDirs(\n  config: PostUpdateConfig,\n  packageFiles: AdditionalPackageFiles,\n): DetermineLockFileDirsResult {\n  const npmLockDirs: (string | undefined)[] = [];\n  const yarnLockDirs: (string | undefined)[] = [];\n  const pnpmShrinkwrapDirs: (string | undefined)[] = [];\n\n  for (const upgrade of config.upgrades) {\n    if (\n      upgrade.updateType === 'lockFileMaintenance' ||\n      upgrade.isRemediation === true ||\n      upgrade.isLockfileUpdate === true\n    ) {\n      yarnLockDirs.push(upgrade.managerData?.yarnLock);\n      npmLockDirs.push(upgrade.managerData?.npmLock);\n      pnpmShrinkwrapDirs.push(upgrade.managerData?.pnpmShrinkwrap);\n    }\n  }\n\n  if (\n    config.upgrades.every(\n      (upgrade: Upgrade) =>\n        upgrade.updateType === 'lockFileMaintenance' ||\n        upgrade.isLockfileUpdate,\n    )\n  ) {\n    return {\n      yarnLockDirs: getDirs(yarnLockDirs),\n      npmLockDirs: getDirs(npmLockDirs),\n      pnpmShrinkwrapDirs: getDirs(pnpmShrinkwrapDirs),\n    };\n  }\n\n  function getPackageFile(\n    fileName: string,\n  ): Partial<PackageFile<NpmManagerData>> {\n    logger.trace('Looking for packageFile: ' + fileName);\n\n    for (const packageFile of packageFiles.npm!) {\n      if (packageFile.packageFile === fileName) {\n        logger.trace({ packageFile }, 'Found packageFile');\n        return packageFile;\n      }\n      logger.trace('No match');\n    }\n    return {};\n  }\n\n  // TODO #22198\n  for (const p of config.updatedPackageFiles!) {\n    logger.trace(`Checking ${String(p.path)} for lock files`);\n    const packageFile = getPackageFile(p.path);\n    // istanbul ignore if\n    if (!packageFile.managerData) {\n      continue;\n    }\n    // push full lock file names and convert them later\n    yarnLockDirs.push(packageFile.managerData.yarnLock);\n    npmLockDirs.push(packageFile.managerData.npmLock);\n    pnpmShrinkwrapDirs.push(packageFile.managerData.pnpmShrinkwrap);\n  }\n\n  return {\n    yarnLockDirs: getDirs(yarnLockDirs),\n    npmLockDirs: getDirs(npmLockDirs),\n    pnpmShrinkwrapDirs: getDirs(pnpmShrinkwrapDirs),\n  };\n}\n\nexport async function writeExistingFiles(\n  config: PostUpdateConfig,\n  packageFiles: AdditionalPackageFiles,\n): Promise<void> {\n  if (!packageFiles.npm) {\n    return;\n  }\n  const npmFiles = packageFiles.npm;\n  logger.debug(\n    { packageFiles: npmFiles.map((n) => n.packageFile) },\n    'Writing package.json files',\n  );\n  for (const packageFile of npmFiles) {\n    // istanbul ignore if\n    if (!packageFile.managerData) {\n      continue;\n    }\n    // TODO #22198\n    const basedir = upath.dirname(packageFile.packageFile!);\n    const npmrc = packageFile.npmrc;\n    const npmrcFilename = upath.join(basedir, '.npmrc');\n    if (is.string(npmrc)) {\n      try {\n        await writeLocalFile(npmrcFilename, npmrc.replace(/\\n?$/, '\\n'));\n      } catch (err) /* istanbul ignore next */ {\n        logger.warn({ npmrcFilename, err }, 'Error writing .npmrc');\n      }\n    }\n    const npmLock = packageFile.managerData.npmLock;\n    if (npmLock) {\n      const npmLockPath = npmLock;\n      logger.debug(`Writing ${npmLock}`);\n      let existingNpmLock: string;\n      try {\n        existingNpmLock = (await getFile(npmLock)) ?? '';\n      } catch (err) /* istanbul ignore next */ {\n        logger.warn({ err }, 'Error reading npm lock file');\n        existingNpmLock = '';\n      }\n      const { detectedIndent, lockFileParsed: npmLockParsed } =\n        parseLockFile(existingNpmLock);\n      if (npmLockParsed) {\n        const packageNames =\n          'packages' in npmLockParsed\n            ? Object.keys(npmLockParsed.packages)\n            : [];\n        const widens: string[] = [];\n        let lockFileChanged = false;\n        for (const upgrade of config.upgrades) {\n          if (upgrade.lockFiles && !upgrade.lockFiles.includes(npmLock)) {\n            continue;\n          }\n          if (!upgrade.managerData) {\n            continue;\n          }\n          if (\n            upgrade.rangeStrategy === 'widen' &&\n            upgrade.managerData.npmLock === npmLock\n          ) {\n            // TODO #22198\n            widens.push(upgrade.depName!);\n          }\n          const { depName } = upgrade;\n          for (const packageName of packageNames) {\n            if (\n              'packages' in npmLockParsed &&\n              (packageName === `node_modules/${depName}` ||\n                packageName.startsWith(`node_modules/${depName}/`))\n            ) {\n              logger.trace({ packageName }, 'Massaging out package name');\n              lockFileChanged = true;\n              delete npmLockParsed.packages[packageName];\n            }\n          }\n        }\n        if (widens.length) {\n          logger.debug(\n            `Removing ${String(widens)} from ${npmLock} to force an update`,\n          );\n          lockFileChanged = true;\n          try {\n            if ('dependencies' in npmLockParsed && npmLockParsed.dependencies) {\n              widens.forEach((depName) => {\n                // TODO #22198\n                delete npmLockParsed.dependencies![depName];\n              });\n            }\n          } catch /* istanbul ignore next */ {\n            logger.warn(\n              { npmLock },\n              'Error massaging package-lock.json for widen',\n            );\n          }\n        }\n        if (lockFileChanged) {\n          logger.debug('Massaging npm lock file before writing to disk');\n          existingNpmLock = composeLockFile(npmLockParsed, detectedIndent);\n        }\n        await writeLocalFile(npmLockPath, existingNpmLock);\n      }\n    }\n  }\n}\n\nexport async function writeUpdatedPackageFiles(\n  config: PostUpdateConfig,\n): Promise<void> {\n  logger.trace({ config }, 'writeUpdatedPackageFiles');\n  logger.debug('Writing any updated package files');\n  if (!config.updatedPackageFiles) {\n    logger.debug('No files found');\n    return;\n  }\n  const supportedLockFiles = ['package-lock.json', 'yarn.lock'];\n  for (const packageFile of config.updatedPackageFiles) {\n    if (packageFile.type !== 'addition') {\n      continue;\n    }\n    if (\n      supportedLockFiles.some((fileName) => packageFile.path.endsWith(fileName))\n    ) {\n      logger.debug(`Writing lock file: ${packageFile.path}`);\n      // TODO #22198\n\n      await writeLocalFile(packageFile.path, packageFile.contents!);\n      continue;\n    }\n    if (\n      !(\n        packageFile.path.endsWith('package.json') ||\n        packageFile.path.endsWith('pnpm-workspace.yaml')\n      )\n    ) {\n      continue;\n    }\n    logger.debug(`Writing ${packageFile.path}`);\n    await writeLocalFile(packageFile.path, packageFile.contents!);\n  }\n}\n\n// istanbul ignore next\nasync function updateYarnOffline(\n  lockFileDir: string,\n  updatedArtifacts: FileChange[],\n): Promise<void> {\n  try {\n    const resolvedPaths: string[] = [];\n    const yarnrcYml = await getFile(upath.join(lockFileDir, '.yarnrc.yml'));\n    const yarnrc = await getFile(upath.join(lockFileDir, '.yarnrc'));\n\n    // As .yarnrc.yml overrides .yarnrc in Yarn 1 (https://git.io/JUcco)\n    // both files may exist, so check for .yarnrc.yml first\n    if (yarnrcYml) {\n      // Yarn 2 (offline cache and zero-installs)\n      const paths = getZeroInstallPaths(yarnrcYml);\n      resolvedPaths.push(...paths.map((p) => upath.join(lockFileDir, p)));\n    } else if (yarnrc) {\n      // Yarn 1 (offline mirror)\n      const mirrorLine = yarnrc\n        .split(newlineRegex)\n        .find((line) => line.startsWith('yarn-offline-mirror '));\n      if (mirrorLine) {\n        const mirrorPath = ensureTrailingSlash(\n          mirrorLine.split(' ')[1].replace(regEx(/\"/g), ''),\n        );\n        resolvedPaths.push(upath.join(lockFileDir, mirrorPath));\n      }\n    }\n    logger.debug({ resolvedPaths }, 'updateYarnOffline resolvedPaths');\n\n    if (resolvedPaths.length) {\n      const status = await getRepoStatus();\n      for (const f of status.modified.concat(status.not_added)) {\n        if (resolvedPaths.some((p) => f.startsWith(p))) {\n          updatedArtifacts.push({\n            type: 'addition',\n            path: f,\n            contents: await readLocalFile(f),\n          });\n        }\n      }\n      for (const f of status.deleted || []) {\n        if (resolvedPaths.some((p) => f.startsWith(p))) {\n          updatedArtifacts.push({ type: 'deletion', path: f });\n        }\n      }\n    }\n  } catch (err) {\n    logger.error({ err }, 'Error updating yarn offline packages');\n  }\n}\n\n// TODO: move to ./yarn.ts\n// exported for testing\nexport async function updateYarnBinary(\n  lockFileDir: string,\n  updatedArtifacts: FileChange[],\n  existingYarnrcYmlContent: string | undefined | null,\n): Promise<string | undefined | null> {\n  let yarnrcYml = existingYarnrcYmlContent;\n  try {\n    const yarnrcYmlFilename = upath.join(lockFileDir, '.yarnrc.yml');\n    yarnrcYml ??= (await getFile(yarnrcYmlFilename)) ?? undefined;\n    const newYarnrcYml = await readLocalFile(yarnrcYmlFilename, 'utf8');\n    if (!is.string(yarnrcYml) || !is.string(newYarnrcYml)) {\n      return existingYarnrcYmlContent;\n    }\n\n    // TODO: use schema (#9610)\n    const oldYarnPath = parseSingleYaml<YarnRcYmlFile>(yarnrcYml)?.yarnPath;\n    const newYarnPath = parseSingleYaml<YarnRcYmlFile>(newYarnrcYml)?.yarnPath;\n    if (\n      !is.nonEmptyStringAndNotWhitespace(oldYarnPath) ||\n      !is.nonEmptyStringAndNotWhitespace(newYarnPath)\n    ) {\n      return existingYarnrcYmlContent;\n    }\n\n    const oldYarnFullPath = upath.join(lockFileDir, oldYarnPath);\n    const newYarnFullPath = upath.join(lockFileDir, newYarnPath);\n    logger.debug({ oldYarnPath, newYarnPath }, 'Found updated Yarn binary');\n\n    yarnrcYml = yarnrcYml.replace(oldYarnPath, newYarnPath);\n    updatedArtifacts.push(\n      {\n        type: 'addition',\n        path: yarnrcYmlFilename,\n        contents: yarnrcYml,\n      },\n      {\n        type: 'deletion',\n        path: oldYarnFullPath,\n      },\n      {\n        type: 'addition',\n        path: newYarnFullPath,\n        contents: await readLocalFile(newYarnFullPath, 'utf8'),\n        isExecutable: true,\n      },\n    );\n  } catch (err) /* istanbul ignore next */ {\n    logger.error({ err }, 'Error updating Yarn binary');\n  }\n  return existingYarnrcYmlContent && yarnrcYml;\n}\n\nexport async function getAdditionalFiles(\n  config: PostUpdateConfig<NpmManagerData>,\n  packageFiles: AdditionalPackageFiles,\n): Promise<WriteExistingFilesResult> {\n  logger.trace({ config }, 'getAdditionalFiles');\n  const artifactErrors: ArtifactError[] = [];\n  const updatedArtifacts: FileChange[] = [];\n  if (!packageFiles.npm?.length) {\n    return { artifactErrors, updatedArtifacts };\n  }\n  if (!config.updateLockFiles) {\n    logger.debug('Skipping lock file generation');\n    return { artifactErrors, updatedArtifacts };\n  }\n  logger.debug('Getting updated lock files');\n  if (\n    config.isLockFileMaintenance &&\n    config.reuseExistingBranch &&\n    (await scm.branchExists(config.branchName))\n  ) {\n    logger.debug('Skipping lockFileMaintenance update');\n    return { artifactErrors, updatedArtifacts };\n  }\n  const dirs = determineLockFileDirs(config, packageFiles);\n  logger.trace({ dirs }, 'lock file dirs');\n  await writeExistingFiles(config, packageFiles);\n  await writeUpdatedPackageFiles(config);\n\n  const { additionalNpmrcContent, additionalYarnRcYml } = processHostRules();\n\n  const env = {\n    ...getChildProcessEnv(),\n    NPM_CONFIG_CACHE: await ensureCacheDir('npm'),\n    YARN_CACHE_FOLDER: await ensureCacheDir('yarn'),\n    YARN_GLOBAL_FOLDER: await ensureCacheDir('berry'),\n    npm_config_store: await ensureCacheDir('pnpm'),\n    NODE_ENV: 'dev',\n  };\n\n  let token: string | undefined;\n  try {\n    ({ token } = hostRules.find({\n      hostType: 'github',\n      url: 'https://api.github.com/',\n    }));\n    token = token ? /* istanbul ignore next */ `${token}@` : token;\n  } catch (err) /* istanbul ignore next */ {\n    logger.warn({ err }, 'Error getting token for packageFile');\n  }\n  const tokenRe = regEx(`${token ?? ''}`, 'g', false);\n  for (const npmLock of dirs.npmLockDirs) {\n    const lockFileDir = upath.dirname(npmLock);\n    const npmrcContent = await getNpmrcContent(lockFileDir);\n    await updateNpmrcContent(lockFileDir, npmrcContent, additionalNpmrcContent);\n    const fileName = upath.basename(npmLock);\n    logger.debug(`Generating ${fileName} for ${lockFileDir}`);\n    const upgrades = config.upgrades.filter(\n      (upgrade) => upgrade.managerData?.npmLock === npmLock,\n    );\n    const res = await npm.generateLockFile(\n      lockFileDir,\n      env,\n      fileName,\n      config,\n      upgrades,\n    );\n    if (res.error) {\n      // istanbul ignore if\n      if (res.stderr?.includes('No matching version found for')) {\n        for (const upgrade of config.upgrades) {\n          if (\n            res.stderr.includes(\n              `No matching version found for ${upgrade.depName}`,\n            )\n          ) {\n            logger.debug(\n              { dependency: upgrade.depName, type: 'npm' },\n              'lock file failed for the dependency being updated - skipping branch creation',\n            );\n            const err = new Error(\n              'lock file failed for the dependency being updated - skipping branch creation',\n            );\n            throw new ExternalHostError(err, NpmDatasource.id);\n          }\n        }\n      }\n      artifactErrors.push({\n        lockFile: npmLock,\n        stderr: res.stderr,\n      });\n    } else if (res.lockFile) {\n      const existingContent = await getFile(\n        npmLock,\n        config.reuseExistingBranch ? config.branchName : config.baseBranch,\n      );\n      if (res.lockFile === existingContent) {\n        logger.debug(`${npmLock} hasn't changed`);\n      } else {\n        logger.debug(`${npmLock} needs updating`);\n        updatedArtifacts.push({\n          type: 'addition',\n          path: npmLock,\n          // TODO: can this be undefined? (#22198)\n\n          contents: res.lockFile.replace(tokenRe, ''),\n        });\n      }\n    }\n    await resetNpmrcContent(lockFileDir, npmrcContent);\n  }\n\n  for (const yarnLock of dirs.yarnLockDirs) {\n    const lockFileDir = upath.dirname(yarnLock);\n    const npmrcContent = await getNpmrcContent(lockFileDir);\n    await updateNpmrcContent(lockFileDir, npmrcContent, additionalNpmrcContent);\n    let yarnRcYmlFilename: string | undefined;\n    let existingYarnrcYmlContent: string | undefined | null;\n    if (additionalYarnRcYml) {\n      yarnRcYmlFilename = getSiblingFileName(yarnLock, '.yarnrc.yml');\n      existingYarnrcYmlContent = await readLocalFile(yarnRcYmlFilename, 'utf8');\n      if (existingYarnrcYmlContent) {\n        try {\n          // TODO: use schema (#9610)\n          const existingYarnrRcYml = parseSingleYaml<Record<string, unknown>>(\n            existingYarnrcYmlContent,\n          );\n\n          const updatedYarnYrcYml = deepmerge(\n            existingYarnrRcYml,\n            yarn.fuzzyMatchAdditionalYarnrcYml(\n              additionalYarnRcYml,\n              existingYarnrRcYml,\n            ),\n          );\n\n          await writeLocalFile(yarnRcYmlFilename, dump(updatedYarnYrcYml));\n          logger.debug('Added authentication to .yarnrc.yml');\n        } catch (err) {\n          logger.warn({ err }, 'Error appending .yarnrc.yml content');\n        }\n      }\n    }\n    logger.debug(`Generating yarn.lock for ${lockFileDir}`);\n    const lockFileName = upath.join(lockFileDir, 'yarn.lock');\n    const upgrades = config.upgrades.filter(\n      (upgrade) => upgrade.managerData?.yarnLock === yarnLock,\n    );\n    const res = await yarn.generateLockFile(lockFileDir, env, config, upgrades);\n    if (res.error) {\n      // istanbul ignore if\n      if (res.stderr?.includes(`Couldn't find any versions for`)) {\n        for (const upgrade of config.upgrades) {\n          /* eslint-disable no-useless-escape */\n          if (\n            res.stderr.includes(\n              `Couldn't find any versions for \\\\\\\"${upgrade.depName}\\\\\\\"`,\n            )\n          ) {\n            logger.debug(\n              { dependency: upgrade.depName, type: 'yarn' },\n              'lock file failed for the dependency being updated - skipping branch creation',\n            );\n            throw new ExternalHostError(\n              new Error(\n                'lock file failed for the dependency being updated - skipping branch creation',\n              ),\n              NpmDatasource.id,\n            );\n          }\n          /* eslint-enable no-useless-escape */\n        }\n      }\n      artifactErrors.push({\n        lockFile: yarnLock,\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        stderr: res.stderr || res.stdout,\n      });\n    } else {\n      const existingContent = await getFile(\n        lockFileName,\n        config.reuseExistingBranch ? config.branchName : config.baseBranch,\n      );\n      if (res.lockFile === existingContent) {\n        logger.debug(\"yarn.lock hasn't changed\");\n      } else {\n        logger.debug('yarn.lock needs updating');\n        updatedArtifacts.push({\n          type: 'addition',\n          path: lockFileName,\n          // TODO #22198\n          contents: res.lockFile!,\n        });\n        await updateYarnOffline(lockFileDir, updatedArtifacts);\n      }\n\n      // istanbul ignore if: already tested seperately, needs additional test?\n      if (upgrades.some(yarn.isYarnUpdate)) {\n        existingYarnrcYmlContent = await updateYarnBinary(\n          lockFileDir,\n          updatedArtifacts,\n          existingYarnrcYmlContent,\n        );\n      }\n    }\n    await resetNpmrcContent(lockFileDir, npmrcContent);\n    // istanbul ignore if: needs test\n    if (existingYarnrcYmlContent) {\n      // TODO #22198\n      await writeLocalFile(yarnRcYmlFilename!, existingYarnrcYmlContent);\n    }\n  }\n\n  for (const pnpmShrinkwrap of dirs.pnpmShrinkwrapDirs) {\n    const lockFileDir = upath.dirname(pnpmShrinkwrap);\n    const npmrcContent = await getNpmrcContent(lockFileDir);\n    await updateNpmrcContent(lockFileDir, npmrcContent, additionalNpmrcContent);\n    logger.debug(`Generating pnpm-lock.yaml for ${lockFileDir}`);\n    const upgrades = config.upgrades.filter(\n      (upgrade) => upgrade.managerData?.pnpmShrinkwrap === pnpmShrinkwrap,\n    );\n    const res = await pnpm.generateLockFile(lockFileDir, env, config, upgrades);\n    if (res.error) {\n      // istanbul ignore if\n      if (res.stdout?.includes(`No compatible version found:`)) {\n        for (const upgrade of config.upgrades) {\n          if (\n            res.stdout.includes(\n              `No compatible version found: ${upgrade.depName}`,\n            )\n          ) {\n            logger.debug(\n              { dependency: upgrade.depName, type: 'pnpm' },\n              'lock file failed for the dependency being updated - skipping branch creation',\n            );\n            throw new ExternalHostError(\n              Error(\n                'lock file failed for the dependency being updated - skipping branch creation',\n              ),\n              NpmDatasource.id,\n            );\n          }\n        }\n      }\n      artifactErrors.push({\n        lockFile: pnpmShrinkwrap,\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        stderr: res.stderr || res.stdout,\n      });\n    } else {\n      const existingContent = await getFile(\n        pnpmShrinkwrap,\n        config.reuseExistingBranch ? config.branchName : config.baseBranch,\n      );\n      if (res.lockFile === existingContent) {\n        logger.debug(\"pnpm-lock.yaml hasn't changed\");\n      } else {\n        logger.debug('pnpm-lock.yaml needs updating');\n        updatedArtifacts.push({\n          type: 'addition',\n          path: pnpmShrinkwrap,\n          // TODO: can be undefined? (#22198)\n          contents: res.lockFile!,\n        });\n      }\n    }\n    await resetNpmrcContent(lockFileDir, npmrcContent);\n  }\n\n  return { artifactErrors, updatedArtifacts };\n}\n"]}