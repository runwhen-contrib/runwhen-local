{"version":3,"file":"npm.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/post-update/npm.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO: types (#22198)\nimport is from '@sindresorhus/is';\nimport semver from 'semver';\nimport upath from 'upath';\nimport { GlobalConfig } from '../../../../config/global';\nimport {\n  SYSTEM_INSUFFICIENT_DISK_SPACE,\n  TEMPORARY_ERROR,\n} from '../../../../constants/error-messages';\nimport { logger } from '../../../../logger';\nimport { exec } from '../../../../util/exec';\nimport type {\n  ExecOptions,\n  ExtraEnv,\n  ToolConstraint,\n} from '../../../../util/exec/types';\nimport {\n  deleteLocalFile,\n  localPathExists,\n  readLocalFile,\n  renameLocalFile,\n} from '../../../../util/fs';\nimport { minimatch } from '../../../../util/minimatch';\nimport { Result } from '../../../../util/result';\nimport { trimSlashes } from '../../../../util/url';\nimport type { PostUpdateConfig, Upgrade } from '../../types';\nimport { PackageLock } from '../schema';\nimport { composeLockFile, parseLockFile } from '../utils';\nimport { getNodeToolConstraint } from './node-version';\nimport type { GenerateLockFileResult } from './types';\nimport { getPackageManagerVersion, lazyLoadPackageJson } from './utils';\n\nasync function getNpmConstraintFromPackageLock(\n  lockFileDir: string,\n  filename: string,\n): Promise<string | null> {\n  const packageLockFileName = upath.join(lockFileDir, filename);\n  const packageLockContents = await readLocalFile(packageLockFileName, 'utf8');\n  const packageLockJson = Result.parse(\n    packageLockContents,\n    PackageLock,\n  ).unwrapOrNull();\n  if (!packageLockJson) {\n    logger.debug(`Could not parse ${packageLockFileName}`);\n    return null;\n  }\n  const { lockfileVersion } = packageLockJson;\n  if (lockfileVersion === 1) {\n    logger.debug(`Using npm constraint <7 for lockfileVersion=1`);\n    return `<7`;\n  }\n  if (lockfileVersion === 2) {\n    logger.debug(`Using npm constraint <9 for lockfileVersion=2`);\n    return `<9`;\n  }\n  logger.debug(\n    `Using npm constraint >=9 for lockfileVersion=${lockfileVersion}`,\n  );\n  return `>=9`;\n}\n\nexport async function generateLockFile(\n  lockFileDir: string,\n  env: NodeJS.ProcessEnv,\n  filename: string,\n  config: Partial<PostUpdateConfig> = {},\n  upgrades: Upgrade[] = [],\n): Promise<GenerateLockFileResult> {\n  // TODO: don't assume package-lock.json is in the same directory\n  const lockFileName = upath.join(lockFileDir, filename);\n\n  logger.debug(`Spawning npm install to create ${lockFileDir}/${filename}`);\n  const { skipInstalls, postUpdateOptions } = config;\n\n  let lockFile: string | null = null;\n  try {\n    const lazyPkgJson = lazyLoadPackageJson(lockFileDir);\n    const npmToolConstraint: ToolConstraint = {\n      toolName: 'npm',\n      constraint:\n        config.constraints?.npm ??\n        getPackageManagerVersion('npm', await lazyPkgJson.getValue()) ??\n        (await getNpmConstraintFromPackageLock(lockFileDir, filename)) ??\n        null,\n    };\n    const supportsPreferDedupeFlag =\n      !npmToolConstraint.constraint ||\n      semver.intersects('>=7.0.0', npmToolConstraint.constraint);\n    const commands: string[] = [];\n    let cmdOptions = '';\n    if (\n      (postUpdateOptions?.includes('npmDedupe') === true &&\n        !supportsPreferDedupeFlag) ||\n      skipInstalls === false\n    ) {\n      logger.debug('Performing node_modules install');\n      cmdOptions += '--no-audit';\n    } else {\n      logger.debug('Updating lock file only');\n      cmdOptions += '--package-lock-only --no-audit';\n    }\n\n    if (postUpdateOptions?.includes('npmDedupe') && supportsPreferDedupeFlag) {\n      logger.debug('Deduplicate dependencies on installation');\n      cmdOptions += ' --prefer-dedupe';\n    }\n\n    if (!GlobalConfig.get('allowScripts') || config.ignoreScripts) {\n      cmdOptions += ' --ignore-scripts';\n    }\n\n    const extraEnv: ExtraEnv = {\n      NPM_CONFIG_CACHE: env.NPM_CONFIG_CACHE,\n      npm_config_store: env.npm_config_store,\n    };\n    const execOptions: ExecOptions = {\n      cwdFile: lockFileName,\n      extraEnv,\n      toolConstraints: [\n        await getNodeToolConstraint(config, upgrades, lockFileDir, lazyPkgJson),\n        npmToolConstraint,\n      ],\n      docker: {},\n    };\n    // istanbul ignore if\n    if (GlobalConfig.get('exposeAllEnv')) {\n      extraEnv.NPM_AUTH = env.NPM_AUTH;\n      extraEnv.NPM_EMAIL = env.NPM_EMAIL;\n    }\n\n    if (!upgrades.every((upgrade) => upgrade.isLockfileUpdate)) {\n      // This command updates the lock file based on package.json\n      commands.push(`npm install ${cmdOptions}`.trim());\n    }\n\n    // rangeStrategy = update-lockfile\n    const lockUpdates = upgrades.filter((upgrade) => upgrade.isLockfileUpdate);\n\n    // divide the deps in two categories: workspace and root\n    const { lockRootUpdates, lockWorkspacesUpdates, workspaces, rootDeps } =\n      divideWorkspaceAndRootDeps(lockFileDir, lockUpdates);\n\n    if (workspaces.size && lockWorkspacesUpdates.length) {\n      logger.debug('Performing lockfileUpdate (npm-workspaces)');\n      for (const workspace of workspaces) {\n        const currentWorkspaceUpdates = lockWorkspacesUpdates\n          .filter((update) => update.workspace === workspace)\n          .map((update) => update.managerData?.packageKey)\n          .filter((packageKey) => !rootDeps.has(packageKey));\n\n        if (currentWorkspaceUpdates.length) {\n          const updateCmd = `npm install ${cmdOptions} --workspace=${workspace} ${currentWorkspaceUpdates.join(\n            ' ',\n          )}`;\n          commands.push(updateCmd);\n        }\n      }\n    }\n\n    if (lockRootUpdates.length) {\n      logger.debug('Performing lockfileUpdate (npm)');\n      const updateCmd =\n        `npm install ${cmdOptions} ` +\n        lockRootUpdates\n          .map((update) => update.managerData?.packageKey)\n          .join(' ');\n      commands.push(updateCmd);\n    }\n\n    if (upgrades.some((upgrade) => upgrade.isRemediation)) {\n      // We need to run twice to get the correct lock file\n      commands.push(`npm install ${cmdOptions}`.trim());\n    }\n\n    // postUpdateOptions\n    if (\n      config.postUpdateOptions?.includes('npmDedupe') &&\n      !supportsPreferDedupeFlag\n    ) {\n      logger.debug('Performing npm dedupe after installation');\n      commands.push('npm dedupe');\n    }\n\n    if (upgrades.find((upgrade) => upgrade.isLockFileMaintenance)) {\n      logger.debug(\n        `Removing ${lockFileName} first due to lock file maintenance upgrade`,\n      );\n      try {\n        await deleteLocalFile(lockFileName);\n      } catch (err) /* istanbul ignore next */ {\n        logger.debug(\n          { err, lockFileName },\n          'Error removing `package-lock.json` for lock file maintenance',\n        );\n      }\n    }\n\n    // Run the commands\n    await exec(commands, execOptions);\n\n    // massage to shrinkwrap if necessary\n    if (\n      filename === 'npm-shrinkwrap.json' &&\n      (await localPathExists(upath.join(lockFileDir, 'package-lock.json')))\n    ) {\n      await renameLocalFile(\n        upath.join(lockFileDir, 'package-lock.json'),\n        upath.join(lockFileDir, 'npm-shrinkwrap.json'),\n      );\n    }\n\n    // Read the result\n    // TODO #22198\n    lockFile = (await readLocalFile(\n      upath.join(lockFileDir, filename),\n      'utf8',\n    ))!;\n\n    // Massage lockfile counterparts of package.json that were modified\n    // because npm install was called with an explicit version for rangeStrategy=update-lockfile\n    if (lockUpdates.length) {\n      const { detectedIndent, lockFileParsed } = parseLockFile(lockFile);\n      if (\n        lockFileParsed?.lockfileVersion === 2 ||\n        lockFileParsed?.lockfileVersion === 3\n      ) {\n        lockUpdates.forEach((lockUpdate) => {\n          const depType = lockUpdate.depType as\n            | 'dependencies'\n            | 'optionalDependencies';\n\n          // TODO #22198\n          if (\n            lockFileParsed.packages?.['']?.[depType]?.[lockUpdate.packageName!]\n          ) {\n            lockFileParsed.packages[''][depType][lockUpdate.packageName!] =\n              lockUpdate.newValue!;\n          }\n        });\n        lockFile = composeLockFile(lockFileParsed, detectedIndent);\n      }\n    }\n  } catch (err) /* istanbul ignore next */ {\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.debug(\n      {\n        err,\n        type: 'npm',\n      },\n      'lock file error',\n    );\n    if (err.stderr?.includes('ENOSPC: no space left on device')) {\n      throw new Error(SYSTEM_INSUFFICIENT_DISK_SPACE);\n    }\n    return { error: true, stderr: err.stderr };\n  }\n  return { error: !lockFile, lockFile };\n}\n\nexport function divideWorkspaceAndRootDeps(\n  lockFileDir: string,\n  lockUpdates: Upgrade[],\n): {\n  lockRootUpdates: Upgrade[];\n  lockWorkspacesUpdates: Upgrade[];\n  workspaces: Set<string>;\n  rootDeps: Set<string>;\n} {\n  const lockRootUpdates: Upgrade[] = []; // stores all upgrades which are present in root package.json\n  const lockWorkspacesUpdates: Upgrade[] = []; // stores all upgrades which are present in workspaces package.json\n  const workspaces = new Set<string>(); // name of all workspaces\n  const rootDeps = new Set<string>(); // packageName of all upgrades in root package.json (makes it check duplicate deps in root)\n\n  // divide the deps in two categories: workspace and root\n  for (const upgrade of lockUpdates) {\n    upgrade.managerData ??= {};\n    upgrade.managerData.packageKey = generatePackageKey(\n      upgrade.packageName!,\n      upgrade.newVersion!,\n    );\n    if (\n      upgrade.managerData.workspacesPackages?.length &&\n      is.string(upgrade.packageFile)\n    ) {\n      const workspacePatterns = upgrade.managerData.workspacesPackages; // glob pattern or directory name/path\n      const packageFileDir = trimSlashes(\n        upgrade.packageFile.replace('package.json', ''),\n      );\n\n      // workspaceDir = packageFileDir - lockFileDir\n      const workspaceDir = trimSlashes(\n        packageFileDir.startsWith(lockFileDir)\n          ? packageFileDir.slice(lockFileDir.length)\n          : packageFileDir,\n      );\n\n      if (is.nonEmptyString(workspaceDir)) {\n        let workspaceName: string | undefined;\n        // compare workspaceDir to workspace patterns\n        // stop when the first match is found and\n        // add workspaceDir to workspaces set and upgrade object\n        for (const workspacePattern of workspacePatterns) {\n          const massagedPattern = (workspacePattern as string).replace(\n            /^\\.\\//,\n            '',\n          );\n          if (minimatch(massagedPattern).match(workspaceDir)) {\n            workspaceName = workspaceDir;\n            break;\n          }\n        }\n        if (workspaceName) {\n          if (\n            !rootDeps.has(upgrade.managerData.packageKey) // prevent same dep from existing in root and workspace\n          ) {\n            workspaces.add(workspaceName);\n            upgrade.workspace = workspaceName;\n            lockWorkspacesUpdates.push(upgrade);\n          }\n        } else {\n          logger.warn(\n            { workspacePatterns, workspaceDir },\n            'workspaceDir not found',\n          );\n        }\n        continue;\n      }\n    }\n    lockRootUpdates.push(upgrade);\n    rootDeps.add(upgrade.managerData.packageKey);\n  }\n\n  return { lockRootUpdates, lockWorkspacesUpdates, workspaces, rootDeps };\n}\n\nfunction generatePackageKey(packageName: string, version: string): string {\n  return `${packageName}@${version}`;\n}\n"]}