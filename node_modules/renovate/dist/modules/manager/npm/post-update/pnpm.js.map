{"version":3,"file":"pnpm.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/post-update/pnpm.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport semver from 'semver';\nimport { quote } from 'shlex';\nimport upath from 'upath';\nimport { GlobalConfig } from '../../../../config/global';\nimport { TEMPORARY_ERROR } from '../../../../constants/error-messages';\nimport { logger } from '../../../../logger';\nimport { exec } from '../../../../util/exec';\nimport type {\n  ExecOptions,\n  ExtraEnv,\n  ToolConstraint,\n} from '../../../../util/exec/types';\nimport {\n  deleteLocalFile,\n  getSiblingFileName,\n  localPathExists,\n  readLocalFile,\n} from '../../../../util/fs';\nimport { uniqueStrings } from '../../../../util/string';\nimport { parseSingleYaml } from '../../../../util/yaml';\nimport type { PostUpdateConfig, Upgrade } from '../../types';\nimport { getNodeToolConstraint } from './node-version';\nimport type { GenerateLockFileResult, PnpmLockFile } from './types';\nimport { getPackageManagerVersion, lazyLoadPackageJson } from './utils';\n\nfunction getPnpmConstraintFromUpgrades(upgrades: Upgrade[]): string | null {\n  for (const upgrade of upgrades) {\n    if (upgrade.depName === 'pnpm' && upgrade.newVersion) {\n      return upgrade.newVersion;\n    }\n  }\n  return null;\n}\n\nexport async function generateLockFile(\n  lockFileDir: string,\n  env: NodeJS.ProcessEnv,\n  config: PostUpdateConfig,\n  upgrades: Upgrade[] = [],\n): Promise<GenerateLockFileResult> {\n  const lockFileName = upath.join(lockFileDir, 'pnpm-lock.yaml');\n  logger.debug(`Spawning pnpm install to create ${lockFileName}`);\n  let lockFile: string | null = null;\n  let stdout: string | undefined;\n  let stderr: string | undefined;\n  const commands: string[] = [];\n  try {\n    const lazyPgkJson = lazyLoadPackageJson(lockFileDir);\n    const pnpmToolConstraint: ToolConstraint = {\n      toolName: 'pnpm',\n      constraint:\n        getPnpmConstraintFromUpgrades(upgrades) ?? // if pnpm is being upgraded, it comes first\n        config.constraints?.pnpm ?? // from user config or extraction\n        getPackageManagerVersion('pnpm', await lazyPgkJson.getValue()) ?? // look in package.json > packageManager or engines\n        (await getConstraintFromLockFile(lockFileName)), // use lockfileVersion to find pnpm version range\n    };\n\n    const extraEnv: ExtraEnv = {\n      NPM_CONFIG_CACHE: env.NPM_CONFIG_CACHE,\n      npm_config_store: env.npm_config_store,\n    };\n    const execOptions: ExecOptions = {\n      cwdFile: lockFileName,\n      extraEnv,\n      docker: {},\n      toolConstraints: [\n        await getNodeToolConstraint(config, upgrades, lockFileDir, lazyPgkJson),\n        pnpmToolConstraint,\n      ],\n    };\n    // istanbul ignore if\n    if (GlobalConfig.get('exposeAllEnv')) {\n      extraEnv.NPM_AUTH = env.NPM_AUTH;\n      extraEnv.NPM_EMAIL = env.NPM_EMAIL;\n    }\n\n    const pnpmWorkspaceFilePath = getSiblingFileName(\n      lockFileName,\n      'pnpm-workspace.yaml',\n    );\n\n    let args = '--lockfile-only';\n\n    // pnpm v9+ is doing recursive automatically when it detects workspaces.\n    //\n    // If it's not a workspaces project/monorepo, but single project with unrelated other npm project in source tree (for example, a git submodule),\n    // `--recursive` will install un-wanted project.\n    // we should avoid this.\n    if (\n      pnpmToolConstraint.constraint &&\n      !semver.intersects(pnpmToolConstraint.constraint, '>=9') &&\n      (await localPathExists(pnpmWorkspaceFilePath))\n    ) {\n      args += ' --recursive';\n    }\n    if (!GlobalConfig.get('allowScripts') || config.ignoreScripts) {\n      args += ' --ignore-scripts';\n      args += ' --ignore-pnpmfile';\n    }\n    logger.trace({ args }, 'pnpm command options');\n\n    const lockUpdates = upgrades.filter((upgrade) => upgrade.isLockfileUpdate);\n\n    if (lockUpdates.length !== upgrades.length) {\n      // This command updates the lock file based on package.json\n      commands.push(`pnpm install ${args}`);\n    }\n\n    // rangeStrategy = update-lockfile\n    if (lockUpdates.length) {\n      logger.debug('Performing lockfileUpdate (pnpm)');\n      commands.push(\n        `pnpm update --no-save ${lockUpdates\n          // TODO: types (#22198)\n          .map((update) => `${update.packageName!}@${update.newVersion!}`)\n          .filter(uniqueStrings)\n          .map(quote)\n          .join(' ')} ${args}`,\n      );\n    }\n\n    // postUpdateOptions\n    if (config.postUpdateOptions?.includes('pnpmDedupe')) {\n      commands.push('pnpm dedupe --config.ignore-scripts=true');\n    }\n\n    if (upgrades.find((upgrade) => upgrade.isLockFileMaintenance)) {\n      logger.debug(\n        `Removing ${lockFileName} first due to lock file maintenance upgrade`,\n      );\n      try {\n        await deleteLocalFile(lockFileName);\n      } catch (err) /* istanbul ignore next */ {\n        logger.debug(\n          { err, lockFileName },\n          'Error removing `pnpm-lock.yaml` for lock file maintenance',\n        );\n      }\n    }\n\n    await exec(commands, execOptions);\n    lockFile = await readLocalFile(lockFileName, 'utf8');\n  } catch (err) /* istanbul ignore next */ {\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.debug(\n      {\n        commands,\n        err,\n        stdout,\n        stderr,\n        type: 'pnpm',\n      },\n      'lock file error',\n    );\n    return { error: true, stderr: err.stderr, stdout: err.stdout };\n  }\n  return { lockFile };\n}\n\nexport async function getConstraintFromLockFile(\n  lockFileName: string,\n): Promise<string | null> {\n  let constraint: string | null = null;\n  try {\n    const lockfileContent = await readLocalFile(lockFileName, 'utf8');\n    if (!lockfileContent) {\n      logger.trace(`Empty pnpm lock file: ${lockFileName}`);\n      return null;\n    }\n    // TODO: use schema (#9610)\n    const pnpmLock = parseSingleYaml<PnpmLockFile>(lockfileContent);\n    if (\n      !is.number(pnpmLock?.lockfileVersion) &&\n      !is.numericString(pnpmLock?.lockfileVersion)\n    ) {\n      logger.trace(`Invalid pnpm lockfile version: ${lockFileName}`);\n      return null;\n    }\n    // find matching lockfileVersion and use its constraints\n    // if no match found use lockfileVersion 5\n    // lockfileVersion 5 is the minimum version required to generate the pnpm-lock.yaml file\n    const { lowerConstraint, upperConstraint } = lockToPnpmVersionMapping.find(\n      (m) => m.lockfileVersion === pnpmLock.lockfileVersion,\n    ) ?? {\n      lockfileVersion: 5.0,\n      lowerConstraint: '>=3',\n      upperConstraint: '<3.5.0',\n    };\n    constraint = lowerConstraint;\n    if (upperConstraint) {\n      constraint += ` ${upperConstraint}`;\n    }\n  } catch (err) {\n    logger.warn({ err }, 'Error getting pnpm constraints from lock file');\n  }\n  return constraint;\n}\n\n/**\n * pnpm lockfiles have corresponding version numbers called \"lockfileVersion\"\n * each lockfileVersion can only be generated by a certain pnpm version range\n * eg. lockfileVersion: 5.4 can only be generated by pnpm version >=7 && <8\n * official list can be found here : https://github.com/pnpm/spec/tree/master/lockfile\n * we use the mapping present below to find the compatible pnpm version range for a given lockfileVersion\n *\n * the various terms used in the mapping are explained below:\n * lowerConstraint : lowest pnpm version that can generate the lockfileVersion\n * upperConstraint : highest pnpm version that can generate the lockfileVersion\n * lowerBound      : highest pnpm version that is less than the lowerConstraint\n * upperBound      : lowest pnpm version that is greater than the upperConstraint\n *\n * To handle future lockfileVersions, we need to:\n * 1. add a upperBound and upperConstraint to the current latest lockfileVersion\n * 2. add an object for the new lockfileVersion with lowerBound and lowerConstraint\n *\n * lockfileVersion from v6 on are strings\n */\nconst lockToPnpmVersionMapping: LockToPnpmVersionMapping[] = [\n  { lockfileVersion: '9.0', lowerConstraint: '>=9' },\n  {\n    lockfileVersion: '6.0',\n    lowerConstraint: '>=7.24.2',\n    upperConstraint: '<9',\n  },\n  {\n    lockfileVersion: 5.4,\n    lowerConstraint: '>=7',\n    upperConstraint: '<8',\n  },\n  {\n    lockfileVersion: 5.3,\n    lowerConstraint: '>=6',\n    upperConstraint: '<7',\n  },\n  {\n    lockfileVersion: 5.2,\n    lowerConstraint: '>=5.10.0',\n    upperConstraint: '<6',\n  },\n  {\n    lockfileVersion: 5.1,\n    lowerConstraint: '>=3.5.0',\n    upperConstraint: '<5.9.3',\n  },\n];\n\ninterface LockToPnpmVersionMapping {\n  lockfileVersion: string | number;\n  lowerConstraint: string;\n  upperConstraint?: string;\n}\n"]}