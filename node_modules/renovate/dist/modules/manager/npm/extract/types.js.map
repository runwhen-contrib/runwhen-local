{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/extract/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { PackageJson } from 'type-fest';\n\nexport type NpmPackageDependency = PackageJson.Dependency;\nexport type DependenciesMeta = Record<\n  string,\n  { optional: boolean; built: boolean; unplugged: boolean }\n>;\n\nexport type NpmPackage = PackageJson & {\n  renovate?: unknown;\n  _from?: any;\n  _args?: any;\n  _id?: any;\n  dependenciesMeta?: DependenciesMeta;\n  overrides?: OverrideDependency;\n  volta?: PackageJson.Dependency;\n  pnpm?: {\n    overrides?: PackageJson.Dependency;\n  };\n};\n\nexport type LockFileEntry = Record<\n  string,\n  { version: string; integrity?: boolean }\n>;\n\nexport interface LockFile {\n  lockedVersions?: Record<string, string>;\n  lockedVersionsWithPath?: Record<\n    string,\n    Record<string, Record<string, string>>\n  >;\n  lockedVersionsWithCatalog?: Record<string, Record<string, string>>;\n  lockfileVersion?: number; // cache version for Yarn\n  isYarn1?: boolean;\n}\n\nexport interface PnpmWorkspaceFile {\n  packages: string[];\n  catalog?: Record<string, string>;\n  catalogs?: Record<string, Record<string, string>>;\n}\n\n/**\n * A pnpm catalog is either the default catalog (catalog:, catalogs:default), or\n * a named one (catalogs:<name>)\n */\nexport interface PnpmCatalog {\n  name: string;\n  dependencies: NpmPackageDependency;\n}\n\nexport type OverrideDependency = Record<string, RecursiveOverride>;\n\nexport type RecursiveOverride = string | { [_: string]: RecursiveOverride };\n"]}