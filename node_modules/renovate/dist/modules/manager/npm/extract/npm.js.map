{"version":3,"file":"npm.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/extract/npm.ts"],"names":[],"mappings":";;AAKA,gCAiBC;AAtBD,+CAA4C;AAC5C,4CAAoD;AACpD,sCAAwC;AAGjC,KAAK,UAAU,UAAU,CAAC,QAAgB;IAC/C,MAAM,eAAe,GAAG,MAAM,IAAA,kBAAa,EAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9D,IAAI,CAAC,eAAe,EAAE,CAAC;QACrB,eAAM,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,EAAE,8BAA8B,CAAC,CAAC;QAC3D,OAAO,EAAE,cAAc,EAAE,EAAE,EAAE,CAAC;IAChC,CAAC;IAED,MAAM,cAAc,GAAG,oBAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;IAC9D,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QAC5B,eAAM,CAAC,KAAK,CACV,EAAE,QAAQ,EAAE,GAAG,EAAE,cAAc,CAAC,KAAK,EAAE,EACvC,+BAA+B,CAChC,CAAC;QACF,OAAO,EAAE,cAAc,EAAE,EAAE,EAAE,CAAC;IAChC,CAAC;IAED,OAAO,cAAc,CAAC,IAAI,CAAC;AAC7B,CAAC","sourcesContent":["import { logger } from '../../../../logger';\nimport { readLocalFile } from '../../../../util/fs';\nimport { PackageLock } from '../schema';\nimport type { LockFile } from './types';\n\nexport async function getNpmLock(filePath: string): Promise<LockFile> {\n  const lockfileContent = await readLocalFile(filePath, 'utf8');\n  if (!lockfileContent) {\n    logger.debug({ filePath }, 'Npm: unable to read lockfile');\n    return { lockedVersions: {} };\n  }\n\n  const parsedLockfile = PackageLock.safeParse(lockfileContent);\n  if (!parsedLockfile.success) {\n    logger.debug(\n      { filePath, err: parsedLockfile.error },\n      'Npm: unable to parse lockfile',\n    );\n    return { lockedVersions: {} };\n  }\n\n  return parsedLockfile.data;\n}\n"]}