{"version":3,"file":"yarnrc.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/extract/yarnrc.ts"],"names":[],"mappings":";;AA0BA,gEAmBC;AAED,0DAMC;AAED,gDAeC;;AAtED,kEAAkC;AAClC,6BAAwB;AACxB,+CAA4C;AAC5C,kDAA+C;AAC/C,oDAAiD;AACjD,gEAAqD;AAErD,MAAM,eAAe,GAAG,mBAAI,CAAC,IAAI,CAC/B,OAAC,CAAC,MAAM,CAAC;IACP,iBAAiB,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACxC,SAAS,EAAE,OAAC;SACT,MAAM,CACL,OAAC,CAAC,MAAM,CAAC;QACP,iBAAiB,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KACzC,CAAC,CACH;SACA,QAAQ,EAAE;CACd,CAAC,CACH,CAAC;AAIF,MAAM,aAAa,GAAG,IAAA,aAAK,EACzB,gEAAgE,CACjE,CAAC;AAEF,SAAgB,0BAA0B,CACxC,YAAoB;IAEpB,MAAM,eAAe,GAAG,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;SAC9D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;SACpB,MAAM,CAAC,YAAE,CAAC,MAAM,CAAC,CAAC;IAErB,MAAM,UAAU,GAAe,EAAE,CAAC;IAClC,KAAK,MAAM,aAAa,IAAI,eAAe,EAAE,CAAC;QAC5C,IAAI,aAAa,CAAC,KAAK,EAAE,CAAC;YACxB,UAAU,CAAC,SAAS,KAAK,EAAE,CAAC;YAC5B,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACjD,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,iBAAiB;gBACzD,aAAa,CAAC,WAAW,CAAC;QAC9B,CAAC;aAAM,CAAC;YACN,UAAU,CAAC,iBAAiB,GAAG,aAAa,CAAC,WAAW,CAAC;QAC3D,CAAC;IACH,CAAC;IACD,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,SAAgB,uBAAuB,CAAC,SAAiB;IACvD,OAAO,eAAM,CAAC,KAAK,CAAC,SAAS,EAAE,eAAe,CAAC;SAC5C,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;QACf,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,4BAA4B,CAAC,CAAC;IAChE,CAAC,CAAC;SACD,YAAY,EAAE,CAAC;AACpB,CAAC;AAED,SAAgB,kBAAkB,CAChC,WAAmB,EACnB,UAAsB;IAEtB,IAAI,UAAU,CAAC,SAAS,EAAE,CAAC;QACzB,KAAK,MAAM,KAAK,IAAI,UAAU,CAAC,SAAS,EAAE,CAAC;YACzC,IAAI,WAAW,CAAC,UAAU,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;gBACzC,OAAO,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,iBAAiB,IAAI,IAAI,CAAC;YAC/D,CAAC;QACH,CAAC;IACH,CAAC;IACD,IAAI,UAAU,CAAC,iBAAiB,EAAE,CAAC;QACjC,OAAO,UAAU,CAAC,iBAAiB,CAAC;IACtC,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport { z } from 'zod';\nimport { logger } from '../../../../logger';\nimport { regEx } from '../../../../util/regex';\nimport { Result } from '../../../../util/result';\nimport { Yaml } from '../../../../util/schema-utils';\n\nconst YarnrcYmlSchema = Yaml.pipe(\n  z.object({\n    npmRegistryServer: z.string().optional(),\n    npmScopes: z\n      .record(\n        z.object({\n          npmRegistryServer: z.string().optional(),\n        }),\n      )\n      .optional(),\n  }),\n);\n\nexport type YarnConfig = z.infer<typeof YarnrcYmlSchema>;\n\nconst registryRegEx = regEx(\n  /^\"?(@(?<scope>[^:]+):)?registry\"? \"?(?<registryUrl>[^\"]+)\"?$/gm,\n);\n\nexport function loadConfigFromLegacyYarnrc(\n  legacyYarnrc: string,\n): YarnConfig | null {\n  const registryMatches = [...legacyYarnrc.matchAll(registryRegEx)]\n    .map((m) => m.groups)\n    .filter(is.truthy);\n\n  const yarnConfig: YarnConfig = {};\n  for (const registryMatch of registryMatches) {\n    if (registryMatch.scope) {\n      yarnConfig.npmScopes ??= {};\n      yarnConfig.npmScopes[registryMatch.scope] ??= {};\n      yarnConfig.npmScopes[registryMatch.scope].npmRegistryServer =\n        registryMatch.registryUrl;\n    } else {\n      yarnConfig.npmRegistryServer = registryMatch.registryUrl;\n    }\n  }\n  return yarnConfig;\n}\n\nexport function loadConfigFromYarnrcYml(yarnrcYml: string): YarnConfig | null {\n  return Result.parse(yarnrcYml, YarnrcYmlSchema)\n    .onError((err) => {\n      logger.warn({ yarnrcYml, err }, `Failed to load yarnrc file`);\n    })\n    .unwrapOrNull();\n}\n\nexport function resolveRegistryUrl(\n  packageName: string,\n  yarnConfig: YarnConfig,\n): string | null {\n  if (yarnConfig.npmScopes) {\n    for (const scope in yarnConfig.npmScopes) {\n      if (packageName.startsWith(`@${scope}/`)) {\n        return yarnConfig.npmScopes[scope].npmRegistryServer ?? null;\n      }\n    }\n  }\n  if (yarnConfig.npmRegistryServer) {\n    return yarnConfig.npmRegistryServer;\n  }\n  return null;\n}\n"]}