{"version":3,"file":"dependency.js","sourceRoot":"","sources":["../../../../../../lib/modules/manager/npm/extract/common/dependency.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport validateNpmPackageName from 'validate-npm-package-name';\nimport { logger } from '../../../../../logger';\nimport { regEx } from '../../../../../util/regex';\nimport { GithubTagsDatasource } from '../../../../datasource/github-tags';\nimport { NodeVersionDatasource } from '../../../../datasource/node-version';\nimport { NpmDatasource } from '../../../../datasource/npm';\nimport {\n  api,\n  isValid,\n  isVersion,\n  id as npmVersioningId,\n} from '../../../../versioning/npm';\nimport type { PackageDependency } from '../../../types';\n\nconst RE_REPOSITORY_GITHUB_SSH_FORMAT = regEx(\n  /(?:git@)github.com:([^/]+)\\/([^/.]+)(?:\\.git)?/,\n);\n\nexport function parseDepName(depType: string, key: string): string {\n  if (depType !== 'resolutions') {\n    return key;\n  }\n\n  const [, depName] = regEx(/((?:@[^/]+\\/)?[^/@]+)$/).exec(key) ?? [];\n  return depName;\n}\n\nexport function extractDependency(\n  depType: string,\n  depName: string,\n  input: string,\n): PackageDependency {\n  const dep: PackageDependency = {};\n  if (!validateNpmPackageName(depName).validForOldPackages) {\n    dep.skipReason = 'invalid-name';\n    return dep;\n  }\n  if (typeof input !== 'string') {\n    dep.skipReason = 'invalid-value';\n    return dep;\n  }\n  dep.currentValue = input.trim();\n  if (depType === 'engines' || depType === 'packageManager') {\n    if (depName === 'node') {\n      dep.datasource = NodeVersionDatasource.id;\n    } else if (depName === 'yarn') {\n      dep.datasource = NpmDatasource.id;\n      dep.commitMessageTopic = 'Yarn';\n      const major =\n        isVersion(dep.currentValue) && api.getMajor(dep.currentValue);\n      if (major && major > 1) {\n        dep.packageName = '@yarnpkg/cli';\n      }\n    } else if (depName === 'npm') {\n      dep.datasource = NpmDatasource.id;\n      dep.commitMessageTopic = 'npm';\n    } else if (depName === 'pnpm') {\n      dep.datasource = NpmDatasource.id;\n      dep.commitMessageTopic = 'pnpm';\n    } else if (depName === 'vscode') {\n      dep.datasource = GithubTagsDatasource.id;\n      dep.packageName = 'microsoft/vscode';\n      dep.versioning = npmVersioningId;\n    } else {\n      dep.skipReason = 'unknown-engines';\n    }\n    if (!isValid(dep.currentValue)) {\n      dep.skipReason = 'unspecified-version';\n    }\n    return dep;\n  }\n\n  // support for volta\n  if (depType === 'volta') {\n    if (depName === 'node') {\n      dep.datasource = NodeVersionDatasource.id;\n    } else if (depName === 'yarn') {\n      dep.datasource = NpmDatasource.id;\n      dep.commitMessageTopic = 'Yarn';\n      const major =\n        isVersion(dep.currentValue) && api.getMajor(dep.currentValue);\n      if (major && major > 1) {\n        dep.packageName = '@yarnpkg/cli';\n      }\n    } else if (depName === 'npm') {\n      dep.datasource = NpmDatasource.id;\n    } else if (depName === 'pnpm') {\n      dep.datasource = NpmDatasource.id;\n      dep.commitMessageTopic = 'pnpm';\n    } else {\n      dep.skipReason = 'unknown-volta';\n    }\n    if (!isValid(dep.currentValue)) {\n      dep.skipReason = 'unspecified-version';\n    }\n    return dep;\n  }\n\n  if (dep.currentValue.startsWith('npm:')) {\n    dep.npmPackageAlias = true;\n    const valSplit = dep.currentValue.replace('npm:', '').split('@');\n    if (valSplit.length === 1) {\n      dep.packageName = depName;\n      dep.currentValue = valSplit[0];\n    } else if (valSplit.length === 2) {\n      dep.packageName = valSplit[0];\n      dep.currentValue = valSplit[1];\n    } else if (valSplit.length === 3) {\n      dep.packageName = valSplit[0] + '@' + valSplit[1];\n      dep.currentValue = valSplit[2];\n    } else {\n      logger.debug(\n        `Invalid npm package alias for dependency: \"${depName}\":\"${dep.currentValue}\"`,\n      );\n    }\n  }\n  if (dep.currentValue.startsWith('file:')) {\n    dep.skipReason = 'file';\n    return dep;\n  }\n\n  if (isValid(dep.currentValue)) {\n    dep.datasource = NpmDatasource.id;\n    if (dep.currentValue === '') {\n      dep.skipReason = 'empty';\n    }\n    return dep;\n  }\n  const hashSplit = dep.currentValue.split('#');\n  if (hashSplit.length !== 2) {\n    dep.skipReason = 'unspecified-version';\n    return dep;\n  }\n  const [depNamePart, depRefPart] = hashSplit;\n\n  let githubOwnerRepo: string;\n  let githubOwner: string;\n  let githubRepo: string;\n  const matchUrlSshFormat = RE_REPOSITORY_GITHUB_SSH_FORMAT.exec(depNamePart);\n  if (matchUrlSshFormat === null) {\n    githubOwnerRepo = depNamePart\n      .replace(regEx(/^github:/), '')\n      .replace(regEx(/^git\\+/), '')\n      .replace(regEx(/^https:\\/\\/github\\.com\\//), '')\n      .replace(regEx(/\\.git$/), '');\n    const githubRepoSplit = githubOwnerRepo.split('/');\n    if (githubRepoSplit.length !== 2) {\n      dep.skipReason = 'unspecified-version';\n      return dep;\n    }\n    [githubOwner, githubRepo] = githubRepoSplit;\n  } else {\n    githubOwner = matchUrlSshFormat[1];\n    githubRepo = matchUrlSshFormat[2];\n    githubOwnerRepo = `${githubOwner}/${githubRepo}`;\n  }\n  const githubValidRegex = /^[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){0,38}$/i; // TODO #12872 lookahead\n  if (\n    !githubValidRegex.test(githubOwner) ||\n    !githubValidRegex.test(githubRepo)\n  ) {\n    dep.skipReason = 'unspecified-version';\n    return dep;\n  }\n  if (isVersion(depRefPart)) {\n    dep.currentRawValue = dep.currentValue;\n    dep.currentValue = depRefPart;\n    dep.datasource = GithubTagsDatasource.id;\n    dep.versioning = npmVersioningId;\n    dep.packageName = githubOwnerRepo;\n    dep.pinDigests = false;\n  } else if (\n    regEx(/^[0-9a-f]{7}$/).test(depRefPart) ||\n    regEx(/^[0-9a-f]{40}$/).test(depRefPart)\n  ) {\n    dep.currentRawValue = dep.currentValue;\n    dep.currentValue = null;\n    dep.currentDigest = depRefPart;\n    dep.datasource = GithubTagsDatasource.id;\n    dep.versioning = npmVersioningId;\n    dep.packageName = githubOwnerRepo;\n  } else {\n    // <protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>[#<commit-ish> | #semver:<semver>]\n    // https://docs.npmjs.com/cli/v10/configuring-npm/package-json#git-urls-as-dependencies\n    const len = 7; // length of 'semver:'\n    const maybeVersion = depRefPart.substring(len);\n\n    if (depRefPart.startsWith('semver:') && isValid(maybeVersion)) {\n      dep.currentRawValue = dep.currentValue;\n      dep.currentValue = maybeVersion;\n      dep.datasource = GithubTagsDatasource.id;\n      dep.versioning = npmVersioningId;\n      dep.packageName = githubOwnerRepo;\n      dep.pinDigests = false;\n    } else {\n      dep.skipReason = 'unversioned-reference';\n      return dep;\n    }\n  }\n  dep.sourceUrl = `https://github.com/${githubOwnerRepo}`;\n  dep.gitRef = true;\n  return dep;\n}\n\nexport function getExtractedConstraints(\n  deps: PackageDependency[],\n): Record<string, string> {\n  const extractedConstraints: Record<string, string> = {};\n  const constraints = ['node', 'yarn', 'npm', 'pnpm', 'vscode'];\n  for (const dep of deps) {\n    if (\n      !dep.skipReason &&\n      (dep.depType === 'engines' || dep.depType === 'packageManager') &&\n      dep.depName &&\n      constraints.includes(dep.depName) &&\n      is.string(dep.currentValue)\n    ) {\n      extractedConstraints[dep.depName] = dep.currentValue;\n    }\n  }\n  return extractedConstraints;\n}\n"]}