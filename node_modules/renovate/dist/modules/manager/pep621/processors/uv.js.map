{"version":3,"file":"uv.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/pep621/processors/uv.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport { TEMPORARY_ERROR } from '../../../../constants/error-messages';\nimport { logger } from '../../../../logger';\nimport type { HostRule } from '../../../../types';\nimport { exec } from '../../../../util/exec';\nimport type { ExecOptions, ToolConstraint } from '../../../../util/exec/types';\nimport { getSiblingFileName, readLocalFile } from '../../../../util/fs';\nimport { getGitEnvironmentVariables } from '../../../../util/git/auth';\nimport { find } from '../../../../util/host-rules';\nimport { Result } from '../../../../util/result';\nimport { parseUrl } from '../../../../util/url';\nimport { PypiDatasource } from '../../../datasource/pypi';\nimport { getGoogleAuthHostRule } from '../../../datasource/util';\nimport type {\n  PackageDependency,\n  UpdateArtifact,\n  UpdateArtifactsResult,\n  Upgrade,\n} from '../../types';\nimport { applyGitSource } from '../../util';\nimport { type PyProject, UvLockfileSchema } from '../schema';\nimport { depTypes, parseDependencyList } from '../utils';\nimport type { PyProjectProcessor } from './types';\n\nconst uvUpdateCMD = 'uv lock';\n\nexport class UvProcessor implements PyProjectProcessor {\n  process(project: PyProject, deps: PackageDependency[]): PackageDependency[] {\n    const uv = project.tool?.uv;\n    if (is.nullOrUndefined(uv)) {\n      return deps;\n    }\n\n    const hasExplicitDefault = uv.index?.some(\n      (index) => index.default && index.explicit,\n    );\n    const defaultIndex = uv.index?.find(\n      (index) => index.default && !index.explicit,\n    );\n    const implicitIndexUrls = uv.index\n      ?.filter((index) => !index.explicit && index.name !== defaultIndex?.name)\n      ?.map(({ url }) => url);\n\n    deps.push(\n      ...parseDependencyList(\n        depTypes.uvDevDependencies,\n        uv['dev-dependencies'],\n      ),\n    );\n\n    // https://docs.astral.sh/uv/concepts/dependencies/#dependency-sources\n    // Skip sources that do not make sense to handle (e.g. path).\n    if (uv.sources || defaultIndex || implicitIndexUrls) {\n      for (const dep of deps) {\n        // istanbul ignore if\n        if (!dep.packageName) {\n          continue;\n        }\n\n        // Using `packageName` as it applies PEP 508 normalization, which is\n        // also applied by uv when matching a source to a dependency.\n        const depSource = uv.sources?.[dep.packageName];\n        if (depSource) {\n          // Dependency is pinned to a specific source.\n          dep.depType = depTypes.uvSources;\n          if ('index' in depSource) {\n            const index = uv.index?.find(\n              ({ name }) => name === depSource.index,\n            );\n            if (index) {\n              dep.registryUrls = [index.url];\n            }\n          } else if ('git' in depSource) {\n            applyGitSource(\n              dep,\n              depSource.git,\n              depSource.rev,\n              depSource.tag,\n              depSource.branch,\n            );\n          } else if ('url' in depSource) {\n            dep.skipReason = 'unsupported-url';\n          } else if ('path' in depSource) {\n            dep.skipReason = 'path-dependency';\n          } else if ('workspace' in depSource) {\n            dep.skipReason = 'inherited-dependency';\n          } else {\n            dep.skipReason = 'unknown-registry';\n          }\n        } else {\n          // Dependency is not pinned to a specific source, so we need to\n          // determine the source based on the index configuration.\n          if (hasExplicitDefault) {\n            // don't fall back to pypi if there is an explicit default index\n            dep.registryUrls = [];\n          } else if (defaultIndex) {\n            // There is a default index configured, so use it.\n            dep.registryUrls = [defaultIndex.url];\n          }\n\n          if (implicitIndexUrls?.length) {\n            // If there are implicit indexes, check them first and fall back\n            // to the default.\n            dep.registryUrls = implicitIndexUrls.concat(\n              dep.registryUrls ?? PypiDatasource.defaultURL,\n            );\n          }\n        }\n      }\n    }\n\n    return deps;\n  }\n\n  async extractLockedVersions(\n    project: PyProject,\n    deps: PackageDependency[],\n    packageFile: string,\n  ): Promise<PackageDependency[]> {\n    const lockFileName = getSiblingFileName(packageFile, 'uv.lock');\n    const lockFileContent = await readLocalFile(lockFileName, 'utf8');\n    if (lockFileContent) {\n      const { val: lockFileMapping, err } = Result.parse(\n        lockFileContent,\n        UvLockfileSchema,\n      ).unwrap();\n\n      if (err) {\n        logger.debug({ packageFile, err }, `Error parsing uv lock file`);\n      } else {\n        for (const dep of deps) {\n          const packageName = dep.packageName;\n          if (packageName && packageName in lockFileMapping) {\n            dep.lockedVersion = lockFileMapping[packageName];\n          }\n        }\n      }\n    }\n\n    return Promise.resolve(deps);\n  }\n\n  async updateArtifacts(\n    updateArtifact: UpdateArtifact,\n    project: PyProject,\n  ): Promise<UpdateArtifactsResult[] | null> {\n    const { config, updatedDeps, packageFileName } = updateArtifact;\n\n    const { isLockFileMaintenance } = config;\n\n    // abort if no lockfile is defined\n    const lockFileName = getSiblingFileName(packageFileName, 'uv.lock');\n    try {\n      const existingLockFileContent = await readLocalFile(lockFileName, 'utf8');\n      if (is.nullOrUndefined(existingLockFileContent)) {\n        logger.debug('No uv.lock found');\n        return null;\n      }\n\n      const pythonConstraint: ToolConstraint = {\n        toolName: 'python',\n        constraint:\n          config.constraints?.python ?? project.project?.['requires-python'],\n      };\n      const uvConstraint: ToolConstraint = {\n        toolName: 'uv',\n        constraint: config.constraints?.uv,\n      };\n\n      const extraEnv = {\n        ...getGitEnvironmentVariables(['pep621']),\n        ...(await getUvExtraIndexUrl(project, updateArtifact.updatedDeps)),\n        ...(await getUvIndexCredentials(project)),\n      };\n      const execOptions: ExecOptions = {\n        cwdFile: packageFileName,\n        extraEnv,\n        docker: {},\n        toolConstraints: [pythonConstraint, uvConstraint],\n      };\n\n      // on lockFileMaintenance do not specify any packages and update the complete lock file\n      // else only update specific packages\n      let cmd: string;\n      if (isLockFileMaintenance) {\n        cmd = `${uvUpdateCMD} --upgrade`;\n      } else {\n        cmd = generateCMD(updatedDeps);\n      }\n      await exec(cmd, execOptions);\n\n      // check for changes\n      const fileChanges: UpdateArtifactsResult[] = [];\n      const newLockContent = await readLocalFile(lockFileName, 'utf8');\n      const isLockFileChanged = existingLockFileContent !== newLockContent;\n      if (isLockFileChanged) {\n        fileChanges.push({\n          file: {\n            type: 'addition',\n            path: lockFileName,\n            contents: newLockContent,\n          },\n        });\n      } else {\n        logger.debug('uv.lock is unchanged');\n      }\n\n      return fileChanges.length ? fileChanges : null;\n    } catch (err) {\n      // istanbul ignore if\n      if (err.message === TEMPORARY_ERROR) {\n        throw err;\n      }\n      logger.debug({ err }, 'Failed to update uv lock file');\n      return [\n        {\n          artifactError: {\n            lockFile: lockFileName,\n            stderr: err.message,\n          },\n        },\n      ];\n    }\n  }\n}\n\nfunction generateCMD(updatedDeps: Upgrade[]): string {\n  const deps: string[] = [];\n\n  for (const dep of updatedDeps) {\n    switch (dep.depType) {\n      case depTypes.optionalDependencies: {\n        deps.push(dep.depName!.split('/')[1]);\n        break;\n      }\n      case depTypes.uvDevDependencies:\n      case depTypes.uvSources: {\n        deps.push(dep.depName!);\n        break;\n      }\n      case depTypes.buildSystemRequires:\n        // build requirements are not locked in the lock files, no need to update.\n        break;\n      default: {\n        deps.push(dep.packageName!);\n      }\n    }\n  }\n\n  return `${uvUpdateCMD} ${deps.map((dep) => `--upgrade-package ${quote(dep)}`).join(' ')}`;\n}\n\nfunction getMatchingHostRule(url: string | undefined): HostRule {\n  return find({ hostType: PypiDatasource.id, url });\n}\n\nasync function getUsernamePassword(\n  url: URL,\n): Promise<{ username?: string; password?: string }> {\n  const rule = getMatchingHostRule(url.toString());\n  if (rule.username || rule.password) {\n    return rule;\n  }\n\n  if (url.hostname.endsWith('.pkg.dev')) {\n    const hostRule = await getGoogleAuthHostRule();\n    if (hostRule) {\n      return hostRule;\n    } else {\n      logger.once.debug({ url }, 'Could not get Google access token');\n    }\n  }\n\n  return {};\n}\n\nasync function getUvExtraIndexUrl(\n  project: PyProject,\n  deps: Upgrade[],\n): Promise<NodeJS.ProcessEnv> {\n  const pyPiRegistryUrls = deps\n    .filter((dep) => dep.datasource === PypiDatasource.id)\n    .filter((dep) => {\n      // Remove dependencies that are pinned to a specific index\n      const sources = project.tool?.uv?.sources;\n      const packageName = dep.packageName!;\n      return !sources || !(packageName in sources);\n    })\n    .flatMap((dep) => dep.registryUrls)\n    .filter(is.string)\n    .filter((registryUrl) => {\n      // Check if the registry URL is not the default one and not already configured\n      const configuredIndexUrls =\n        project.tool?.uv?.index?.map(({ url }) => url) ?? [];\n      return (\n        registryUrl !== PypiDatasource.defaultURL &&\n        !configuredIndexUrls.includes(registryUrl)\n      );\n    });\n\n  const registryUrls = new Set(pyPiRegistryUrls);\n  const extraIndexUrls: string[] = [];\n\n  for (const registryUrl of registryUrls) {\n    const parsedUrl = parseUrl(registryUrl);\n    if (!parsedUrl) {\n      continue;\n    }\n\n    const { username, password } = await getUsernamePassword(parsedUrl);\n    if (username || password) {\n      if (username) {\n        parsedUrl.username = username;\n      }\n      if (password) {\n        parsedUrl.password = password;\n      }\n    }\n\n    extraIndexUrls.push(parsedUrl.toString());\n  }\n\n  return {\n    UV_EXTRA_INDEX_URL: extraIndexUrls.join(' '),\n  };\n}\n\nasync function getUvIndexCredentials(\n  project: PyProject,\n): Promise<NodeJS.ProcessEnv> {\n  const uv_indexes = project.tool?.uv?.index;\n\n  if (is.nullOrUndefined(uv_indexes)) {\n    return {};\n  }\n\n  const entries = [];\n\n  for (const { name, url } of uv_indexes) {\n    const parsedUrl = parseUrl(url);\n    // istanbul ignore if\n    if (!parsedUrl) {\n      continue;\n    }\n\n    // If no name is provided for the index, authentication information must be passed through alternative methods\n    if (!name) {\n      continue;\n    }\n\n    const { username, password } = await getUsernamePassword(parsedUrl);\n\n    const NAME = name.toUpperCase().replace(/[^A-Z0-9]/g, '_');\n\n    if (username) {\n      entries.push([`UV_INDEX_${NAME}_USERNAME`, username]);\n    }\n\n    if (password) {\n      entries.push([`UV_INDEX_${NAME}_PASSWORD`, password]);\n    }\n  }\n\n  return Object.fromEntries(entries);\n}\n"]}