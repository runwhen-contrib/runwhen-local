{"version":3,"file":"hatch.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/pep621/processors/hatch.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAOlC,oCAA+C;AAG/C,MAAa,cAAc;IACzB,OAAO,CACL,SAAoB,EACpB,IAAyB;QAEzB,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;QAC/C,IAAI,YAAE,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC;YACnC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,KAAK,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;YACxD,MAAM,OAAO,GAAG,mBAAmB,OAAO,EAAE,CAAC;YAC7C,MAAM,OAAO,GAAG,IAAA,2BAAmB,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;YAChE,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC;YACtB,MAAM,SAAS,GAAG,IAAA,2BAAmB,EACnC,OAAO,EACP,GAAG,EAAE,CAAC,oBAAoB,CAAC,CAC5B,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC;QAC1B,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,qBAAqB,CACnB,OAAkB,EAClB,IAAyB,EACzB,WAAmB;QAEnB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,eAAe,CACb,cAA8B,EAC9B,OAAkB;QAElB,+CAA+C;QAC/C,2CAA2C;QAC3C,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;CACF;AAxCD,wCAwCC","sourcesContent":["import is from '@sindresorhus/is';\nimport type {\n  PackageDependency,\n  UpdateArtifact,\n  UpdateArtifactsResult,\n} from '../../types';\nimport type { PyProject } from '../schema';\nimport { parseDependencyList } from '../utils';\nimport type { PyProjectProcessor } from './types';\n\nexport class HatchProcessor implements PyProjectProcessor {\n  process(\n    pyproject: PyProject,\n    deps: PackageDependency[],\n  ): PackageDependency[] {\n    const hatch_envs = pyproject.tool?.hatch?.envs;\n    if (is.nullOrUndefined(hatch_envs)) {\n      return deps;\n    }\n\n    for (const [envName, env] of Object.entries(hatch_envs)) {\n      const depType = `tool.hatch.envs.${envName}`;\n      const envDeps = parseDependencyList(depType, env?.dependencies);\n      deps.push(...envDeps);\n      const extraDeps = parseDependencyList(\n        depType,\n        env?.['extra-dependencies'],\n      );\n      deps.push(...extraDeps);\n    }\n\n    return deps;\n  }\n\n  extractLockedVersions(\n    project: PyProject,\n    deps: PackageDependency[],\n    packageFile: string,\n  ): Promise<PackageDependency[]> {\n    return Promise.resolve(deps);\n  }\n\n  updateArtifacts(\n    updateArtifact: UpdateArtifact,\n    project: PyProject,\n  ): Promise<UpdateArtifactsResult[] | null> {\n    // Hatch does not have lock files at the moment\n    // https://github.com/pypa/hatch/issues/749\n    return Promise.resolve(null);\n  }\n}\n"]}