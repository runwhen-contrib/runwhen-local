{"version":3,"file":"update.js","sourceRoot":"","sources":["../../../../lib/modules/manager/cargo/update.ts"],"names":[],"mappings":";;AAMA,gDAiDC;;AAtDD,4DAA4B;AAC5B,4CAAyC;AACzC,+CAA4C;AAG5C,SAAgB,kBAAkB,CAChC,OAAe,EACf,YAAoB,EACpB,WAAwB;IAExB,eAAM,CAAC,KAAK,CACV,EAAE,WAAW,EAAE,YAAY,EAAE,EAC7B,+CAA+C,CAChD,CAAC;IACF,IAAI,aAAa,GAAG,OAAO,CAAC;IAE5B,IAAI,CAAC,gBAAM,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC;QAChC,eAAM,CAAC,IAAI,CACT,EAAE,YAAY,EAAE,EAChB,uDAAuD,CACxD,CAAC;QACF,OAAO,EAAE,aAAa,EAAE,CAAC;IAC3B,CAAC;IAED,IAAI,CAAC;QACH,MAAM,eAAe,GAAG,gBAAM,CAAC,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QAC9D,IAAI,CAAC,eAAe,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACvC,CAAC;QAED,eAAM,CAAC,KAAK,CAAC,EAAE,eAAe,EAAE,CAAC,CAAC;QAElC,aAAa,GAAG,OAAO,CAAC,OAAO,CAC7B,IAAA,aAAK,EAAC,+CAA+C,EAAE,GAAG,CAAC,EAC3D,aAAa,eAAe,EAAE,CAC/B,CAAC;QAEF,IAAI,aAAa,KAAK,OAAO,EAAE,CAAC;YAC9B,eAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAC7C,CAAC;aAAM,CAAC;YACN,eAAM,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAAC,MAAM,CAAC;QACP,eAAM,CAAC,IAAI,CACT;YACE,OAAO;YACP,YAAY;YACZ,WAAW;SACZ,EACD,uBAAuB,CACxB,CAAC;IACJ,CAAC;IAED,OAAO,EAAE,aAAa,EAAE,CAAC;AAC3B,CAAC","sourcesContent":["import type { ReleaseType } from 'semver';\nimport semver from 'semver';\nimport { logger } from '../../../logger';\nimport { regEx } from '../../../util/regex';\nimport type { BumpPackageVersionResult } from '../types';\n\nexport function bumpPackageVersion(\n  content: string,\n  currentValue: string,\n  bumpVersion: ReleaseType,\n): BumpPackageVersionResult {\n  logger.debug(\n    { bumpVersion, currentValue },\n    'Checking if we should bump Cargo.toml version',\n  );\n  let bumpedContent = content;\n\n  if (!semver.valid(currentValue)) {\n    logger.warn(\n      { currentValue },\n      'Unable to bump Cargo.toml version, not a valid semver',\n    );\n    return { bumpedContent };\n  }\n\n  try {\n    const newCrateVersion = semver.inc(currentValue, bumpVersion);\n    if (!newCrateVersion) {\n      throw new Error('semver inc failed');\n    }\n\n    logger.debug({ newCrateVersion });\n\n    bumpedContent = content.replace(\n      regEx(`^(?<version>version[ \\\\t]*=[ \\\\t]*['\"])[^'\"]*`, 'm'),\n      `$<version>${newCrateVersion}`,\n    );\n\n    if (bumpedContent === content) {\n      logger.debug('Version was already bumped');\n    } else {\n      logger.debug('Bumped Cargo.toml version');\n    }\n  } catch {\n    logger.warn(\n      {\n        content,\n        currentValue,\n        bumpVersion,\n      },\n      'Failed to bumpVersion',\n    );\n  }\n\n  return { bumpedContent };\n}\n"]}