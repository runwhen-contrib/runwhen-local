{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../lib/modules/manager/custom/types.ts"],"names":[],"mappings":";;AAgBA,QAAQ;AACR,iHAAiH","sourcesContent":["import type { JSONataManagerConfig } from './jsonata/types';\nimport type { RegexManagerConfig } from './regex/types';\n\nexport interface CustomExtractConfig\n  extends Partial<RegexManagerConfig>,\n    Partial<JSONataManagerConfig> {}\n\nexport type CustomManagerName = 'jsonata' | 'regex';\n\nexport interface CustomManager\n  extends Partial<RegexManagerConfig>,\n    Partial<JSONataManagerConfig> {\n  customType: CustomManagerName;\n  fileMatch: string[];\n}\n\n// NOTE:\n// the two interfaces might seem similar but they have different usage similar to ManagerConfig and ExtractConfig\n"]}