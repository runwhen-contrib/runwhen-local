{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/manager/custom/utils.ts"],"names":[],"mappings":";;;AAmBA,8CAeC;AAED,wDAoBC;;AAxDD,kEAAkC;AAClC,4CAAyC;AAG5B,QAAA,gBAAgB,GAAG;IAC9B,SAAS;IACT,aAAa;IACb,cAAc;IACd,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,SAAS;IACT,aAAa;CACL,CAAC;AAIX,SAAgB,iBAAiB,CAAC,EAChC,OAAO,EACP,YAAY,EACZ,aAAa,EACb,WAAW,EACX,UAAU,GACQ;IAClB,kCAAkC;IAClC,OAAO,CACL,CAAC,YAAE,CAAC,8BAA8B,CAAC,OAAO,CAAC;QACzC,YAAE,CAAC,8BAA8B,CAAC,WAAW,CAAC,CAAC;QACjD,CAAC,YAAE,CAAC,8BAA8B,CAAC,aAAa,CAAC;YAC/C,YAAE,CAAC,8BAA8B,CAAC,YAAY,CAAC,CAAC;QAClD,YAAE,CAAC,8BAA8B,CAAC,UAAU,CAAC,CAC9C,CAAC;AACJ,CAAC;AAED,SAAgB,sBAAsB,CACpC,GAAsB,EACtB,WAAmB,EACnB,OAAe;IAEf,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;IACvC,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,GAAG;YACX,iBAAiB,EAAE,GAAG;YACtB,WAAW;YACX,OAAO;SACR,CAAC;QACF,eAAM,CAAC,KAAK,CACV,IAAI,EACJ,6EAA6E,CAC9E,CAAC;QACF,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport { logger } from '../../../logger';\nimport type { PackageDependency } from '../types';\n\nexport const validMatchFields = [\n  'depName',\n  'packageName',\n  'currentValue',\n  'currentDigest',\n  'datasource',\n  'versioning',\n  'extractVersion',\n  'registryUrl',\n  'depType',\n  'indentation',\n] as const;\n\nexport type ValidMatchFields = (typeof validMatchFields)[number];\n\nexport function isValidDependency({\n  depName,\n  currentValue,\n  currentDigest,\n  packageName,\n  datasource,\n}: PackageDependency): boolean {\n  // check if all the fields are set\n  return (\n    (is.nonEmptyStringAndNotWhitespace(depName) ||\n      is.nonEmptyStringAndNotWhitespace(packageName)) &&\n    (is.nonEmptyStringAndNotWhitespace(currentDigest) ||\n      is.nonEmptyStringAndNotWhitespace(currentValue)) &&\n    is.nonEmptyStringAndNotWhitespace(datasource)\n  );\n}\n\nexport function checkIsValidDependency(\n  dep: PackageDependency,\n  packageFile: string,\n  manager: string,\n): boolean {\n  const isValid = isValidDependency(dep);\n  if (!isValid) {\n    const meta = {\n      packageDependency: dep,\n      packageFile,\n      manager,\n    };\n    logger.trace(\n      meta,\n      'Discovered a package dependency, but it did not pass validation. Discarding',\n    );\n    return isValid;\n  }\n\n  return isValid;\n}\n"]}