{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pipenv/extract.ts"],"names":[],"mappings":";;;AA4HA,gDA6DC;;AAzLD,4DAAmE;AACnE,gDAAoD;AACpD,kEAAkC;AAClC,4CAAyC;AAEzC,yCAAiE;AACjE,gDAAwD;AACxD,+CAA4C;AAC5C,6CAAwD;AACxD,gDAAuD;AACvD,yDAAsE;AAItE,2DAA2D;AAC9C,QAAA,cAAc,GAAG,uCAAuC,CAAC;AACzD,QAAA,aAAa,GAAG,wBAAwB,CAAC;AACtD,MAAM,YAAY,GAAG,IAAA,aAAK,EAAC,KAAK,sBAAc,KAAK,qBAAa,IAAI,EAAE,GAAG,CAAC,CAAC;AAE3E,MAAM,YAAY,GAAW,sBAAa,CAAC;AAE3C,MAAM,oBAAoB,GAAG,OAAO,YAAY,CAAC,OAAO,CACtD,IAAA,aAAK,EAAC,UAAU,CAAC,EACjB,IAAI,CACL,MAAM,CAAC;AACR,MAAM,gBAAgB,GAAG,GAAG,oBAAoB,OAAO,oBAAoB,IAAI,CAAC;AAChF,MAAM,cAAc,GAAG,IAAA,aAAK,EAAC,IAAI,gBAAgB,GAAG,CAAC,CAAC;AACtD,SAAS,kBAAkB,CACzB,WAAmB,EACnB,cAA8C,EAC9C,OAAqB;IAErB,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;SACxC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;QACT,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;QAC5C,IAAI,OAAO,GAAG,iBAAiB,CAAC;QAEhC,IAAI,YAAgC,CAAC;QACrC,IAAI,aAAa,GAAG,KAAK,CAAC;QAC1B,IAAI,UAAkC,CAAC;QACvC,IAAI,YAAE,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC;YAC5B,IAAI,YAAY,CAAC,GAAG,EAAE,CAAC;gBACrB,UAAU,GAAG,gBAAgB,CAAC;YAChC,CAAC;iBAAM,IAAI,YAAY,CAAC,IAAI,EAAE,CAAC;gBAC7B,UAAU,GAAG,iBAAiB,CAAC;YACjC,CAAC;iBAAM,IAAI,YAAY,CAAC,IAAI,EAAE,CAAC;gBAC7B,UAAU,GAAG,kBAAkB,CAAC;YAClC,CAAC;iBAAM,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;gBAChC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC;gBACpC,aAAa,GAAG,IAAI,CAAC;YACvB,CAAC;iBAAM,CAAC;gBACN,UAAU,GAAG,qBAAqB,CAAC;YACrC,CAAC;QACH,CAAC;aAAM,CAAC;YACN,YAAY,GAAG,YAAY,CAAC;QAC9B,CAAC;QACD,IAAI,YAAY,KAAK,GAAG,EAAE,CAAC;YACzB,UAAU,GAAG,qBAAqB,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,MAAM,cAAc,GAAG,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC5D,IAAI,cAAc,EAAE,CAAC;gBACnB,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;iBAAM,CAAC;gBACN,eAAM,CAAC,KAAK,CACV,oDAAoD,iBAAiB,IAAI,CAC1E,CAAC;gBACF,UAAU,GAAG,cAAc,CAAC;YAC9B,CAAC;YACD,kBAAkB;YAClB,MAAM,gBAAgB,GAAG,cAAc,CAAC,IAAI,CAAC,YAAa,CAAC,CAAC;YAC5D,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACtB,eAAM,CAAC,KAAK,CACV,yDAAyD,YAAa,IAAI,CAC3E,CAAC;gBACF,UAAU,GAAG,iBAAiB,CAAC;YACjC,CAAC;QACH,CAAC;QACD,MAAM,GAAG,GAAsB;YAC7B,OAAO,EAAE,WAAW;YACpB,OAAO;YACP,WAAW,EAAE,IAAA,+BAAsB,EAAC,OAAO,CAAC;YAC5C,WAAW,EAAE,EAAE;SAChB,CAAC;QACF,IAAI,YAAY,EAAE,CAAC;YACjB,GAAG,CAAC,YAAY,GAAG,YAAY,CAAC;QAClC,CAAC;QACD,IAAI,UAAU,EAAE,CAAC;YACf,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC;QAC9B,CAAC;aAAM,CAAC;YACN,GAAG,CAAC,UAAU,GAAG,qBAAc,CAAC,EAAE,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,UAAU,IAAI,YAAY,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;YAClD,GAAG,CAAC,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;QACjE,CAAC;QACD,IAAI,aAAa,EAAE,CAAC;YAClB,cAAc;YACd,GAAG,CAAC,WAAY,CAAC,aAAa,GAAG,aAAa,CAAC;QACjD,CAAC;QACD,IAAI,OAAO,IAAI,YAAE,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,KAAK,EAAE,CAAC;YAC7D,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,KAAK,CAAC,CAAC;YACxE,IAAI,MAAM,EAAE,CAAC;gBACX,GAAG,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;QACD,OAAO,GAAG,CAAC;IACb,CAAC,CAAC;SACD,MAAM,CAAC,OAAO,CAAC,CAAC;IACnB,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,iBAAiB,CACxB,OAGe;IAEf,OAAO,CACL,CAAC,YAAE,CAAC,KAAK,CAAC,OAAO,CAAC;QAClB,YAAE,CAAC,MAAM,CAAC,OAAO,CAAC;QAClB,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,YAAE,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAC1E,CAAC;AACJ,CAAC;AAEM,KAAK,UAAU,kBAAkB,CACtC,OAAe,EACf,WAAmB;IAEnB,eAAM,CAAC,KAAK,CAAC,6BAA6B,WAAW,GAAG,CAAC,CAAC;IAE1D,IAAI,OAAgB,CAAC;IACrB,IAAI,CAAC;QACH,yBAAyB;QACzB,OAAO,GAAG,IAAA,YAAS,EAAC,OAAO,CAAQ,CAAC;IACtC,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,uBAAuB,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC;IACd,CAAC;IACD,MAAM,GAAG,GAAuB,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IAE7C,MAAM,OAAO,GAAG,OAAO,EAAE,MAAM,CAAC;IAEhC,IAAI,OAAO,EAAE,CAAC;QACZ,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACzD,CAAC;IAED,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;SAC/B,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,EAAE;QAC3B,IACE,QAAQ,KAAK,QAAQ;YACrB,QAAQ,KAAK,UAAU;YACvB,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAC3B,CAAC;YACD,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,OAAO,kBAAkB,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACxD,CAAC,CAAC;SACD,IAAI,EAAE,CAAC;IAEV,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,oBAAoB,GAAwB,EAAE,CAAC;IAErD,MAAM,UAAU,GAAG,IAAA,iBAAY,EAAC,IAAA,sBAAe,EAAC,WAAW,CAAC,CAAC,CAAC;IAE9D,MAAM,gBAAgB,GAAG,MAAM,qBAAY,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;IAC5E,IAAI,gBAAgB,EAAE,CAAC;QACrB,oBAAoB,CAAC,MAAM,GAAG,gBAAgB,CAAC;IACjD,CAAC;IAED,MAAM,gBAAgB,GAAG,MAAM,qBAAY,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;IAC5E,IAAI,gBAAgB,EAAE,CAAC;QACrB,oBAAoB,CAAC,MAAM,GAAG,gBAAgB,CAAC;IACjD,CAAC;IAED,MAAM,YAAY,GAAG,GAAG,WAAW,OAAO,CAAC;IAC3C,IAAI,MAAM,IAAA,oBAAe,EAAC,YAAY,CAAC,EAAE,CAAC;QACxC,GAAG,CAAC,SAAS,GAAG,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IAED,GAAG,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;IAChD,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["import { pipenv as pipenvDetect } from '@renovatebot/detect-tools';\nimport { RANGE_PATTERN } from '@renovatebot/pep440';\nimport is from '@sindresorhus/is';\nimport { logger } from '../../../logger';\nimport type { SkipReason } from '../../../types';\nimport { getParentDir, localPathExists } from '../../../util/fs';\nimport { ensureLocalPath } from '../../../util/fs/util';\nimport { regEx } from '../../../util/regex';\nimport { parse as parseToml } from '../../../util/toml';\nimport { PypiDatasource } from '../../datasource/pypi';\nimport { normalizePythonDepName } from '../../datasource/pypi/common';\nimport type { PackageDependency, PackageFileContent } from '../types';\nimport type { PipFile, PipRequirement, PipSource } from './types';\n\n// based on https://www.python.org/dev/peps/pep-0508/#names\nexport const packagePattern = '[A-Z0-9]|[A-Z0-9][A-Z0-9._-]*[A-Z0-9]';\nexport const extrasPattern = '(?:\\\\s*\\\\[[^\\\\]]+\\\\])*';\nconst packageRegex = regEx(`^(${packagePattern})(${extrasPattern})$`, 'i');\n\nconst rangePattern: string = RANGE_PATTERN;\n\nconst specifierPartPattern = `\\\\s*${rangePattern.replace(\n  regEx(/\\?<\\w+>/g),\n  '?:',\n)}\\\\s*`;\nconst specifierPattern = `${specifierPartPattern}(?:,${specifierPartPattern})*`;\nconst specifierRegex = regEx(`^${specifierPattern}$`);\nfunction extractFromSection(\n  sectionName: string,\n  pipfileSection: Record<string, PipRequirement>,\n  sources?: PipSource[],\n): PackageDependency[] {\n  const deps = Object.entries(pipfileSection)\n    .map((x) => {\n      const [packageNameString, requirements] = x;\n      let depName = packageNameString;\n\n      let currentValue: string | undefined;\n      let nestedVersion = false;\n      let skipReason: SkipReason | undefined;\n      if (is.object(requirements)) {\n        if (requirements.git) {\n          skipReason = 'git-dependency';\n        } else if (requirements.file) {\n          skipReason = 'file-dependency';\n        } else if (requirements.path) {\n          skipReason = 'local-dependency';\n        } else if (requirements.version) {\n          currentValue = requirements.version;\n          nestedVersion = true;\n        } else {\n          skipReason = 'unspecified-version';\n        }\n      } else {\n        currentValue = requirements;\n      }\n      if (currentValue === '*') {\n        skipReason = 'unspecified-version';\n      }\n      if (!skipReason) {\n        const packageMatches = packageRegex.exec(packageNameString);\n        if (packageMatches) {\n          depName = packageMatches[1];\n        } else {\n          logger.debug(\n            `Skipping dependency with malformed package name \"${packageNameString}\".`,\n          );\n          skipReason = 'invalid-name';\n        }\n        // validated above\n        const specifierMatches = specifierRegex.exec(currentValue!);\n        if (!specifierMatches) {\n          logger.debug(\n            `Skipping dependency with malformed version specifier \"${currentValue!}\".`,\n          );\n          skipReason = 'invalid-version';\n        }\n      }\n      const dep: PackageDependency = {\n        depType: sectionName,\n        depName,\n        packageName: normalizePythonDepName(depName),\n        managerData: {},\n      };\n      if (currentValue) {\n        dep.currentValue = currentValue;\n      }\n      if (skipReason) {\n        dep.skipReason = skipReason;\n      } else {\n        dep.datasource = PypiDatasource.id;\n      }\n      if (!skipReason && currentValue?.startsWith('==')) {\n        dep.currentVersion = currentValue.replace(regEx(/^==\\s*/), '');\n      }\n      if (nestedVersion) {\n        // TODO #22198\n        dep.managerData!.nestedVersion = nestedVersion;\n      }\n      if (sources && is.object(requirements) && requirements.index) {\n        const source = sources.find((item) => item.name === requirements.index);\n        if (source) {\n          dep.registryUrls = [source.url];\n        }\n      }\n      return dep;\n    })\n    .filter(Boolean);\n  return deps;\n}\n\nfunction isPipRequirements(\n  section?:\n    | Record<string, PipRequirement>\n    | Record<string, string>\n    | PipSource[],\n): section is Record<string, PipRequirement> {\n  return (\n    !is.array(section) &&\n    is.object(section) &&\n    !Object.values(section).some((dep) => !is.object(dep) && !is.string(dep))\n  );\n}\n\nexport async function extractPackageFile(\n  content: string,\n  packageFile: string,\n): Promise<PackageFileContent | null> {\n  logger.trace(`pipenv.extractPackageFile(${packageFile})`);\n\n  let pipfile: PipFile;\n  try {\n    // TODO: fix type (#9610)\n    pipfile = parseToml(content) as any;\n  } catch (err) {\n    logger.debug({ err, packageFile }, 'Error parsing Pipfile');\n    return null;\n  }\n  const res: PackageFileContent = { deps: [] };\n\n  const sources = pipfile?.source;\n\n  if (sources) {\n    res.registryUrls = sources.map((source) => source.url);\n  }\n\n  res.deps = Object.entries(pipfile)\n    .map(([category, section]) => {\n      if (\n        category === 'source' ||\n        category === 'requires' ||\n        !isPipRequirements(section)\n      ) {\n        return [];\n      }\n\n      return extractFromSection(category, section, sources);\n    })\n    .flat();\n\n  if (!res.deps.length) {\n    return null;\n  }\n\n  const extractedConstraints: Record<string, any> = {};\n\n  const pipfileDir = getParentDir(ensureLocalPath(packageFile));\n\n  const pythonConstraint = await pipenvDetect.getPythonConstraint(pipfileDir);\n  if (pythonConstraint) {\n    extractedConstraints.python = pythonConstraint;\n  }\n\n  const pipenvConstraint = await pipenvDetect.getPipenvConstraint(pipfileDir);\n  if (pipenvConstraint) {\n    extractedConstraints.pipenv = pipenvConstraint;\n  }\n\n  const lockFileName = `${packageFile}.lock`;\n  if (await localPathExists(lockFileName)) {\n    res.lockFiles = [lockFileName];\n  }\n\n  res.extractedConstraints = extractedConstraints;\n  return res;\n}\n"]}