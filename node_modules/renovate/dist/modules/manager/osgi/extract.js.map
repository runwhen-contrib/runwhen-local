{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/osgi/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport json5 from 'json5';\nimport { coerce, satisfies } from 'semver';\nimport { logger } from '../../../logger';\nimport { MavenDatasource } from '../../datasource/maven';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFileContent,\n} from '../types';\nimport type { Bundle, FeatureModel } from './types';\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string,\n  _config?: ExtractConfig,\n): PackageFileContent | null {\n  // References:\n  // - OSGi compendium release 8 ( https://docs.osgi.org/specification/osgi.cmpn/8.0.0/service.feature.html )\n  // - The Sling implementation of the feature model ( https://sling.apache.org/documentation/development/feature-model.html )\n  logger.trace(`osgi.extractPackageFile($packageFile)`);\n\n  const deps: PackageDependency[] = [];\n  let featureModel: FeatureModel;\n  try {\n    // Compendium R8 159.3: JS comments are supported\n    featureModel = json5.parse<FeatureModel>(content);\n  } catch (err) {\n    logger.warn({ packageFile, err }, 'Failed to parse osgi file');\n    return null;\n  }\n\n  if (\n    // for empty an empty result\n    is.nullOrUndefined(featureModel) ||\n    // Compendium R8 159.9: resource versioning\n    !isSupportedFeatureResourceVersion(featureModel, packageFile)\n  ) {\n    return null;\n  }\n\n  // OSGi Compendium R8 159.4: bundles entry\n  const allBundles = featureModel.bundles ?? [];\n\n  // The 'execution-environment' key is supported by the Sling/OSGi feature model implementation\n  const execEnvFramework =\n    featureModel['execution-environment:JSON|false']?.framework;\n  if (!is.nullOrUndefined(execEnvFramework)) {\n    allBundles.push(execEnvFramework);\n  }\n\n  // parse custom sections\n  //\n  // Note: we do not support artifact list extensions as defined in\n  // section 159.7.3 yet. As of 05-12-2022, there is no implementation that\n  // supports this\n  for (const [section, value] of Object.entries(featureModel)) {\n    logger.trace({ fileName: packageFile, section }, 'Parsing section');\n    const customSectionEntries = extractArtifactList(section, value);\n    allBundles.push(...customSectionEntries);\n  }\n\n  // convert bundles to dependencies\n  for (const entry of allBundles) {\n    const rawGav = typeof entry === 'string' ? entry : entry.id;\n    // skip invalid definitions, such as objects without an id set\n    if (!rawGav) {\n      continue;\n    }\n\n    // both '/' and ':' are valid separators, but the Maven datasource\n    // expects the separator to be ':'\n    const gav = rawGav.replace(/\\//g, ':');\n\n    // identifiers support 3-5 parts, see OSGi R8 - 159.2.1 Identifiers\n    // groupId ':' artifactId ( ':' type ( ':' classifier )? )? ':' version\n    const parts = gav.split(':');\n    if (parts.length < 3 || parts.length > 5) {\n      deps.push({\n        depName: gav,\n        skipReason: 'invalid-value',\n      });\n      continue;\n    }\n    // parsing should use the last entry for the version\n    const currentValue = parts[parts.length - 1];\n    const result: PackageDependency = {\n      datasource: MavenDatasource.id,\n      depName: `${parts[0]}:${parts[1]}`,\n    };\n    if (currentValue.includes('${')) {\n      result.skipReason = 'contains-variable';\n    } else {\n      result.currentValue = currentValue;\n    }\n\n    deps.push(result);\n  }\n\n  return deps.length ? { deps } : null;\n}\n\nfunction isSupportedFeatureResourceVersion(\n  featureModel: FeatureModel,\n  fileName: string,\n): boolean {\n  const resourceVersion = featureModel['feature-resource-version'];\n  if (resourceVersion) {\n    const resourceSemVer = coerce(resourceVersion);\n    if (!resourceSemVer) {\n      logger.debug(\n        `Skipping file ${fileName} due to invalid feature-resource-version '${resourceVersion}'`,\n      );\n      return false;\n    }\n\n    // we only support 1.x, although no over version has been defined\n    if (!satisfies(resourceSemVer, '^1')) {\n      logger.debug(\n        `Skipping file ${fileName} due to unsupported feature-resource-version '${resourceVersion}'`,\n      );\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction extractArtifactList(\n  sectionName: string,\n  sectionValue: unknown,\n): Bundle[] {\n  // The 'ARTIFACTS' key is supported by the Sling/OSGi feature model implementation\n  if (sectionName.includes(':ARTIFACTS|') && is.array(sectionValue)) {\n    return sectionValue as Bundle[];\n  }\n\n  return [];\n}\n"]}