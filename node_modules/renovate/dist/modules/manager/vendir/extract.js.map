{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/vendir/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import { logger } from '../../../logger';\nimport { getHttpUrl } from '../../../util/git/url';\nimport { parseSingleYaml } from '../../../util/yaml';\nimport { GitRefsDatasource } from '../../datasource/git-refs';\nimport { GithubReleasesDatasource } from '../../datasource/github-releases';\nimport { HelmDatasource } from '../../datasource/helm';\nimport { getDep } from '../dockerfile/extract';\nimport { isOCIRegistry, removeOCIPrefix } from '../helmv3/oci';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFileContent,\n} from '../types';\nimport type {\n  GitRefDefinition,\n  GithubReleaseDefinition,\n  HelmChartDefinition,\n  VendirDefinition,\n} from './schema';\nimport { Vendir } from './schema';\n\nexport function extractHelmChart(\n  helmChart: HelmChartDefinition,\n  aliases?: Record<string, string>,\n): PackageDependency | null {\n  if (isOCIRegistry(helmChart.repository.url)) {\n    const dep = getDep(\n      `${removeOCIPrefix(helmChart.repository.url)}/${helmChart.name}:${helmChart.version}`,\n      false,\n      aliases,\n    );\n    return {\n      ...dep,\n      depName: helmChart.name,\n      depType: 'HelmChart',\n      // https://github.com/helm/helm/issues/10312\n      // https://github.com/helm/helm/issues/10678\n      pinDigests: false,\n    };\n  }\n  return {\n    depName: helmChart.name,\n    currentValue: helmChart.version,\n    depType: 'HelmChart',\n    registryUrls: [helmChart.repository.url],\n    datasource: HelmDatasource.id,\n  };\n}\n\nexport function extractGitSource(\n  gitSource: GitRefDefinition,\n): PackageDependency | null {\n  const httpUrl = getHttpUrl(gitSource.url);\n  return {\n    depName: httpUrl,\n    packageName: httpUrl,\n    depType: 'GitSource',\n    currentValue: gitSource.ref,\n    registryUrls: [httpUrl],\n    datasource: GitRefsDatasource.id,\n  };\n}\n\nexport function extractGithubReleaseSource(\n  githubRelease: GithubReleaseDefinition,\n): PackageDependency | null {\n  return {\n    depName: githubRelease.slug,\n    packageName: githubRelease.slug,\n    depType: 'GithubRelease',\n    currentValue: githubRelease.tag,\n    datasource: GithubReleasesDatasource.id,\n  };\n}\n\nexport function parseVendir(\n  content: string,\n  packageFile?: string,\n): VendirDefinition | null {\n  try {\n    return parseSingleYaml(content, {\n      customSchema: Vendir,\n      removeTemplates: true,\n    });\n  } catch {\n    logger.debug({ packageFile }, 'Error parsing vendir.yml file');\n    return null;\n  }\n}\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string,\n  config: ExtractConfig,\n): PackageFileContent | null {\n  logger.trace(`vendir.extractPackageFile(${packageFile})`);\n  const deps: PackageDependency[] = [];\n\n  const pkg = parseVendir(content, packageFile);\n  if (!pkg) {\n    return null;\n  }\n\n  // grab the helm charts\n  const contents = pkg.directories.flatMap((directory) => directory.contents);\n  for (const content of contents) {\n    if ('helmChart' in content && content.helmChart) {\n      const dep = extractHelmChart(content.helmChart, config.registryAliases);\n      if (dep) {\n        deps.push(dep);\n      }\n    } else if ('git' in content && content.git) {\n      const dep = extractGitSource(content.git);\n      if (dep) {\n        deps.push(dep);\n      }\n    } else if ('githubRelease' in content && content.githubRelease) {\n      const dep = extractGithubReleaseSource(content.githubRelease);\n      if (dep) {\n        deps.push(dep);\n      }\n    }\n  }\n\n  if (!deps.length) {\n    return null;\n  }\n  return { deps };\n}\n"]}