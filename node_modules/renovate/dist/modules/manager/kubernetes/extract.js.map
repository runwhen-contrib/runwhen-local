{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/kubernetes/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { logger } from '../../../logger';\nimport { newlineRegex, regEx } from '../../../util/regex';\nimport { parseYaml } from '../../../util/yaml';\nimport {\n  KubernetesApiDatasource,\n  supportedApis,\n} from '../../datasource/kubernetes-api';\nimport * as kubernetesApiVersioning from '../../versioning/kubernetes-api';\nimport { getDep } from '../dockerfile/extract';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFileContent,\n} from '../types';\nimport type { KubernetesConfiguration } from './types';\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string,\n  config: ExtractConfig,\n): PackageFileContent | null {\n  logger.trace('kubernetes.extractPackageFile()');\n\n  const isKubernetesManifest =\n    regEx(/\\s*apiVersion\\s*:/).test(content) &&\n    regEx(/\\s*kind\\s*:/).test(content);\n  if (!isKubernetesManifest) {\n    return null;\n  }\n\n  const deps: PackageDependency[] = [\n    ...extractImages(content, config),\n    ...extractApis(content, packageFile),\n  ];\n\n  return deps.length ? { deps } : null;\n}\n\n// Comes from https://github.com/distribution/reference/blob/v0.6.0/regexp.go\n// Extracted & converted with https://go.dev/play/p/ZwF3vvRD9Rs\nconst dockerImageRegexPattern = `((?:(?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))*|\\\\[(?:[a-fA-F0-9:]+)\\\\])(?::[0-9]+)?/)?[a-z0-9]+(?:(?:[._]|__|[-]+)[a-z0-9]+)*(?:/[a-z0-9]+(?:(?:[._]|__|[-]+)[a-z0-9]+)*)*)(?::([A-Za-z0-9][A-Za-z0-9.-]{0,127}))?(?:@([A-Za-z][A-Za-z0-9]*(?:[-_+.][A-Za-z][A-Za-z0-9]*)*[:][0-9a-fA-F]{32,}))?`;\n\nconst k8sImageRegex = regEx(\n  `^\\\\s*-?\\\\s*image:\\\\s*['\"]?(${dockerImageRegexPattern})['\"]?\\\\s*`,\n);\n\nfunction extractImages(\n  content: string,\n  config: ExtractConfig,\n): PackageDependency[] {\n  const deps: PackageDependency[] = [];\n\n  for (const line of content.split(newlineRegex)) {\n    const match = k8sImageRegex.exec(line);\n    if (match) {\n      const currentFrom = match[1];\n      const dep = getDep(currentFrom, true, config.registryAliases);\n      logger.debug(\n        {\n          depName: dep.depName,\n          currentValue: dep.currentValue,\n          currentDigest: dep.currentDigest,\n        },\n        'Kubernetes image',\n      );\n      deps.push(dep);\n    }\n  }\n\n  return deps;\n}\n\nfunction extractApis(\n  content: string,\n  packageFile: string,\n): PackageDependency[] {\n  let doc: KubernetesConfiguration[];\n\n  try {\n    // TODO: use schema (#9610)\n    doc = parseYaml(content, {\n      removeTemplates: true,\n    });\n  } catch (err) {\n    logger.debug({ err, packageFile }, 'Failed to parse Kubernetes manifest.');\n    return [];\n  }\n\n  return doc\n    .filter(is.truthy)\n    .filter(\n      (m) =>\n        is.nonEmptyStringAndNotWhitespace(m.kind) &&\n        is.nonEmptyStringAndNotWhitespace(m.apiVersion),\n    )\n    .filter((m) => supportedApis.has(m.kind))\n    .map((configuration) => ({\n      depName: configuration.kind,\n      currentValue: configuration.apiVersion,\n      datasource: KubernetesApiDatasource.id,\n      versioning: kubernetesApiVersioning.id,\n    }));\n}\n"]}