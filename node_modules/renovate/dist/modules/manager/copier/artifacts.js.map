{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/copier/artifacts.ts"],"names":[],"mappings":";;AAqDA,0CA+GC;;AApKD,iCAA8B;AAC9B,0DAA0B;AAC1B,mDAAsD;AACtD,4CAAyC;AACzC,6CAA0C;AAE1C,yCAAiD;AACjD,2CAAkD;AAClD,iDAAoE;AAMpE,mCAGiB;AAEjB,MAAM,uBAAuB,GAAG,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;AAElE,SAAS,YAAY,CACnB,MAA6B,EAC7B,eAAuB,EACvB,UAAkB;IAElB,MAAM,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,uBAAuB,CAAC,CAAC;IACjE,IAAI,qBAAY,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;QAC9D,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1B,CAAC;IACD,OAAO,CAAC,IAAI,CACV,gBAAgB,EAChB,IAAA,aAAK,EAAC,eAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,EACtC,WAAW,EACX,IAAA,aAAK,EAAC,UAAU,CAAC,CAClB,CAAC;IACF,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC;AAED,SAAS,aAAa,CACpB,eAAuB,EACvB,OAAe;IAEf,OAAO;QACL;YACE,aAAa,EAAE;gBACb,QAAQ,EAAE,eAAe;gBACzB,MAAM,EAAE,OAAO;aAChB;SACF;KACF,CAAC;AACJ,CAAC;AAEM,KAAK,UAAU,eAAe,CAAC,EACpC,eAAe,EACf,WAAW,EACX,MAAM,GACS;IACf,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC7C,8EAA8E;QAC9E,OAAO,aAAa,CAClB,eAAe,EACf,sCAAsC,WAAW,CAAC,MAAM,gBAAgB,CACzE,CAAC;IACJ,CAAC;IAED,MAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,UAAU,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC;IAC1E,IAAI,CAAC,UAAU,EAAE,CAAC;QAChB,OAAO,aAAa,CAClB,eAAe,EACf,8CAA8C,CAC/C,CAAC;IACJ,CAAC;IAED,MAAM,OAAO,GAAG,YAAY,CAAC,MAAM,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;IAClE,MAAM,MAAM,GAAG,IAAA,iCAA0B,EAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACxD,MAAM,WAAW,GAAgB;QAC/B,OAAO,EAAE,eAAe;QACxB,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,MAAM;QAChB,eAAe,EAAE;YACf;gBACE,QAAQ,EAAE,QAAQ;gBAClB,UAAU,EAAE,IAAA,kCAA0B,EAAC,MAAM,CAAC;aAC/C;YACD;gBACE,QAAQ,EAAE,QAAQ;gBAClB,UAAU,EAAE,IAAA,kCAA0B,EAAC,MAAM,CAAC;aAC/C;SACF;KACF,CAAC;IACF,IAAI,CAAC;QACH,MAAM,IAAA,WAAI,EAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACnC,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,qCAAqC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;QAC1E,OAAO,aAAa,CAAC,eAAe,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,MAAM,GAAG,MAAM,IAAA,mBAAa,GAAE,CAAC;IACrC,qEAAqE;IACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC;QAC/C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACjC,mDAAmD;QACnD,MAAM,GAAG,GACP,wCAAwC,MAAM,CAAC,UAAU,CAAC,MAAM,oBAAoB;YACpF,uEAAuE;YACvE,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,eAAM,CAAC,KAAK,CAAC,EAAE,eAAe,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,GAAG,CAAC,CAAC;IAC3E,CAAC;IAED,MAAM,GAAG,GAA4B,EAAE,CAAC;IAExC,KAAK,MAAM,CAAC,IAAI;QACd,GAAG,MAAM,CAAC,QAAQ;QAClB,GAAG,MAAM,CAAC,SAAS;QACnB,GAAG,MAAM,CAAC,UAAU;KACrB,EAAE,CAAC;QACF,MAAM,OAAO,GAA0B;YACrC,IAAI,EAAE;gBACJ,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,CAAC;gBACP,QAAQ,EAAE,MAAM,IAAA,kBAAa,EAAC,CAAC,CAAC;aACjC;SACF,CAAC;QACF,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;YAClC,4CAA4C;YAC5C,oCAAoC;YACpC,OAAO,CAAC,MAAM,GAAG;gBACf,IAAI,EAAE,CAAC;gBACP,OAAO,EACL,6EAA6E;aAChF,CAAC;QACJ,CAAC;QACD,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpB,CAAC;IACD,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;QAC/B,GAAG,CAAC,IAAI,CAAC;YACP,IAAI,EAAE;gBACJ,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,CAAC;aACR;SACF,CAAC,CAAC;IACL,CAAC;IACD,kEAAkE;IAClE,0EAA0E;IAC1E,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;QAC/B,GAAG,CAAC,IAAI,CAAC;YACP,IAAI,EAAE;gBACJ,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,CAAC,CAAC,IAAI;aACb;SACF,CAAC,CAAC;QACH,GAAG,CAAC,IAAI,CAAC;YACP,IAAI,EAAE;gBACJ,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,CAAC,CAAC,EAAE;gBACV,QAAQ,EAAE,MAAM,IAAA,kBAAa,EAAC,CAAC,CAAC,EAAE,CAAC;aACpC;SACF,CAAC,CAAC;IACL,CAAC;IACD,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["import { quote } from 'shlex';\nimport upath from 'upath';\nimport { GlobalConfig } from '../../../config/global';\nimport { logger } from '../../../logger';\nimport { exec } from '../../../util/exec';\nimport type { ExecOptions } from '../../../util/exec/types';\nimport { readLocalFile } from '../../../util/fs';\nimport { getRepoStatus } from '../../../util/git';\nimport { getGitEnvironmentVariables } from '../../../util/git/auth';\nimport type {\n  UpdateArtifact,\n  UpdateArtifactsConfig,\n  UpdateArtifactsResult,\n} from '../types';\nimport {\n  getCopierVersionConstraint,\n  getPythonVersionConstraint,\n} from './utils';\n\nconst DEFAULT_COMMAND_OPTIONS = ['--skip-answered', '--defaults'];\n\nfunction buildCommand(\n  config: UpdateArtifactsConfig,\n  packageFileName: string,\n  newVersion: string,\n): string {\n  const command = ['copier', 'update', ...DEFAULT_COMMAND_OPTIONS];\n  if (GlobalConfig.get('allowScripts') && !config.ignoreScripts) {\n    command.push('--trust');\n  }\n  command.push(\n    '--answers-file',\n    quote(upath.basename(packageFileName)),\n    '--vcs-ref',\n    quote(newVersion),\n  );\n  return command.join(' ');\n}\n\nfunction artifactError(\n  packageFileName: string,\n  message: string,\n): UpdateArtifactsResult[] {\n  return [\n    {\n      artifactError: {\n        lockFile: packageFileName,\n        stderr: message,\n      },\n    },\n  ];\n}\n\nexport async function updateArtifacts({\n  packageFileName,\n  updatedDeps,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  if (!updatedDeps || updatedDeps.length !== 1) {\n    // Each answers file (~ packageFileName) has exactly one dependency to update.\n    return artifactError(\n      packageFileName,\n      `Unexpected number of dependencies: ${updatedDeps.length} (should be 1)`,\n    );\n  }\n\n  const newVersion = updatedDeps[0]?.newVersion ?? updatedDeps[0]?.newValue;\n  if (!newVersion) {\n    return artifactError(\n      packageFileName,\n      'Missing copier template version to update to',\n    );\n  }\n\n  const command = buildCommand(config, packageFileName, newVersion);\n  const gitEnv = getGitEnvironmentVariables(['git-tags']);\n  const execOptions: ExecOptions = {\n    cwdFile: packageFileName,\n    docker: {},\n    extraEnv: gitEnv,\n    toolConstraints: [\n      {\n        toolName: 'python',\n        constraint: getPythonVersionConstraint(config),\n      },\n      {\n        toolName: 'copier',\n        constraint: getCopierVersionConstraint(config),\n      },\n    ],\n  };\n  try {\n    await exec(command, execOptions);\n  } catch (err) {\n    logger.debug({ err }, `Failed to update copier template: ${err.message}`);\n    return artifactError(packageFileName, err.message);\n  }\n\n  const status = await getRepoStatus();\n  // If the answers file didn't change, Copier did not update anything.\n  if (!status.modified.includes(packageFileName)) {\n    return null;\n  }\n\n  if (status.conflicted.length > 0) {\n    // Sometimes, Copier erroneously reports conflicts.\n    const msg =\n      `Updating the Copier template yielded ${status.conflicted.length} merge conflicts. ` +\n      'Please check the proposed changes carefully! Conflicting files:\\n  * ' +\n      status.conflicted.join('\\n  * ');\n    logger.debug({ packageFileName, depName: updatedDeps[0]?.depName }, msg);\n  }\n\n  const res: UpdateArtifactsResult[] = [];\n\n  for (const f of [\n    ...status.modified,\n    ...status.not_added,\n    ...status.conflicted,\n  ]) {\n    const fileRes: UpdateArtifactsResult = {\n      file: {\n        type: 'addition',\n        path: f,\n        contents: await readLocalFile(f),\n      },\n    };\n    if (status.conflicted.includes(f)) {\n      // Make the reviewer aware of the conflicts.\n      // This will be posted in a comment.\n      fileRes.notice = {\n        file: f,\n        message:\n          'This file had merge conflicts. Please check the proposed changes carefully!',\n      };\n    }\n    res.push(fileRes);\n  }\n  for (const f of status.deleted) {\n    res.push({\n      file: {\n        type: 'deletion',\n        path: f,\n      },\n    });\n  }\n  // `git status` might detect a rename, which is then not contained\n  // in not_added/deleted. Ensure we respect renames as well if they happen.\n  for (const f of status.renamed) {\n    res.push({\n      file: {\n        type: 'deletion',\n        path: f.from,\n      },\n    });\n    res.push({\n      file: {\n        type: 'addition',\n        path: f.to,\n        contents: await readLocalFile(f.to),\n      },\n    });\n  }\n  return res;\n}\n"]}