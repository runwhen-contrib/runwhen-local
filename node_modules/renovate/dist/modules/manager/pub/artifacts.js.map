{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pub/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport { TEMPORARY_ERROR } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { exec } from '../../../util/exec';\nimport type { ExecOptions } from '../../../util/exec/types';\nimport {\n  getSiblingFileName,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../util/fs';\nimport type { UpdateArtifact, UpdateArtifactsResult, Upgrade } from '../types';\nimport { parsePubspec, parsePubspecLock } from './utils';\n\nconst SDK_NAMES = ['dart', 'flutter'];\nconst PUB_GET_COMMAND = 'pub get --no-precompile';\n\nexport async function updateArtifacts({\n  packageFileName,\n  updatedDeps,\n  newPackageFileContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  logger.debug(`pub.updateArtifacts(${packageFileName})`);\n  const { isLockFileMaintenance } = config;\n\n  if (is.emptyArray(updatedDeps) && !isLockFileMaintenance) {\n    logger.debug('No updated pub deps - returning null');\n    return null;\n  }\n\n  const lockFileName = getSiblingFileName(packageFileName, 'pubspec.lock');\n  const oldLockFileContent = await readLocalFile(lockFileName, 'utf8');\n  if (!oldLockFileContent) {\n    logger.debug('No pubspec.lock found');\n    return null;\n  }\n\n  try {\n    await writeLocalFile(packageFileName, newPackageFileContent);\n\n    const isFlutter = newPackageFileContent.includes('sdk: flutter');\n    const toolName = isFlutter ? 'flutter' : 'dart';\n    const cmd = getExecCommand(toolName, updatedDeps, isLockFileMaintenance);\n\n    let constraint = config.constraints?.[toolName];\n    if (!constraint) {\n      const pubspec = parsePubspec(packageFileName, newPackageFileContent);\n      const pubspecToolName = isFlutter ? 'flutter' : 'sdk';\n      constraint = pubspec?.environment[pubspecToolName];\n\n      if (!constraint) {\n        const pubspecLock = parsePubspecLock(lockFileName, oldLockFileContent);\n        constraint = pubspecLock?.sdks[toolName];\n      }\n    }\n\n    const execOptions: ExecOptions = {\n      cwdFile: packageFileName,\n      docker: {},\n      toolConstraints: [\n        {\n          toolName,\n          constraint,\n        },\n      ],\n    };\n\n    await exec(cmd, execOptions);\n    const newLockFileContent = await readLocalFile(lockFileName, 'utf8');\n    if (oldLockFileContent === newLockFileContent) {\n      return null;\n    }\n    return [\n      {\n        file: {\n          type: 'addition',\n          path: lockFileName,\n          contents: newLockFileContent,\n        },\n      },\n    ];\n  } catch (err) {\n    // istanbul ignore if\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.warn({ lockfile: lockFileName, err }, `Failed to update lock file`);\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n\nfunction getExecCommand(\n  toolName: string,\n  updatedDeps: Upgrade<Record<string, unknown>>[],\n  isLockFileMaintenance: boolean | undefined,\n): string {\n  if (isLockFileMaintenance) {\n    return `${toolName} pub upgrade`;\n  } else {\n    const depNames = updatedDeps.map((dep) => dep.depName).filter(is.string);\n    if (depNames.length === 1 && SDK_NAMES.includes(depNames[0])) {\n      return `${toolName} ${PUB_GET_COMMAND}`;\n    }\n    // If there are two updated dependencies and both of them are SDK updates (Dart and Flutter),\n    // we use Flutter over Dart to run `pub get` as it is a Flutter project.\n    else if (\n      depNames.length === 2 &&\n      depNames.filter((depName) => SDK_NAMES.includes(depName)).length === 2\n    ) {\n      return `flutter ${PUB_GET_COMMAND}`;\n    } else {\n      const depNamesCmd = depNames\n        .filter((depName) => !SDK_NAMES.includes(depName))\n        .map(quote)\n        .join(' ');\n      return `${toolName} pub upgrade ${depNamesCmd}`;\n    }\n  }\n}\n"]}