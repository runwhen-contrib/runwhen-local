{"version":3,"file":"oci.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/bazel-module/parser/oci.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AACxB,uDAA8D;AAE9D,2CAA+E;AAElE,QAAA,kBAAkB,GAAG,KAAK,CAAC;AAExC,MAAM,OAAO,GAAG,MAAM,CAAC;AAEV,QAAA,gBAAgB,GAAG,CAAC,MAAM,CAAC,CAAC;AAE5B,QAAA,sBAAsB,GAAG,sCAA0B,CAAC,MAAM,CAAC;IACtE,SAAS,EAAE,OAAC,CAAC,OAAO,CAAC,0BAAkB,CAAC;IACxC,GAAG,EAAE,OAAC,CAAC,OAAO,CAAC,OAAO,CAAC;IACvB,QAAQ,EAAE,OAAC,CAAC,MAAM,CAAC;QACjB,IAAI,EAAE,gCAAoB;QAC1B,KAAK,EAAE,gCAAoB;QAC3B,GAAG,EAAE,gCAAoB,CAAC,QAAQ,EAAE;QACpC,MAAM,EAAE,gCAAoB,CAAC,QAAQ,EAAE;KACxC,CAAC;CACH,CAAC,CAAC,SAAS,CACV,CAAC,EACC,SAAS,EACT,QAAQ,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GACvC,EAAqB,EAAE,CAAC,CAAC;IACxB,UAAU,EAAE,yBAAgB,CAAC,EAAE;IAC/B,OAAO,EAAE,UAAU;IACnB,OAAO,EAAE,IAAI,CAAC,KAAK;IACnB,WAAW,EAAE,KAAK,CAAC,KAAK;IACxB,YAAY,EAAE,GAAG,EAAE,KAAK;IACxB,aAAa,EAAE,MAAM,EAAE,KAAK;IAC5B,yEAAyE;IACzE,4BAA4B;IAC5B,aAAa,EAAE,SAAS;CACzB,CAAC,CACH,CAAC","sourcesContent":["import { z } from 'zod';\nimport { DockerDatasource } from '../../../datasource/docker';\nimport type { PackageDependency } from '../../types';\nimport { ExtensionTagFragmentSchema, StringFragmentSchema } from './fragments';\n\nexport const ociExtensionPrefix = 'oci';\n\nconst pullTag = 'pull';\n\nexport const ociExtensionTags = ['pull'];\n\nexport const RuleToDockerPackageDep = ExtensionTagFragmentSchema.extend({\n  extension: z.literal(ociExtensionPrefix),\n  tag: z.literal(pullTag),\n  children: z.object({\n    name: StringFragmentSchema,\n    image: StringFragmentSchema,\n    tag: StringFragmentSchema.optional(),\n    digest: StringFragmentSchema.optional(),\n  }),\n}).transform(\n  ({\n    rawString,\n    children: { name, image, tag, digest },\n  }): PackageDependency => ({\n    datasource: DockerDatasource.id,\n    depType: 'oci_pull',\n    depName: name.value,\n    packageName: image.value,\n    currentValue: tag?.value,\n    currentDigest: digest?.value,\n    // Provide a replace string so the auto replacer can replace both the tag\n    // and digest if applicable.\n    replaceString: rawString,\n  }),\n);\n"]}