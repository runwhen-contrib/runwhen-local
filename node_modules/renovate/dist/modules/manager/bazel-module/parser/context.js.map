{"version":3,"file":"context.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/bazel-module/parser/context.ts"],"names":[],"mappings":";;;;AAQA,+DAAyC;AAQzC,MAAa,kBAAmB,SAAQ,KAAK;IAClC,OAAO,CAAe;IACtB,MAAM,CAAgB;IAC/B,YAAY,OAAqB,EAAE,MAAqB;QACtD,MAAM,GAAG,GAAG,mCAAmC,OAAO,CAAC,IAAI,aACzD,MAAM,EAAE,IAAI,IAAI,MAClB,EAAE,CAAC;QACH,KAAK,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;CACF;AAZD,gDAYC;AAED,MAAa,GAAG;IACL,MAAM,CAAS;IACxB,OAAO,CAAmB;IAC1B,KAAK,CAAiB;IAEtB,YAAY,MAAc;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,IAAY,WAAW;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,IAAY,OAAO;QACjB,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QAC3B,IAAI,CAAC,KAAK,SAAS,EAAE,CAAC;YACpB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACtD,CAAC;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAED,IAAY,WAAW;QACrB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;YAC5B,OAAO,OAAO,CAAC;QACjB,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;IACjE,CAAC;IAED,IAAY,mBAAmB;QAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,OAAO,CAAC,IAAI,KAAK,cAAc,EAAE,CAAC;YACpC,OAAO,OAAO,CAAC;QACjB,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;IAC1E,CAAC;IAED,IAAY,YAAY;QACtB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;YAC7B,OAAO,OAAO,CAAC;QACjB,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;IAClE,CAAC;IAEO,uBAAuB;QAC7B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,SAAS,EAAE,CAAC;YACpB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACtD,CAAC;QACD,IAAI,CAAC,CAAC,IAAI,KAAK,sBAAsB,EAAE,CAAC;YACtC,OAAO,CAAC,CAAC;QACX,CAAC;QACD,MAAM,IAAI,KAAK,CACb,+DAA+D,CAChE,CAAC;IACJ,CAAC;IAEO,QAAQ;QACd,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,KAAK,CAAC;QACf,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;QAEhC,IAAI,MAAM,EAAE,CAAC;YACX,IAAI,MAAM,CAAC,IAAI,KAAK,WAAW,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC9D,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC;gBACvB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;gBACzB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,IAAI,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC9D,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,OAAO,IAAI,CAAC;YACd,CAAC;YACD,IACE,CAAC,MAAM,CAAC,IAAI,KAAK,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,cAAc,CAAC;gBAC1D,OAAO,CAAC,IAAI,KAAK,WAAW;gBAC5B,OAAO,CAAC,KAAK,KAAK,SAAS,EAC3B,CAAC;gBACD,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC9C,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;aAAM,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,OAAO,CAAC,IAAI,KAAK,cAAc,EAAE,CAAC;YACtE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,IAAI,kBAAkB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAChD,CAAC;IAEO,YAAY;QAClB,OAAO,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACvB,gBAAgB;QAClB,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,KAAuB;QAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;IAED,SAAS,CAAC,IAAY;QACpB,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO;QACL,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;IAED,mBAAmB,CACjB,SAAiB,EACjB,YAAoB,EACpB,MAAc;QAEd,MAAM,UAAU,GAAG,SAAS,CAAC,oBAAoB,CAC/C,SAAS,EACT,YAAY,EACZ,MAAM,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,iBAAiB,CAAC,GAAW;QAC3B,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE3E,MAAM,YAAY,GAAG,SAAS,CAAC,YAAY,CACzC,SAAS,EACT,YAAY,EACZ,GAAG,EACH,MAAM,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,eAAe,CAAC,MAAc;QAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACrC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC;QACtB,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;IAED,cAAc,CAAC,IAAY;QACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;IAED,QAAQ;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;QAChC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;QACxB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;CACF;AA/KD,kBA+KC","sourcesContent":["import type {\n  AllFragments,\n  ArrayFragment,\n  ExtensionTagFragment,\n  PreparedExtensionTagFragment,\n  ResultFragment,\n  RuleFragment,\n} from './fragments';\nimport * as fragments from './fragments';\n\n// Represents the fields that the context must have.\nexport interface CtxCompatible {\n  results: ResultFragment[];\n  stack: AllFragments[];\n}\n\nexport class CtxProcessingError extends Error {\n  readonly current: AllFragments;\n  readonly parent?: AllFragments;\n  constructor(current: AllFragments, parent?: AllFragments) {\n    const msg = `Invalid context state. current: ${current.type}, parent: ${\n      parent?.type ?? 'none'\n    }`;\n    super(msg);\n    this.name = 'CtxProcessingError';\n    this.current = current;\n    this.parent = parent;\n  }\n}\n\nexport class Ctx implements CtxCompatible {\n  readonly source: string;\n  results: ResultFragment[];\n  stack: AllFragments[];\n\n  constructor(source: string) {\n    this.source = source;\n    this.results = [];\n    this.stack = [];\n  }\n\n  private get safeCurrent(): AllFragments | undefined {\n    return this.stack.at(-1);\n  }\n\n  private get current(): AllFragments {\n    const c = this.safeCurrent;\n    if (c === undefined) {\n      throw new Error('Requested current, but no value.');\n    }\n    return c;\n  }\n\n  private get currentRule(): RuleFragment {\n    const current = this.current;\n    if (current.type === 'rule') {\n      return current;\n    }\n    throw new Error('Requested current rule, but does not exist.');\n  }\n\n  private get currentExtensionTag(): ExtensionTagFragment {\n    const current = this.current;\n    if (current.type === 'extensionTag') {\n      return current;\n    }\n    throw new Error('Requested current extension tag, but does not exist.');\n  }\n\n  private get currentArray(): ArrayFragment {\n    const current = this.current;\n    if (current.type === 'array') {\n      return current;\n    }\n    throw new Error('Requested current array, but does not exist.');\n  }\n\n  private popPreparedExtensionTag(): PreparedExtensionTagFragment {\n    const c = this.stack.pop();\n    if (c === undefined) {\n      throw new Error('Requested current, but no value.');\n    }\n    if (c.type === 'preparedExtensionTag') {\n      return c;\n    }\n    throw new Error(\n      'Requested current prepared extension tag, but does not exist.',\n    );\n  }\n\n  private popStack(): boolean {\n    const current = this.stack.pop();\n    if (!current) {\n      return false;\n    }\n    if (!current.isComplete) {\n      this.stack.push(current);\n      return false;\n    }\n    const parent = this.safeCurrent;\n\n    if (parent) {\n      if (parent.type === 'attribute' && fragments.isValue(current)) {\n        parent.value = current;\n        parent.isComplete = true;\n        return true;\n      }\n      if (parent.type === 'array' && fragments.isPrimitive(current)) {\n        parent.items.push(current);\n        return true;\n      }\n      if (\n        (parent.type === 'rule' || parent.type === 'extensionTag') &&\n        current.type === 'attribute' &&\n        current.value !== undefined\n      ) {\n        parent.children[current.name] = current.value;\n        return true;\n      }\n    } else if (current.type === 'rule' || current.type === 'extensionTag') {\n      this.results.push(current);\n      return true;\n    }\n\n    throw new CtxProcessingError(current, parent);\n  }\n\n  private processStack(): Ctx {\n    while (this.popStack()) {\n      // Nothing to do\n    }\n    return this;\n  }\n\n  addString(value: string): Ctx {\n    this.stack.push(fragments.string(value));\n    return this.processStack();\n  }\n\n  addBoolean(value: string | boolean): Ctx {\n    this.stack.push(fragments.boolean(value));\n    return this.processStack();\n  }\n\n  startRule(name: string): Ctx {\n    const rule = fragments.rule(name);\n    this.stack.push(rule);\n    return this;\n  }\n\n  endRule(): Ctx {\n    const rule = this.currentRule;\n    rule.isComplete = true;\n    return this.processStack();\n  }\n\n  prepareExtensionTag(\n    extension: string,\n    rawExtension: string,\n    offset: number,\n  ): Ctx {\n    const preppedTag = fragments.preparedExtensionTag(\n      extension,\n      rawExtension,\n      offset,\n    );\n    this.stack.push(preppedTag);\n    return this;\n  }\n\n  startExtensionTag(tag: string): Ctx {\n    const { extension, rawExtension, offset } = this.popPreparedExtensionTag();\n\n    const extensionTag = fragments.extensionTag(\n      extension,\n      rawExtension,\n      tag,\n      offset,\n    );\n    this.stack.push(extensionTag);\n    return this;\n  }\n\n  endExtensionTag(offset: number): Ctx {\n    const tag = this.currentExtensionTag;\n    tag.isComplete = true;\n    tag.rawString = this.source.slice(tag.offset, offset);\n    return this.processStack();\n  }\n\n  startAttribute(name: string): Ctx {\n    this.stack.push(fragments.attribute(name));\n    return this.processStack();\n  }\n\n  startArray(): Ctx {\n    this.stack.push(fragments.array());\n    return this.processStack();\n  }\n\n  endArray(): Ctx {\n    const array = this.currentArray;\n    array.isComplete = true;\n    return this.processStack();\n  }\n}\n"]}