{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/kustomize/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import querystring from 'node:querystring';\nimport is from '@sindresorhus/is';\nimport { logger } from '../../../logger';\nimport { coerceArray } from '../../../util/array';\nimport { regEx } from '../../../util/regex';\nimport { parseSingleYaml } from '../../../util/yaml';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport { GithubTagsDatasource } from '../../datasource/github-tags';\nimport { HelmDatasource } from '../../datasource/helm';\nimport { getDep } from '../dockerfile/extract';\nimport { isOCIRegistry, removeOCIPrefix } from '../helmv3/oci';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFileContent,\n} from '../types';\nimport type { HelmChart, Image, Kustomize } from './types';\n\n// URL specifications should follow the hashicorp URL format\n// https://github.com/hashicorp/go-getter#url-format\nconst gitUrl = regEx(\n  /^(?:git::)?(?<url>(?:(?:(?:http|https|ssh):\\/\\/)?(?:.*@)?)?(?<path>(?:[^:/\\s]+(?::[0-9]+)?[:/])?(?<project>[^/\\s]+\\/[^/\\s]+)))(?<subdir>[^?\\s]*)\\?(?<queryString>.+)$/,\n);\n// regex to match URLs with \".git\" delimiter\nconst dotGitRegex = regEx(\n  /^(?:git::)?(?<url>(?:(?:(?:http|https|ssh):\\/\\/)?(?:.*@)?)?(?<path>(?:[^:/\\s]+(?::[0-9]+)?[:/])?(?<project>[^?\\s]*(\\.git))))(?<subdir>[^?\\s]*)\\?(?<queryString>.+)$/,\n);\n// regex to match URLs with \"_git\" delimiter\nconst underscoreGitRegex = regEx(\n  /^(?:git::)?(?<url>(?:(?:(?:http|https|ssh):\\/\\/)?(?:.*@)?)?(?<path>(?:[^:/\\s]+(?::[0-9]+)?[:/])?(?<project>[^?\\s]*)(_git\\/[^/\\s]+)))(?<subdir>[^?\\s]*)\\?(?<queryString>.+)$/,\n);\n// regex to match URLs having an extra \"//\"\nconst gitUrlWithPath = regEx(\n  /^(?:git::)?(?<url>(?:(?:(?:http|https|ssh):\\/\\/)?(?:.*@)?)?(?<path>(?:[^:/\\s]+(?::[0-9]+)?[:/])(?<project>[^?\\s]+)))(?:\\/\\/)(?<subdir>[^?\\s]+)\\?(?<queryString>.+)$/,\n);\n\nexport function extractResource(base: string): PackageDependency | null {\n  let match: RegExpExecArray | null;\n\n  if (base.includes('_git')) {\n    match = underscoreGitRegex.exec(base);\n  } else if (base.includes('.git')) {\n    match = dotGitRegex.exec(base);\n  } else if (gitUrlWithPath.test(base)) {\n    match = gitUrlWithPath.exec(base);\n  } else {\n    match = gitUrl.exec(base);\n  }\n\n  if (!match?.groups) {\n    return null;\n  }\n\n  const { path, queryString } = match.groups;\n  const params = querystring.parse(queryString);\n  const refParam = Array.isArray(params.ref) ? params.ref[0] : params.ref;\n  const versionParam = Array.isArray(params.version)\n    ? params.version[0]\n    : params.version;\n  const currentValue = refParam ?? versionParam;\n  if (!currentValue) {\n    return null;\n  }\n\n  if (regEx(/(?:github\\.com)(:|\\/)/).test(path)) {\n    return {\n      currentValue,\n      datasource: GithubTagsDatasource.id,\n      depName: match.groups.project.replace('.git', ''),\n    };\n  }\n\n  return {\n    datasource: GitTagsDatasource.id,\n    depName: path.replace('.git', ''),\n    packageName: match.groups.url,\n    currentValue,\n  };\n}\n\nexport function extractImage(\n  image: Image,\n  aliases?: Record<string, string>,\n): PackageDependency | null {\n  if (!image.name) {\n    return null;\n  }\n  const nameToSplit = image.newName ?? image.name;\n  if (!is.string(nameToSplit)) {\n    logger.debug({ image }, 'Invalid image name');\n    return null;\n  }\n  const nameDep = getDep(nameToSplit, false, aliases);\n  const { depName } = nameDep;\n  const { digest, newTag } = image;\n  if (digest && newTag) {\n    logger.debug(\n      { newTag, digest },\n      'Kustomize ignores newTag when digest is provided. Pick one, or use `newTag: tag@digest`',\n    );\n    return {\n      depName,\n      currentValue: newTag,\n      currentDigest: digest,\n      skipReason: 'invalid-dependency-specification',\n    };\n  }\n\n  if (digest) {\n    if (!is.string(digest) || !digest.startsWith('sha256:')) {\n      return {\n        depName,\n        currentValue: digest,\n        skipReason: 'invalid-value',\n      };\n    }\n\n    return {\n      ...nameDep,\n      currentDigest: digest,\n      replaceString: digest,\n    };\n  }\n\n  if (newTag) {\n    if (!is.string(newTag) || newTag.startsWith('sha256:')) {\n      return {\n        depName,\n        currentValue: newTag,\n        skipReason: 'invalid-value',\n      };\n    }\n\n    const dep = getDep(`${depName}:${newTag}`, false, aliases);\n    return {\n      ...dep,\n      replaceString: newTag,\n      autoReplaceStringTemplate:\n        '{{newValue}}{{#if newDigest}}@{{newDigest}}{{/if}}',\n    };\n  }\n\n  if (image.newName) {\n    return {\n      ...nameDep,\n      replaceString: image.newName,\n    };\n  }\n\n  return null;\n}\n\nexport function extractHelmChart(\n  helmChart: HelmChart,\n  aliases?: Record<string, string>,\n): PackageDependency | null {\n  if (!helmChart.name) {\n    return null;\n  }\n\n  if (isOCIRegistry(helmChart.repo)) {\n    const dep = getDep(\n      `${removeOCIPrefix(helmChart.repo)}/${helmChart.name}:${helmChart.version}`,\n      false,\n      aliases,\n    );\n    return {\n      ...dep,\n      depName: helmChart.name,\n      // https://github.com/helm/helm/issues/10312\n      // https://github.com/helm/helm/issues/10678\n      pinDigests: false,\n    };\n  }\n\n  return {\n    depName: helmChart.name,\n    currentValue: helmChart.version,\n    registryUrls: [helmChart.repo],\n    datasource: HelmDatasource.id,\n  };\n}\n\nexport function parseKustomize(\n  content: string,\n  packageFile?: string,\n): Kustomize | null {\n  let pkg: Kustomize | null = null;\n  try {\n    // TODO: use schema (#9610)\n    pkg = parseSingleYaml(content);\n  } catch /* istanbul ignore next */ {\n    logger.debug({ packageFile }, 'Error parsing kustomize file');\n    return null;\n  }\n\n  if (!pkg || is.string(pkg)) {\n    return null;\n  }\n\n  pkg.kind ??= 'Kustomization';\n\n  if (!['Kustomization', 'Component'].includes(pkg.kind)) {\n    return null;\n  }\n\n  return pkg;\n}\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string,\n  config: ExtractConfig,\n): PackageFileContent | null {\n  logger.trace(`kustomize.extractPackageFile(${packageFile})`);\n  const deps: PackageDependency[] = [];\n\n  const pkg = parseKustomize(content, packageFile);\n  if (!pkg) {\n    return null;\n  }\n\n  // grab the remote bases\n  for (const base of coerceArray(pkg.bases).filter(is.string)) {\n    const dep = extractResource(base);\n    if (dep) {\n      deps.push({\n        ...dep,\n        depType: pkg.kind,\n      });\n    }\n  }\n\n  // grab the remote resources\n  for (const resource of coerceArray(pkg.resources).filter(is.string)) {\n    const dep = extractResource(resource);\n    if (dep) {\n      deps.push({\n        ...dep,\n        depType: pkg.kind,\n      });\n    }\n  }\n\n  // grab the remote components\n  for (const component of coerceArray(pkg.components).filter(is.string)) {\n    const dep = extractResource(component);\n    if (dep) {\n      deps.push({\n        ...dep,\n        depType: pkg.kind,\n      });\n    }\n  }\n\n  // grab the image tags\n  for (const image of coerceArray(pkg.images)) {\n    const dep = extractImage(image, config.registryAliases);\n    if (dep) {\n      deps.push({\n        ...dep,\n        depType: pkg.kind,\n      });\n    }\n  }\n\n  // grab the helm charts\n  for (const helmChart of coerceArray(pkg.helmCharts)) {\n    const dep = extractHelmChart(helmChart, config.registryAliases);\n    if (dep) {\n      deps.push({\n        ...dep,\n        depType: 'HelmChart',\n      });\n    }\n  }\n\n  if (!deps.length) {\n    return null;\n  }\n  return { deps };\n}\n"]}