{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/devcontainer/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import { logger } from '../../../logger';\nimport { GolangVersionDatasource } from '../../datasource/golang-version';\nimport { NodeVersionDatasource } from '../../datasource/node-version';\nimport { PythonVersionDatasource } from '../../datasource/python-version';\nimport { RubyVersionDatasource } from '../../datasource/ruby-version';\nimport { isValidDependency } from '../custom/utils';\nimport { getDep as getDockerDep } from '../dockerfile/extract';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFileContent,\n} from '../types';\nimport { DevContainerFile } from './schema';\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string,\n  extractConfig: ExtractConfig,\n): PackageFileContent | null {\n  try {\n    const file = DevContainerFile.parse(content);\n    const deps: PackageDependency[] = [];\n\n    const image = file?.image ?? null;\n    const imageDep = getDep(image, packageFile, extractConfig.registryAliases);\n\n    if (imageDep) {\n      imageDep.depType = 'image';\n      deps.push(imageDep);\n    } else {\n      logger.trace(\n        { packageFile },\n        'No image defined in dev container JSON file.',\n      );\n    }\n\n    const features = file.features;\n\n    if (features) {\n      for (const [feature, value] of Object.entries(features)) {\n        const featureDep = getDep(\n          feature,\n          packageFile,\n          extractConfig.registryAliases,\n        );\n        if (featureDep) {\n          featureDep.depType = 'feature';\n          featureDep.pinDigests = false;\n          deps.push(featureDep);\n\n          let dep: PackageDependency;\n          switch (featureDep.depName) {\n            case 'ghcr.io/devcontainers/features/node':\n              dep = {\n                depName: 'node',\n                datasource: NodeVersionDatasource.id,\n                currentValue: value.version,\n              };\n              break;\n            case 'ghcr.io/devcontainers/features/go':\n              dep = {\n                depName: 'go',\n                datasource: GolangVersionDatasource.id,\n                currentValue: value.version,\n              };\n              break;\n            case 'ghcr.io/devcontainers/features/python':\n              dep = {\n                depName: 'python',\n                datasource: PythonVersionDatasource.id,\n                currentValue: value.version,\n              };\n              break;\n            case 'ghcr.io/devcontainers/features/ruby':\n              dep = {\n                depName: 'ruby',\n                datasource: RubyVersionDatasource.id,\n                currentValue: value.version,\n              };\n              break;\n            default:\n              // skip additional checks if not a known feature\n              continue;\n          }\n          if (!value.version) {\n            dep.skipReason = 'unspecified-version';\n          }\n          deps.push(dep);\n          continue;\n        }\n        logger.trace(\n          { feature, packageFile },\n          'Skipping invalid dependency in dev container JSON file.',\n        );\n      }\n    }\n\n    if (deps.length < 1) {\n      logger.trace(\n        { packageFile },\n        'No dependencies to process for dev container JSON file.',\n      );\n      return null;\n    }\n\n    return { deps };\n  } catch (err) {\n    logger.debug(\n      { err, packageFile },\n      'Error extracting dev container JSON file.',\n    );\n    return null;\n  }\n}\n\nfunction getDep(\n  subject: string | null,\n  packageFile: string,\n  registryAliases?: Record<string, string>,\n): PackageDependency | null {\n  if (!subject) {\n    return null;\n  }\n  const dep = getDockerDep(subject, true, registryAliases);\n  if (!isValidDependency(dep)) {\n    logger.trace(\n      { subject, packageFile },\n      'Skipping invalid docker dependency in dev container JSON file.',\n    );\n    return null;\n  }\n  return dep;\n}\n"]}