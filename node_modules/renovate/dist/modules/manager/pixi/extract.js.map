{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pixi/extract.ts"],"names":[],"mappings":";;AA0BA,8CAqCC;AAED,gDAsDC;;AAvHD,kEAAkC;AAClC,6BAAwB;AAExB,4CAAyC;AACzC,+CAAkD;AAClD,yCAAuE;AACvE,iDAA8C;AAC9C,6DAAkD;AAClD,2CAI2B;AAE3B,0DAA8F;AAC9F,6CAAmD;AAEnD,qCAKkB;AAElB,MAAM,aAAa,GAAG,mBAAI,CAAC,IAAI,CAAC,wBAAe,CAAC,CAAC;AAEjD,SAAgB,iBAAiB,CAC/B,OAAe,EACf,WAAmB;IAEnB,IACE,WAAW,KAAK,gBAAgB;QAChC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EACvC,CAAC;QACD,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,eAAM,CAAC,KAAK,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;QACnE,IAAI,GAAG,EAAE,CAAC;YACR,eAAM,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,EAAE,iBAAiB,WAAW,EAAE,CAAC,CAAC;YACnE,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC;IAChC,CAAC;IAED,IAAI,WAAW,KAAK,WAAW,IAAI,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;QACtE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,eAAM,CAAC,KAAK,CAAC,OAAO,EAAE,iBAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;QAC9D,IAAI,GAAG,EAAE,CAAC;YACR,eAAM,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,EAAE,iBAAiB,WAAW,EAAE,CAAC,CAAC;YACnE,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,eAAM,CAAC,KAAK,CAC/B,OAAO,EACP,OAAC,CAAC,KAAK,CAAC,CAAC,iBAAQ,EAAE,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAClE,CAAC,MAAM,EAAE,CAAC;IAEX,IAAI,GAAG,EAAE,CAAC;QACR,eAAM,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,EAAE,iBAAiB,WAAW,EAAE,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,GAAG,IAAI,IAAI,CAAC;AACrB,CAAC;AAEM,KAAK,UAAU,kBAAkB,CACtC,OAAe,EACf,WAAmB;IAEnB,eAAM,CAAC,KAAK,CAAC,2BAA2B,WAAW,GAAG,CAAC,CAAC;IAExD,MAAM,GAAG,GAAG,iBAAiB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACpD,IAAI,CAAC,GAAG,EAAE,CAAC;QACT,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,YAAY,GAAG,IAAA,uBAAkB,EAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IAClE,MAAM,SAAS,GAAa,EAAE,CAAC;IAC/B,IAAI,MAAM,IAAA,oBAAe,EAAC,YAAY,CAAC,EAAE,CAAC;QACxC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC/B,CAAC;IAED,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;IAE5B,MAAM,eAAe,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAEpD,IAAI,gBAA8C,CAAC;IAEnD,IAAI,eAAe,KAAK,UAAU,EAAE,CAAC;QACnC,gBAAgB,GAAG,OAAO,CAAC;IAC7B,CAAC;IAED,uEAAuE;IACvE,MAAM,KAAK,GAA4B,EAAE,CAAC;IAE1C,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,KAAK,CAAC,IAAI,CACR,eAAe,CAAC;YACd,GAAG,IAAI;YACP,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,gBAAgB;SACjB,CAAC,CACH,CAAC;IACJ,CAAC;IAED,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrC,KAAK,CAAC,IAAI,CACR,eAAe,CAAC;YACd,GAAG,IAAI;YACP,gBAAgB;YAChB,QAAQ,EAAE,CAAC,GAAG,IAAA,mBAAW,EAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC;SAC/D,CAAC,CACH,CAAC;IACJ,CAAC;IAED,OAAO;QACL,SAAS;QACT,IAAI,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;KACjD,CAAC;AACJ,CAAC;AAED,SAAS,eAAe,CAAC,IAA2B;IAClD,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAE9C,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,OAAO;YACL,GAAG,IAAI;YACP,QAAQ;YACR,YAAY,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACnD,CAAC;IACJ,CAAC;IAED,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC1B,OAAO;YACL,GAAG,IAAI;YACP,QAAQ;YACR,SAAS,EAAE,SAAS;YACpB,UAAU,EAAE,kBAAkB;SAC/B,CAAC;IACJ,CAAC;IAED,MAAM,YAAY,GAAa,EAAE,CAAC;IAClC,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE,CAAC;QAC/B,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,OAAO;QACL,GAAG,IAAI;QACP,QAAQ;QACR,YAAY;KACb,CAAC;AACJ,CAAC;AAED,SAAS,oBAAoB,CAAC,OAAe;IAC3C,IAAI,IAAA,eAAS,EAAC,OAAO,CAAC,EAAE,CAAC;QACvB,OAAO,IAAA,yBAAmB,EAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,OAAO,IAAA,yBAAmB,EAAC,IAAA,kBAAY,EAAC,2BAAuB,EAAE,OAAO,CAAC,CAAC,CAAC;AAC7E,CAAC;AAED,SAAS,aAAa,CAAC,WAAqB,EAAE;IAC5C,OAAO,QAAQ;SACZ,GAAG,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;QACtB,IAAI,YAAE,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;YACvB,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QACzC,CAAC;QAED,OAAO,EAAE,GAAG,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;IAClC,CAAC,CAAC;SACD,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QACjB,8CAA8C;QAC9C,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC9B,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QACjC,CAAC;QAED,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC;SACD,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AAC3B,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport { z } from 'zod';\n\nimport { logger } from '../../../logger';\nimport { coerceArray } from '../../../util/array';\nimport { getSiblingFileName, localPathExists } from '../../../util/fs';\nimport { Result } from '../../../util/result';\nimport { Toml } from '../../../util/schema-utils';\nimport {\n  ensureTrailingSlash,\n  isHttpUrl,\n  joinUrlParts,\n} from '../../../util/url';\nimport type { RegistryStrategy } from '../../datasource';\nimport { defaultRegistryUrl as defaultCondaRegistryApi } from '../../datasource/conda/common';\nimport { PyProjectSchema } from '../pep621/schema';\nimport type { PackageFileContent } from '../types';\nimport {\n  type Channels,\n  type PixiConfig,\n  type PixiPackageDependency,\n  PixiToml,\n} from './schema';\n\nconst PyProjectToml = Toml.pipe(PyProjectSchema);\n\nexport function getUserPixiConfig(\n  content: string,\n  packageFile: string,\n): null | PixiConfig {\n  if (\n    packageFile === 'pyproject.toml' ||\n    packageFile.endsWith('/pyproject.toml')\n  ) {\n    const { val, err } = Result.parse(content, PyProjectToml).unwrap();\n    if (err) {\n      logger.debug({ packageFile, err }, `error parsing ${packageFile}`);\n      return null;\n    }\n\n    return val.tool?.pixi ?? null;\n  }\n\n  if (packageFile === 'pixi.toml' || packageFile.endsWith('/pixi.toml')) {\n    const { val, err } = Result.parse(content, PixiToml).unwrap();\n    if (err) {\n      logger.debug({ packageFile, err }, `error parsing ${packageFile}`);\n      return null;\n    }\n\n    return val;\n  }\n\n  const { val, err } = Result.parse(\n    content,\n    z.union([PixiToml, PyProjectToml.transform((p) => p.tool?.pixi)]),\n  ).unwrap();\n\n  if (err) {\n    logger.debug({ packageFile, err }, `error parsing ${packageFile}`);\n    return null;\n  }\n  return val ?? null;\n}\n\nexport async function extractPackageFile(\n  content: string,\n  packageFile: string,\n): Promise<PackageFileContent | null> {\n  logger.trace(`pixi.extractPackageFile(${packageFile})`);\n\n  const val = getUserPixiConfig(content, packageFile);\n  if (!val) {\n    return null;\n  }\n\n  const lockfileName = getSiblingFileName(packageFile, 'pixi.lock');\n  const lockFiles: string[] = [];\n  if (await localPathExists(lockfileName)) {\n    lockFiles.push(lockfileName);\n  }\n\n  const project = val.project;\n\n  const channelPriority = project['channel-priority'];\n\n  let registryStrategy: RegistryStrategy | undefined;\n\n  if (channelPriority === 'disabled') {\n    registryStrategy = 'merge';\n  }\n\n  // resolve channels and build registry urls for each channel with order\n  const conda: PixiPackageDependency[] = [];\n\n  for (const item of val.conda) {\n    conda.push(\n      addRegistryUrls({\n        ...item,\n        channels: project.channels,\n        registryStrategy,\n      }),\n    );\n  }\n\n  for (const item of val.feature.conda) {\n    conda.push(\n      addRegistryUrls({\n        ...item,\n        registryStrategy,\n        channels: [...coerceArray(item.channels), ...project.channels],\n      }),\n    );\n  }\n\n  return {\n    lockFiles,\n    deps: [conda, val.pypi, val.feature.pypi].flat(),\n  };\n}\n\nfunction addRegistryUrls(item: PixiPackageDependency): PixiPackageDependency {\n  const channels = orderChannels(item.channels);\n\n  if (item.channel) {\n    return {\n      ...item,\n      channels,\n      registryUrls: [channelToRegistryUrl(item.channel)],\n    };\n  }\n\n  if (channels.length === 0) {\n    return {\n      ...item,\n      channels,\n      skipStage: 'extract',\n      skipReason: 'unknown-registry',\n    };\n  }\n\n  const registryUrls: string[] = [];\n  for (const channel of channels) {\n    registryUrls.push(channelToRegistryUrl(channel));\n  }\n\n  return {\n    ...item,\n    channels,\n    registryUrls,\n  };\n}\n\nfunction channelToRegistryUrl(channel: string): string {\n  if (isHttpUrl(channel)) {\n    return ensureTrailingSlash(channel);\n  }\n\n  return ensureTrailingSlash(joinUrlParts(defaultCondaRegistryApi, channel));\n}\n\nfunction orderChannels(channels: Channels = []): string[] {\n  return channels\n    .map((channel, index) => {\n      if (is.string(channel)) {\n        return { channel, priority: 0, index };\n      }\n\n      return { ...channel, index: 0 };\n    })\n    .toSorted((a, b) => {\n      // first based on priority then based on index\n      if (a.priority !== b.priority) {\n        return b.priority - a.priority;\n      }\n\n      return a.index - b.index;\n    })\n    .map((c) => c.channel);\n}\n"]}