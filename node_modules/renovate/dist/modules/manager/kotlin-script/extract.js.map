{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/kotlin-script/extract.ts"],"names":[],"mappings":";;AAYA,gDA6BC;;AAzCD,kEAAkC;AAClC,+CAA4C;AAC5C,kDAAyD;AAGzD,MAAM,cAAc,GAAG,IAAA,aAAK,EAC1B,wGAAwG,CACzG,CAAC;AACF,MAAM,eAAe,GAAG,IAAA,aAAK,EAC3B,6DAA6D,CAC9D,CAAC;AAEF,SAAgB,kBAAkB,CAChC,WAAmB;IAEnB,MAAM,YAAY,GAAa,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;SACtE,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC;SAC5C,MAAM,CAAC,YAAE,CAAC,MAAM,CAAC,CAAC;IAErB,MAAM,OAAO,GAAG,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;SACtD,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;SACpB,MAAM,CAAC,YAAE,CAAC,MAAM,CAAC,CAAC;IACrB,MAAM,IAAI,GAAwB,EAAE,CAAC;IACrC,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE,CAAC;QAC5B,MAAM,GAAG,GAAsB;YAC7B,YAAY,EAAE,KAAK,CAAC,OAAO;YAC3B,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,UAAU,EAAE;YAC/C,aAAa,EAAE,KAAK,CAAC,aAAa;YAClC,UAAU,EAAE,uBAAe,CAAC,EAAE;SAC/B,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACtB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO;QACL,IAAI;QACJ,GAAG,CAAC,YAAY,CAAC,MAAM,IAAI,EAAE,YAAY,EAAE,CAAC;KAC7C,CAAC;AACJ,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport { regEx } from '../../../util/regex';\nimport { MavenDatasource } from '../../datasource/maven';\nimport type { PackageDependency, PackageFileContent } from '../types';\n\nconst dependsOnRegex = regEx(\n  /@file\\s*:\\s*DependsOn\\s*\\(\\s*(?<replaceString>\"(?<groupId>.+):(?<artifactId>.+):(?<version>.+)\")\\s*\\)/g,\n);\nconst repositoryRegex = regEx(\n  /@file\\s*:\\s*Repository\\s*\\(\\s*\"(?<repositoryName>.+)\"\\s*\\)/g,\n);\n\nexport function extractPackageFile(\n  fileContent: string,\n): PackageFileContent | null {\n  const registryUrls: string[] = [...fileContent.matchAll(repositoryRegex)]\n    .map((match) => match.groups?.repositoryName)\n    .filter(is.string);\n\n  const matches = [...fileContent.matchAll(dependsOnRegex)]\n    .map((m) => m.groups)\n    .filter(is.truthy);\n  const deps: PackageDependency[] = [];\n  for (const match of matches) {\n    const dep: PackageDependency = {\n      currentValue: match.version,\n      depName: `${match.groupId}:${match.artifactId}`,\n      replaceString: match.replaceString,\n      datasource: MavenDatasource.id,\n    };\n    deps.push(dep);\n  }\n\n  if (deps.length === 0) {\n    return null;\n  }\n\n  return {\n    deps,\n    ...(registryUrls.length && { registryUrls }),\n  };\n}\n"]}