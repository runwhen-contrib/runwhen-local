{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/mint/extract.ts"],"names":[],"mappings":";;AAIA,gDAuBC;AA3BD,+CAAmD;AACnD,wDAA8D;AAG9D,SAAgB,kBAAkB,CAAC,OAAe;IAChD,MAAM,IAAI,GAAwB,EAAE,CAAC;IAErC,KAAK,MAAM,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,oBAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;QACpE,IAAI,IAAI,KAAK,EAAE,EAAE,CAAC;YAChB,SAAS;QACX,CAAC;QAED,qBAAqB;QACrB,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;YACzB,SAAS;QACX,CAAC;QAED,wCAAwC;QACxC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;YACvB,MAAM,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC;YAC9C,SAAS;QACX,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AACvC,CAAC;AAED,SAAS,mBAAmB,CAAC,IAAY;IACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;QACxB,OAAO;YACL,OAAO,EAAE,IAAI;YACb,UAAU,EAAE,qBAAqB;SAClC,CAAC;IACJ,CAAC;IACD,MAAM,CAAC,OAAO,EAAE,cAAc,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IACvE,OAAO;QACL,OAAO;QACP,YAAY,EAAE,cAAc;QAC5B,UAAU,EAAE,4BAAiB,CAAC,EAAE;QAChC,WAAW,EAAE,sBAAsB,OAAO,MAAM;KACjD,CAAC;AACJ,CAAC","sourcesContent":["import { newlineRegex } from '../../../util/regex';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport type { PackageDependency, PackageFileContent } from '../types';\n\nexport function extractPackageFile(content: string): PackageFileContent | null {\n  const deps: PackageDependency[] = [];\n\n  for (const line of content.split(newlineRegex).map((s) => s.trim())) {\n    if (line === '') {\n      continue;\n    }\n\n    // commented out line\n    if (line.startsWith('#')) {\n      continue;\n    }\n\n    // commented out line after package name\n    if (line.includes('#')) {\n      const [uncommentLine] = line.split('#');\n      deps.push(handleDepInMintfile(uncommentLine));\n      continue;\n    }\n\n    deps.push(handleDepInMintfile(line));\n  }\n  return deps.length ? { deps } : null;\n}\n\nfunction handleDepInMintfile(line: string): PackageDependency {\n  if (!line.includes('@')) {\n    return {\n      depName: line,\n      skipReason: 'unspecified-version',\n    };\n  }\n  const [depName, currentVersion] = line.split('@').map((s) => s.trim());\n  return {\n    depName,\n    currentValue: currentVersion,\n    datasource: GitTagsDatasource.id,\n    packageName: `https://github.com/${depName}.git`,\n  };\n}\n"]}