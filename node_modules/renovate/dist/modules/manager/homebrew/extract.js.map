{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/homebrew/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import { logger } from '../../../logger';\nimport type { SkipReason } from '../../../types';\nimport { regEx } from '../../../util/regex';\nimport { GithubTagsDatasource } from '../../datasource/github-tags';\nimport type { PackageDependency, PackageFileContent } from '../types';\nimport type { UrlPathParsedResult } from './types';\nimport { isSpace, removeComments, skip } from './util';\n\nfunction parseSha256(idx: number, content: string): string | null {\n  let i = idx;\n  i += 'sha256'.length;\n  i = skip(i, content, (c) => isSpace(c));\n  if (content[i] !== '\"' && content[i] !== \"'\") {\n    return null;\n  }\n  i += 1;\n  const j = skip(i, content, (c) => c !== '\"' && c !== \"'\");\n  const sha256 = content.slice(i, j);\n  return sha256;\n}\n\nfunction extractSha256(content: string): string | null {\n  const sha256RegExp = regEx(/(^|\\s)sha256(\\s)/);\n  let i = content.search(sha256RegExp);\n  if (isSpace(content[i])) {\n    i += 1;\n  }\n  return parseSha256(i, content);\n}\n\nfunction parseUrl(idx: number, content: string): string | null {\n  let i = idx;\n  i += 'url'.length;\n  i = skip(i, content, (c) => isSpace(c));\n  const chr = content[i];\n  if (chr !== '\"' && chr !== \"'\") {\n    return null;\n  }\n  i += 1;\n  const j = skip(i, content, (c) => c !== '\"' && c !== \"'\" && !isSpace(c));\n  const url = content.slice(i, j);\n  return url;\n}\n\nfunction extractUrl(content: string): string | null {\n  const urlRegExp = regEx(/(^|\\s)url(\\s)/);\n  let i = content.search(urlRegExp);\n  // content.search() returns -1 if not found\n  if (i === -1) {\n    return null;\n  }\n  if (isSpace(content[i])) {\n    i += 1;\n  }\n  return parseUrl(i, content);\n}\n\nexport function parseUrlPath(\n  urlStr: string | null | undefined,\n): UrlPathParsedResult | null {\n  if (!urlStr) {\n    return null;\n  }\n  try {\n    const url = new URL(urlStr);\n    if (url.hostname !== 'github.com') {\n      return null;\n    }\n    let s = url.pathname.split('/');\n    s = s.filter((val) => val);\n    const ownerName = s[0];\n    const repoName = s[1];\n    let currentValue: string | undefined;\n    if (s[2] === 'archive') {\n      // old archive url in form: [...]/archive/<tag>.tar.gz\n      currentValue = s[3];\n      if (currentValue === 'refs') {\n        // new archive url in form: [...]/archive/refs/tags/<tag>.tar.gz\n        currentValue = s[5];\n      }\n      const targz = currentValue.slice(\n        currentValue.length - 7,\n        currentValue.length,\n      );\n      if (targz === '.tar.gz') {\n        currentValue = currentValue.substring(0, currentValue.length - 7);\n      }\n    } else if (s[2] === 'releases' && s[3] === 'download') {\n      currentValue = s[4];\n    }\n    if (!currentValue) {\n      return null;\n    }\n    return { currentValue, ownerName, repoName };\n  } catch {\n    return null;\n  }\n}\n\n/* This function parses the \"class className < Formula\" header\n   and returns the className and index of the character just after the header */\nfunction parseClassHeader(idx: number, content: string): string | null {\n  let i = idx;\n  i += 'class'.length;\n  i = skip(i, content, (c) => isSpace(c));\n  // Skip all non space and non '<' characters\n  let j = skip(i, content, (c) => !isSpace(c) && c !== '<');\n  const className = content.slice(i, j);\n  i = j;\n  // Skip spaces\n  i = skip(i, content, (c) => isSpace(c));\n  if (content[i] === '<') {\n    i += 1;\n  } else {\n    return null;\n  } // Skip spaces\n  i = skip(i, content, (c) => isSpace(c));\n  // Skip non-spaces\n  j = skip(i, content, (c) => !isSpace(c));\n  if (content.slice(i, j) !== 'Formula') {\n    return null;\n  }\n  return className;\n}\n\nfunction extractClassName(content: string): string | null {\n  const classRegExp = regEx(/(^|\\s)class\\s/);\n  let i = content.search(classRegExp);\n  if (isSpace(content[i])) {\n    i += 1;\n  }\n  return parseClassHeader(i, content);\n}\n\n// TODO: Maybe check if quotes/double-quotes are balanced (#9591)\nexport function extractPackageFile(content: string): PackageFileContent | null {\n  logger.trace('extractPackageFile()');\n  /*\n    1. match \"class className < Formula\"\n    2. extract className\n    3. extract url field (get depName from url)\n    4. extract sha256 field\n  */\n  const cleanContent = removeComments(content);\n  const className = extractClassName(cleanContent);\n  if (!className) {\n    logger.debug('Invalid class definition');\n    return null;\n  }\n  const url = extractUrl(cleanContent);\n  if (!url) {\n    logger.debug('Invalid URL field');\n  }\n  const urlPathResult = parseUrlPath(url);\n  let skipReason: SkipReason | undefined;\n  let currentValue: string | null = null;\n  let ownerName: string | null = null;\n  let repoName: string | null = null;\n  if (urlPathResult) {\n    currentValue = urlPathResult.currentValue;\n    ownerName = urlPathResult.ownerName;\n    repoName = urlPathResult.repoName;\n  } else {\n    logger.debug('Error: Unsupported URL field');\n    skipReason = 'unsupported-url';\n  }\n  const sha256 = extractSha256(cleanContent);\n  if (!sha256 || sha256.length !== 64) {\n    logger.debug('Error: Invalid sha256 field');\n    skipReason = 'invalid-sha256';\n  }\n  const dep: PackageDependency = {\n    // TODO: types (#22198)\n    depName: `${ownerName}/${repoName}`,\n    managerData: { ownerName, repoName, sha256, url },\n    currentValue,\n    datasource: GithubTagsDatasource.id,\n  };\n  if (skipReason) {\n    dep.skipReason = skipReason;\n    if (skipReason === 'unsupported-url') {\n      dep.depName = className;\n      dep.datasource = undefined;\n    }\n  }\n  const deps = [dep];\n  return { deps };\n}\n"]}