{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../lib/modules/manager/flux/schema.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\n\nexport const KubernetesResource = z.object({\n  apiVersion: z.string(),\n  kind: z.string(),\n  metadata: z.object({\n    name: z.string(),\n    // For Flux, the namespace property is optional, but matching HelmReleases to HelmRepositories would be\n    // much more difficult without it (we'd have to examine the parent Kustomizations to discover the value),\n    // so we require it for renovation.\n    namespace: z.string().optional(),\n  }),\n});\n\nexport const HelmRelease = KubernetesResource.extend({\n  apiVersion: z.string().startsWith('helm.toolkit.fluxcd.io/'),\n  kind: z.literal('HelmRelease'),\n  spec: z.object({\n    chart: z\n      .object({\n        spec: z.object({\n          chart: z.string(),\n          version: z.string().optional(),\n          sourceRef: z\n            .object({\n              kind: z.string().optional(),\n              name: z.string().optional(),\n              namespace: z.string().optional(),\n            })\n            .optional(),\n        }),\n      })\n      .optional(),\n    chartRef: z\n      .object({\n        kind: z.string().optional(),\n        name: z.string().optional(),\n        namespace: z.string().optional(),\n      })\n      .optional(),\n    values: z.record(z.unknown()).optional(),\n  }),\n});\nexport type HelmRelease = z.infer<typeof HelmRelease>;\n\nexport const HelmRepository = KubernetesResource.extend({\n  apiVersion: z.string().startsWith('source.toolkit.fluxcd.io/'),\n  kind: z.literal('HelmRepository'),\n  spec: z.object({\n    url: z.string(),\n    type: z.enum(['oci', 'default']).optional(),\n  }),\n});\nexport type HelmRepository = z.infer<typeof HelmRepository>;\n\nexport const HelmChart = KubernetesResource.extend({\n  apiVersion: z.string().startsWith('source.toolkit.fluxcd.io/'),\n  kind: z.literal('HelmChart'),\n  spec: z.object({\n    chart: z.string(),\n    version: z.string().optional(),\n    sourceRef: z.object({\n      kind: z.string().optional(),\n      name: z.string().optional(),\n    }),\n  }),\n});\nexport type HelmChart = z.infer<typeof HelmChart>;\n\nexport const GitRepository = KubernetesResource.extend({\n  apiVersion: z.string().startsWith('source.toolkit.fluxcd.io/'),\n  kind: z.literal('GitRepository'),\n  spec: z.object({\n    url: z.string(),\n    ref: z\n      .object({\n        tag: z.string().optional(),\n        commit: z.string().optional(),\n      })\n      .optional(),\n  }),\n});\n\nexport const OCIRepository = KubernetesResource.extend({\n  apiVersion: z.string().startsWith('source.toolkit.fluxcd.io/'),\n  kind: z.literal('OCIRepository'),\n  spec: z.object({\n    url: z.string(),\n    ref: z\n      .object({\n        tag: z.string().optional(),\n        digest: z.string().optional(),\n      })\n      .optional(),\n  }),\n});\n\nexport const Kustomization = KubernetesResource.extend({\n  apiVersion: z.string().startsWith('kustomize.toolkit.fluxcd.io/'),\n  kind: z.literal('Kustomization'),\n  spec: z.object({\n    images: z\n      .array(\n        z.object({\n          name: z.string(),\n          newName: z.string().optional(),\n          newTag: z.string().optional(),\n          digest: z.string().optional(),\n        }),\n      )\n      .optional(),\n  }),\n});\n\nexport const FluxResource = HelmRelease.or(HelmRepository)\n  .or(HelmChart)\n  .or(GitRepository)\n  .or(OCIRepository)\n  .or(Kustomization);\nexport type FluxResource = z.infer<typeof FluxResource>;\n"]}