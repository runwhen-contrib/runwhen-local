{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/azure-pipelines/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import { GlobalConfig } from '../../../config/global';\nimport { logger } from '../../../logger';\nimport { coerceArray } from '../../../util/array';\nimport { regEx } from '../../../util/regex';\nimport { joinUrlParts } from '../../../util/url';\nimport { AzurePipelinesTasksDatasource } from '../../datasource/azure-pipelines-tasks';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport { getDep } from '../dockerfile/extract';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFileContent,\n} from '../types';\nimport type {\n  AzurePipelines,\n  Container,\n  Deploy,\n  Deployment,\n  Job,\n  Jobs,\n  Repository,\n  Step,\n} from './schema';\nimport { AzurePipelinesYaml } from './schema';\n\nconst AzurePipelinesTaskRegex = regEx(/^(?<name>[^@]+)@(?<version>.*)$/);\n\nexport function extractRepository(\n  repository: Repository,\n  currentRepository?: string,\n): PackageDependency | null {\n  let repositoryUrl = null;\n\n  let depName = repository.name;\n\n  if (repository.type === 'github') {\n    repositoryUrl = `https://github.com/${repository.name}.git`;\n  } else if (repository.type === 'git') {\n    const platform = GlobalConfig.get('platform');\n    const endpoint = GlobalConfig.get('endpoint');\n\n    if (platform === 'azure' && endpoint) {\n      // extract the project name if the repository from which the pipline is referencing templates contains the Azure DevOps project name\n      if (repository.name.includes('/')) {\n        const [projectName, repoName] = repository.name.split('/');\n        repositoryUrl = joinUrlParts(\n          endpoint,\n          encodeURIComponent(projectName),\n          '_git',\n          encodeURIComponent(repoName),\n        );\n\n        // if the repository from which the pipline is referencing templates does not contain the Azure DevOps project name, get the project name from the repository containing the pipeline file being process\n      } else if (currentRepository?.includes('/')) {\n        const projectName = currentRepository.split('/')[0];\n        depName = `${projectName}/${repository.name}`;\n        repositoryUrl = joinUrlParts(\n          endpoint,\n          encodeURIComponent(projectName),\n          '_git',\n          encodeURIComponent(repository.name),\n        );\n      } else {\n        logger.debug(\n          'Renovate cannot update Azure pipelines in git repositories when neither the current repository nor the target repository contains the Azure DevOps project name.',\n        );\n      }\n    }\n  }\n\n  if (repositoryUrl === null) {\n    return null;\n  }\n\n  if (!repository.ref?.startsWith('refs/tags/')) {\n    return null;\n  }\n\n  return {\n    autoReplaceStringTemplate: 'refs/tags/{{newValue}}',\n    currentValue: repository.ref.replace('refs/tags/', ''),\n    datasource: GitTagsDatasource.id,\n    depName,\n    depType: 'gitTags',\n    packageName: repositoryUrl,\n    replaceString: repository.ref,\n  };\n}\n\nexport function extractContainer(\n  container: Container,\n): PackageDependency | null {\n  const dep = getDep(container.image);\n  logger.debug(\n    {\n      depName: dep.depName,\n      currentValue: dep.currentValue,\n      currentDigest: dep.currentDigest,\n    },\n    'Azure pipelines docker image',\n  );\n  dep.depType = 'docker';\n\n  return dep;\n}\n\nexport function extractAzurePipelinesTasks(\n  task: string,\n): PackageDependency | null {\n  const match = AzurePipelinesTaskRegex.exec(task);\n  if (match?.groups) {\n    return {\n      depName: match.groups.name,\n      currentValue: match.groups.version,\n      datasource: AzurePipelinesTasksDatasource.id,\n    };\n  }\n  return null;\n}\n\nexport function parseAzurePipelines(\n  content: string,\n  packageFile: string,\n): AzurePipelines | null {\n  const res = AzurePipelinesYaml.safeParse(content);\n  if (res.success) {\n    return res.data;\n  } else {\n    logger.debug(\n      { err: res.error, packageFile },\n      'Error parsing pubspec lockfile.',\n    );\n  }\n  return null;\n}\n\nfunction extractSteps(\n  steps: Step[] | undefined,\n): PackageDependency<Record<string, any>>[] {\n  const deps = [];\n  for (const step of coerceArray(steps)) {\n    const task = extractAzurePipelinesTasks(step.task);\n    if (task) {\n      deps.push(task);\n    }\n  }\n  return deps;\n}\n\nfunction extractJob(job: Job | undefined): PackageDependency[] {\n  return extractSteps(job?.steps);\n}\n\nfunction extractDeploy(deploy: Deploy | undefined): PackageDependency[] {\n  const deps = extractJob(deploy?.deploy);\n  deps.push(...extractJob(deploy?.postRouteTraffic));\n  deps.push(...extractJob(deploy?.preDeploy));\n  deps.push(...extractJob(deploy?.routeTraffic));\n  deps.push(...extractJob(deploy?.on?.failure));\n  deps.push(...extractJob(deploy?.on?.success));\n  return deps;\n}\n\nfunction extractJobs(jobs: Jobs | undefined): PackageDependency[] {\n  const deps: PackageDependency[] = [];\n  for (const jobOrDeployment of coerceArray(jobs)) {\n    const deployment = jobOrDeployment as Deployment;\n    if (deployment.strategy) {\n      deps.push(...extractDeploy(deployment.strategy.canary));\n      deps.push(...extractDeploy(deployment.strategy.rolling));\n      deps.push(...extractDeploy(deployment.strategy.runOnce));\n      continue;\n    }\n\n    const job = jobOrDeployment as Job;\n    deps.push(...extractJob(job));\n  }\n  return deps;\n}\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string,\n  config: ExtractConfig,\n): PackageFileContent | null {\n  logger.trace(`azurePipelines.extractPackageFile(${packageFile})`);\n  const deps: PackageDependency[] = [];\n\n  const pkg = parseAzurePipelines(content, packageFile);\n  if (!pkg) {\n    return null;\n  }\n\n  for (const repository of coerceArray(pkg.resources?.repositories)) {\n    const dep = extractRepository(repository, config.repository);\n    if (dep) {\n      deps.push(dep);\n    }\n  }\n\n  for (const container of coerceArray(pkg.resources?.containers)) {\n    const dep = extractContainer(container);\n    if (dep) {\n      deps.push(dep);\n    }\n  }\n\n  for (const { jobs } of coerceArray(pkg.stages)) {\n    deps.push(...extractJobs(jobs));\n  }\n\n  deps.push(...extractJobs(pkg.jobs));\n  deps.push(...extractSteps(pkg.steps));\n\n  if (!deps.length) {\n    return null;\n  }\n  return { deps };\n}\n"]}