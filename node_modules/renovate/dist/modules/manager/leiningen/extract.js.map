{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/leiningen/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import { coerceArray } from '../../../util/array';\nimport { newlineRegex, regEx } from '../../../util/regex';\nimport { ClojureDatasource } from '../../datasource/clojure';\nimport type { PackageDependency, PackageFileContent } from '../types';\nimport type { ExtractContext, ExtractedVariables } from './types';\n\nexport function trimAtKey(str: string, kwName: string): string | null {\n  const regex = new RegExp(`:${kwName}(?=\\\\s)`); // TODO #12872 lookahead\n  const keyOffset = str.search(regex);\n  if (keyOffset < 0) {\n    return null;\n  }\n  const withSpaces = str.slice(keyOffset + kwName.length + 1);\n  const valueOffset = withSpaces.search(regEx(/[^\\s]/));\n  if (valueOffset < 0) {\n    return null;\n  }\n  return withSpaces.slice(valueOffset);\n}\n\nexport function expandDepName(name: string): string {\n  return name.includes('/') ? name.replace('/', ':') : `${name}:${name}`;\n}\n\nexport function extractFromVectors(\n  str: string,\n  ctx: ExtractContext = {},\n  vars: ExtractedVariables = {},\n  dimensions: 1 | 2 = 2,\n): PackageDependency[] {\n  if (!str.startsWith('[')) {\n    return [];\n  }\n  let balance = 0;\n  const result: PackageDependency[] = [];\n  let idx = 0;\n  let vecPos = 0;\n  let artifactId = '';\n  let version = '';\n  // Are we currently parsing a comment? If so, at what depth?\n  let commentLevel: number | null = null;\n\n  const isSpace = (ch: string | null): boolean =>\n    !!ch && regEx(/[\\s,]/).test(ch);\n\n  const cleanStrLiteral = (s: string): string =>\n    s.replace(regEx(/^\"/), '').replace(regEx(/\"$/), '');\n\n  const yieldDep = (): void => {\n    if (!commentLevel && artifactId && version) {\n      const depName = expandDepName(cleanStrLiteral(artifactId));\n      if (version.startsWith('~')) {\n        const varName = version.replace(regEx(/^~\\s*/), '');\n        const currentValue = vars[varName];\n        if (currentValue) {\n          result.push({\n            ...ctx,\n            datasource: ClojureDatasource.id,\n            depName,\n            currentValue,\n            sharedVariableName: varName,\n          });\n        }\n      } else {\n        result.push({\n          ...ctx,\n          datasource: ClojureDatasource.id,\n          depName,\n          currentValue: cleanStrLiteral(version),\n        });\n      }\n    }\n    artifactId = '';\n    version = '';\n  };\n\n  let prevChar: string | null = null;\n  while (idx < str.length) {\n    const char = str.charAt(idx);\n\n    if (str.substring(idx).startsWith('#_[')) {\n      commentLevel = balance;\n    }\n\n    if (char === '[') {\n      balance += 1;\n      if (balance === dimensions) {\n        vecPos = 0;\n      }\n    } else if (char === ']') {\n      balance -= 1;\n\n      if (commentLevel === balance) {\n        artifactId = '';\n        version = '';\n        commentLevel = null;\n      }\n\n      if (balance === dimensions - 1) {\n        yieldDep();\n      }\n\n      if (balance === 0) {\n        break;\n      }\n    } else if (balance === dimensions) {\n      if (isSpace(char)) {\n        if (!isSpace(prevChar)) {\n          vecPos += 1;\n        }\n      } else if (vecPos === 0) {\n        artifactId += char;\n      } else if (vecPos === 1) {\n        version += char;\n      }\n    }\n    prevChar = char;\n    idx += 1;\n  }\n  return result;\n}\n\nfunction extractLeinRepos(content: string): string[] {\n  const result: string[] = [];\n\n  const repoContent = trimAtKey(\n    content.replace(/;;.*(?=[\\r\\n])/g, ''), // get rid of comments // TODO #12872 lookahead\n    'repositories',\n  );\n\n  if (repoContent) {\n    let balance = 0;\n    let endIdx = 0;\n    for (let idx = 0; idx < repoContent.length; idx += 1) {\n      const char = repoContent.charAt(idx);\n      if (char === '[') {\n        balance += 1;\n      } else if (char === ']') {\n        balance -= 1;\n        if (balance <= 0) {\n          endIdx = idx;\n          break;\n        }\n      }\n    }\n    const repoSectionContent = repoContent.slice(0, endIdx);\n    const matches = coerceArray(\n      repoSectionContent.match(regEx(/\"https?:\\/\\/[^\"]*\"/g)),\n    );\n    const urls = matches.map((x) =>\n      x.replace(regEx(/^\"/), '').replace(regEx(/\"$/), ''),\n    );\n    urls.forEach((url) => result.push(url));\n  }\n\n  return result;\n}\n\nconst defRegex = regEx(\n  /^[\\s,]*\\([\\s,]*def[\\s,]+(?<varName>[-+*=<>.!?#$%&_|a-zA-Z][-+*=<>.!?#$%&_|a-zA-Z0-9']+)[\\s,]*\"(?<stringValue>[^\"]*)\"[\\s,]*\\)[\\s,]*$/,\n);\n\nexport function extractVariables(content: string): ExtractedVariables {\n  const result: ExtractedVariables = {};\n  const lines = content.split(newlineRegex);\n  for (const line of lines) {\n    const match = defRegex.exec(line);\n    if (match?.groups) {\n      const { varName: key, stringValue: val } = match.groups;\n      result[key] = val;\n    }\n  }\n  return result;\n}\n\ninterface CollectDepsOptions {\n  nested: boolean;\n  depType?: string;\n}\n\nfunction collectDeps(\n  content: string,\n  key: string,\n  registryUrls: string[],\n  vars: ExtractedVariables,\n  options: CollectDepsOptions = {\n    nested: true,\n  },\n): PackageDependency[] {\n  const ctx = {\n    depType: options.depType ?? key,\n    registryUrls,\n  };\n  // A vector like [[\"dep-1\" \"1.0.0\"] [\"dep-2\" \"0.0.0\"]] is nested\n  // A vector like [\"dep-1\" \"1.0.0\"] is not\n  const dimensions = options.nested ? 2 : 1;\n  let result: PackageDependency[] = [];\n  let restContent = trimAtKey(content, key);\n  while (restContent) {\n    result = [\n      ...result,\n      ...extractFromVectors(restContent, ctx, vars, dimensions),\n    ];\n    restContent = trimAtKey(restContent, key);\n  }\n  return result;\n}\n\nexport function extractPackageFile(content: string): PackageFileContent {\n  const registryUrls = extractLeinRepos(content);\n  const vars = extractVariables(content);\n\n  const deps: PackageDependency[] = [\n    ...collectDeps(content, 'dependencies', registryUrls, vars),\n    ...collectDeps(content, 'managed-dependencies', registryUrls, vars),\n    ...collectDeps(content, 'plugins', registryUrls, vars),\n    ...collectDeps(content, 'pom-plugins', registryUrls, vars),\n    // 'coords' is used in lein parent, and specifies zero or one\n    // dependencies. These are not wrapped in a vector in the way other\n    // dependencies are. The project.clj fragment looks like\n    //\n    // :parent-project {... :coords [\"parent\" \"version\"] ...}\n    //\n    // - https://github.com/achin/lein-parent\n    ...collectDeps(content, 'coords', registryUrls, vars, {\n      nested: false,\n      // The top-level key is 'parent-project', but we skip directly to 'coords'.\n      // So fix the dep type label\n      depType: 'parent-project',\n    }),\n  ];\n\n  return { deps };\n}\n"]}