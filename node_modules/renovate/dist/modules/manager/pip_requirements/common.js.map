{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pip_requirements/common.ts"],"names":[],"mappings":"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","sourcesContent":["import { GlobalConfig } from '../../../config/global';\nimport { newlineRegex, regEx } from '../../../util/regex';\nimport type { PackageFileContent } from '../types';\nimport type { PipRequirementsManagerData } from './types';\n\nfunction cleanRegistryUrls(registryUrls: string[]): string[] {\n  return registryUrls.map((url) => {\n    // handle the optional quotes in eg. `--extra-index-url \"https://foo.bar\"`\n    const cleaned = url.replace(regEx(/^\"/), '').replace(regEx(/\"$/), '');\n    if (!GlobalConfig.get('exposeAllEnv')) {\n      return cleaned;\n    }\n    // interpolate any environment variables\n    return cleaned.replace(\n      regEx(/(\\$[A-Za-z\\d_]+)|(\\${[A-Za-z\\d_]+})/g),\n      (match) => {\n        const envvar = match\n          .substring(1)\n          .replace(regEx(/^{/), '')\n          .replace(regEx(/}$/), '');\n        const sub = process.env[envvar];\n        return sub ?? match;\n      },\n    );\n  });\n}\n\nexport function extractPackageFileFlags(\n  content: string,\n): PackageFileContent<PipRequirementsManagerData> {\n  let registryUrls: string[] = [];\n  const additionalRegistryUrls: string[] = [];\n  const additionalRequirementsFiles: string[] = [];\n  const additionalConstraintsFiles: string[] = [];\n  content.split(newlineRegex).forEach((line) => {\n    if (line.startsWith('-i ') || line.startsWith('--index-url ')) {\n      registryUrls = [line.split(' ')[1]];\n    } else if (line.startsWith('--extra-index-url ')) {\n      const extraUrl = line\n        .substring('--extra-index-url '.length)\n        .split(' ')[0];\n      additionalRegistryUrls.push(extraUrl);\n    } else if (line.startsWith('-r ')) {\n      additionalRequirementsFiles.push(line.split(' ')[1]);\n    } else if (line.startsWith('-c ')) {\n      additionalConstraintsFiles.push(line.split(' ')[1]);\n    }\n  });\n\n  const res: PackageFileContent<PipRequirementsManagerData> = { deps: [] };\n  if (registryUrls.length > 0) {\n    res.registryUrls = cleanRegistryUrls(registryUrls);\n  }\n  if (additionalRegistryUrls.length) {\n    res.additionalRegistryUrls = cleanRegistryUrls(additionalRegistryUrls);\n  }\n  if (additionalRequirementsFiles.length) {\n    res.managerData ??= {};\n    res.managerData.requirementsFiles = additionalRequirementsFiles;\n  }\n  if (additionalConstraintsFiles.length) {\n    res.managerData ??= {};\n    res.managerData.constraintsFiles = additionalConstraintsFiles;\n  }\n  return res;\n}\n"]}