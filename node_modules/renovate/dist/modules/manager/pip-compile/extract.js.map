{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pip-compile/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import upath from 'upath';\nimport { logger } from '../../../logger';\nimport { coerceArray } from '../../../util/array';\nimport { readLocalFile } from '../../../util/fs';\nimport { ensureLocalPath } from '../../../util/fs/util';\nimport { extractPackageFile as extractRequirementsFile } from '../pip_requirements/extract';\nimport { extractPackageFile as extractSetupPyFile } from '../pip_setup';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFile,\n  PackageFileContent,\n} from '../types';\nimport { extractHeaderCommand, matchManager } from './common';\nimport type { DependencyBetweenFiles, PipCompileArgs } from './types';\nimport {\n  generateMermaidGraph,\n  inferCommandExecDir,\n  sortPackageFiles,\n} from './utils';\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string,\n  _config: ExtractConfig,\n): PackageFileContent | null {\n  logger.trace('pip-compile.extractPackageFile()');\n  const manager = matchManager(packageFile);\n  switch (manager) {\n    case 'pip_setup':\n      return extractSetupPyFile(content, packageFile, _config);\n    case 'pip_requirements':\n      return extractRequirementsFile(content);\n    case 'unknown':\n      logger.warn(\n        { packageFile },\n        `pip-compile: could not determine manager for source file`,\n      );\n      return null;\n    default:\n      logger.warn(\n        { packageFile, manager },\n        `pip-compile: support for manager is not yet implemented`,\n      );\n      return null;\n  }\n}\n\nexport async function extractAllPackageFiles(\n  config: ExtractConfig,\n  fileMatches: string[],\n): Promise<PackageFile[] | null> {\n  logger.trace('pip-compile.extractAllPackageFiles()');\n  const lockFileArgs = new Map<string, PipCompileArgs>();\n  const depsBetweenFiles: DependencyBetweenFiles[] = [];\n  const packageFiles = new Map<string, PackageFile>();\n  const lockFileSources = new Map<string, PackageFile[]>();\n  for (const fileMatch of fileMatches) {\n    const fileContent = await readLocalFile(fileMatch, 'utf8');\n    if (!fileContent) {\n      logger.debug(`pip-compile: no content found for fileMatch ${fileMatch}`);\n      continue;\n    }\n    let compileArgs: PipCompileArgs;\n    let compileDir: string;\n    try {\n      compileArgs = extractHeaderCommand(fileContent, fileMatch);\n      compileDir = inferCommandExecDir(fileMatch, compileArgs.outputFile);\n    } catch (error) {\n      logger.warn(\n        { fileMatch, errorMessage: error.message },\n        'pip-compile error',\n      );\n      continue;\n    }\n    lockFileArgs.set(fileMatch, compileArgs);\n    for (const constraint of coerceArray(compileArgs.constraintsFiles)) {\n      depsBetweenFiles.push({\n        sourceFile: constraint,\n        outputFile: fileMatch,\n        type: 'constraint',\n      });\n    }\n    const lockedDeps = extractRequirementsFile(fileContent)?.deps;\n    if (!lockedDeps) {\n      logger.debug(\n        { fileMatch },\n        'pip-compile: Failed to extract dependencies from lock file',\n      );\n      continue;\n    }\n\n    for (const relativeSourceFile of compileArgs.sourceFiles) {\n      const packageFile = upath.normalizeTrim(\n        upath.join(compileDir, relativeSourceFile),\n      );\n      try {\n        ensureLocalPath(packageFile);\n      } catch {\n        logger.warn(\n          { fileMatch, packageFile },\n          'pip-compile: Source file path outside of repository',\n        );\n        continue;\n      }\n      depsBetweenFiles.push({\n        sourceFile: packageFile,\n        outputFile: fileMatch,\n        type: 'requirement',\n      });\n      if (fileMatches.includes(packageFile)) {\n        // TODO(not7cd): do something about it\n        logger.warn(\n          { sourceFile: packageFile, lockFile: fileMatch },\n          'pip-compile: lock file acts as source file for another lock file',\n        );\n        continue;\n      }\n      if (packageFiles.has(packageFile)) {\n        logger.debug(\n          `pip-compile: ${packageFile} used in multiple output files`,\n        );\n        const existingPackageFile = packageFiles.get(packageFile)!;\n        existingPackageFile.lockFiles!.push(fileMatch);\n        extendWithIndirectDeps(existingPackageFile, lockedDeps);\n        const source = lockFileSources.get(fileMatch) ?? [];\n        source.push(existingPackageFile);\n        lockFileSources.set(fileMatch, source);\n        continue;\n      }\n      const content = await readLocalFile(packageFile, 'utf8');\n      if (!content) {\n        logger.debug(`pip-compile: No content for source file ${packageFile}`);\n        continue;\n      }\n\n      const packageFileContent = extractPackageFile(\n        content,\n        packageFile,\n        config,\n      );\n      if (packageFileContent) {\n        if (packageFileContent.managerData?.requirementsFiles) {\n          packageFileContent.managerData.requirementsFiles =\n            packageFileContent.managerData.requirementsFiles.map(\n              (file: string) => upath.normalize(upath.join(compileDir, file)),\n            );\n          for (const file of packageFileContent.managerData.requirementsFiles) {\n            depsBetweenFiles.push({\n              sourceFile: file,\n              outputFile: packageFile,\n              type: 'requirement',\n            });\n          }\n        }\n        if (packageFileContent.managerData?.constraintsFiles) {\n          packageFileContent.managerData.constraintsFiles =\n            packageFileContent.managerData.constraintsFiles.map(\n              (file: string) => upath.normalize(upath.join(compileDir, file)),\n            );\n          for (const file of packageFileContent.managerData.constraintsFiles) {\n            depsBetweenFiles.push({\n              sourceFile: file,\n              outputFile: packageFile,\n              type: 'requirement',\n            });\n          }\n        }\n        for (const dep of packageFileContent.deps) {\n          const lockedVersion = lockedDeps?.find(\n            (lockedDep) => lockedDep.packageName === dep.packageName,\n          )?.currentVersion;\n          if (lockedVersion) {\n            dep.lockedVersion = lockedVersion;\n          } else {\n            logger.warn(\n              { depName: dep.depName, lockFile: fileMatch },\n              'pip-compile: dependency not found in lock file',\n            );\n          }\n        }\n        extendWithIndirectDeps(packageFileContent, lockedDeps);\n        const newPackageFile: PackageFile = {\n          ...packageFileContent,\n          lockFiles: [fileMatch],\n          packageFile,\n        };\n        packageFiles.set(packageFile, newPackageFile);\n        const source = lockFileSources.get(fileMatch) ?? [];\n        source.push(newPackageFile);\n        lockFileSources.set(fileMatch, source);\n      } else {\n        logger.warn(\n          { packageFile },\n          'pip-compile: failed to find dependencies in source file',\n        );\n      }\n    }\n  }\n  if (packageFiles.size === 0) {\n    return null;\n  }\n  const result: PackageFile[] = sortPackageFiles(\n    depsBetweenFiles,\n    packageFiles,\n  );\n\n  // This needs to go in reverse order to handle transitive dependencies\n  for (const packageFile of [...result].reverse()) {\n    for (const reqFile of packageFile.managerData?.requirementsFiles ?? []) {\n      let sourceFiles: PackageFile[] | undefined = undefined;\n      if (fileMatches.includes(reqFile)) {\n        sourceFiles = lockFileSources.get(reqFile);\n      } else if (packageFiles.has(reqFile)) {\n        sourceFiles = [packageFiles.get(reqFile)!];\n      }\n      if (!sourceFiles) {\n        logger.warn(\n          { packageFile: packageFile.packageFile, requirementsFile: reqFile },\n          'pip-compile: Package file references a file which does not appear to be a requirements file managed by pip-compile',\n        );\n        continue;\n      }\n      // These get reversed before merging so that we keep the last instance of any common\n      // lock files, since a file that -r includes multiple lock files needs to be updated after\n      // all of the lock files it includes\n      const files = new Set([...packageFile.lockFiles!].reverse());\n      for (const sourceFile of sourceFiles) {\n        const merged = new Set(files);\n        for (const lockFile of [...sourceFile.lockFiles!].reverse()) {\n          merged.add(lockFile);\n        }\n        sourceFile.lockFiles = Array.from(merged).reverse();\n      }\n    }\n  }\n  logger.debug(\n    'pip-compile: dependency graph:\\n' +\n      generateMermaidGraph(depsBetweenFiles, lockFileArgs),\n  );\n  return result;\n}\n\nfunction extendWithIndirectDeps(\n  packageFileContent: PackageFileContent,\n  lockedDeps: PackageDependency[],\n): void {\n  for (const lockedDep of lockedDeps) {\n    if (\n      !packageFileContent.deps.find(\n        (dep) => lockedDep.packageName === dep.packageName,\n      )\n    ) {\n      packageFileContent.deps.push(indirectDep(lockedDep));\n    }\n  }\n}\n\n/**\n * As indirect dependecies don't exist in the package file, we need to\n * create them from the lock file.\n *\n * By removing currentValue and currentVersion, we ensure that they\n * are handled like unconstrained dependencies with locked version.\n * Such packages are updated when their update strategy\n * is set to 'update-lockfile',\n * see: lib/workers/repository/process/lookup/index.ts.\n *\n * By disabling them by default, we won't create noise by updating them.\n * Unless they have vulnerability alert, then they are forced to be updated.\n * @param dep dependency extracted from lock file (requirements.txt)\n * @returns unconstrained dependency with locked version\n */\nfunction indirectDep(dep: PackageDependency): PackageDependency {\n  const result = {\n    ...dep,\n    lockedVersion: dep.currentVersion,\n    depType: 'indirect',\n    enabled: false,\n  };\n  delete result.currentValue;\n  delete result.currentVersion;\n  return result;\n}\n"]}