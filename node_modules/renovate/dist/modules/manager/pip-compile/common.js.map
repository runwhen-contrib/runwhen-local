{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pip-compile/common.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { split } from 'shlex';\nimport upath from 'upath';\nimport { logger } from '../../../logger';\nimport { isNotNullOrUndefined } from '../../../util/array';\nimport type {\n  ExecOptions,\n  ExtraEnv,\n  ToolConstraint,\n} from '../../../util/exec/types';\nimport { ensureCacheDir } from '../../../util/fs';\nimport { ensureLocalPath } from '../../../util/fs/util';\nimport * as hostRules from '../../../util/host-rules';\nimport { regEx } from '../../../util/regex';\nimport type { PackageFileContent, UpdateArtifactsConfig } from '../types';\nimport type { CommandType, PipCompileArgs, SupportedManagers } from './types';\n\nexport function getPythonVersionConstraint(\n  config: UpdateArtifactsConfig,\n  extractedPythonVersion: string | undefined,\n): string | undefined | null {\n  const { constraints = {} } = config;\n  const { python } = constraints;\n\n  if (python) {\n    logger.debug('Using python constraint from config');\n    return python;\n  }\n\n  if (extractedPythonVersion) {\n    logger.debug('Using python constraint extracted from the lock file');\n    return `==${extractedPythonVersion}`;\n  }\n\n  return undefined;\n}\n\nexport function getPipToolsVersionConstraint(\n  config: UpdateArtifactsConfig,\n): string {\n  const { constraints = {} } = config;\n  const { pipTools } = constraints;\n\n  if (is.string(pipTools)) {\n    logger.debug('Using pipTools constraint from config');\n    return pipTools;\n  }\n\n  return '';\n}\n\nexport function getUvVersionConstraint(config: UpdateArtifactsConfig): string {\n  const { constraints = {} } = config;\n  const { uv } = constraints;\n\n  if (is.string(uv)) {\n    logger.debug('Using uv constraint from config');\n    return uv;\n  }\n\n  return '';\n}\n\nexport function getToolVersionConstraint(\n  config: UpdateArtifactsConfig,\n  commandType: CommandType,\n): ToolConstraint {\n  if (commandType === 'uv') {\n    return {\n      toolName: 'uv',\n      constraint: getUvVersionConstraint(config),\n    };\n  }\n\n  return {\n    toolName: 'pip-tools',\n    constraint: getPipToolsVersionConstraint(config),\n  };\n}\n\nexport async function getExecOptions(\n  config: UpdateArtifactsConfig,\n  commandType: CommandType,\n  cwd: string,\n  extraEnv: ExtraEnv<string>,\n  extractedPythonVersion: string | undefined,\n): Promise<ExecOptions> {\n  const constraint = getPythonVersionConstraint(config, extractedPythonVersion);\n  const execOptions: ExecOptions = {\n    cwd: ensureLocalPath(cwd),\n    docker: {},\n    toolConstraints: [\n      {\n        toolName: 'python',\n        constraint,\n      },\n      getToolVersionConstraint(config, commandType),\n    ],\n    extraEnv: {\n      PIP_CACHE_DIR: await ensureCacheDir('pip'),\n      PIP_NO_INPUT: 'true', // ensure pip doesn't block forever waiting for credentials on stdin\n      PIP_KEYRING_PROVIDER: 'import',\n      PYTHON_KEYRING_BACKEND: 'keyrings.envvars.keyring.EnvvarsKeyring',\n      ...extraEnv,\n    },\n  };\n  return execOptions;\n}\n\nexport const constraintLineRegex = regEx(\n  /^(#.*?\\r?\\n)+# {4}(?<command>\\S*)(?<arguments> .*?)?\\r?\\n/,\n);\n\nexport const disallowedPipOptions = [\n  '--no-header', // header is required by this manager\n];\nconst commonOptionsWithArguments = [\n  '--output-file',\n  '--extra',\n  '--extra-index-url',\n];\nconst pipOptionsWithArguments = [\n  '--resolver',\n  '--constraint',\n  ...commonOptionsWithArguments,\n];\nconst uvOptionsWithArguments = [\n  '--constraints',\n  '--python-version',\n  ...commonOptionsWithArguments,\n];\nexport const optionsWithArguments = [\n  ...pipOptionsWithArguments,\n  ...uvOptionsWithArguments,\n];\nconst allowedCommonOptions = [\n  '-v',\n  '--generate-hashes',\n  '--emit-index-url',\n  '--index-url',\n];\nexport const allowedOptions: Record<CommandType, string[]> = {\n  'pip-compile': [\n    '--all-extras',\n    '--allow-unsafe',\n    '--generate-hashes',\n    '--no-emit-index-url',\n    '--strip-extras',\n    ...allowedCommonOptions,\n    ...pipOptionsWithArguments,\n  ],\n  uv: [\n    '--no-strip-extras',\n    '--universal',\n    ...allowedCommonOptions,\n    ...uvOptionsWithArguments,\n  ],\n  custom: [],\n};\n\n// TODO(not7cd): test on all correct headers, even with CUSTOM_COMPILE_COMMAND\nexport function extractHeaderCommand(\n  content: string,\n  fileName: string,\n): PipCompileArgs {\n  const compileCommand = constraintLineRegex.exec(content);\n  if (compileCommand?.groups === undefined) {\n    throw new Error(\n      `Failed to extract command from header in ${fileName} ${content}`,\n    );\n  }\n  logger.trace(\n    `pip-compile: found header in ${fileName}: \\n${compileCommand[0]}`,\n  );\n  const command = compileCommand.groups.command;\n  const argv = [command];\n  let commandType: CommandType;\n  if (command === 'pip-compile') {\n    commandType = 'pip-compile';\n  } else if (command === 'uv') {\n    commandType = 'uv';\n  } else {\n    commandType = 'custom';\n  }\n  if (compileCommand.groups.arguments) {\n    argv.push(...split(compileCommand.groups.arguments));\n  }\n  logger.debug(\n    { fileName, argv, commandType },\n    `pip-compile: extracted command from header`,\n  );\n\n  const result: PipCompileArgs = {\n    argv,\n    command,\n    commandType,\n    outputFile: '',\n    sourceFiles: [],\n  };\n  for (const arg of argv.slice(1)) {\n    if (commandType === 'uv' && ['pip', 'compile'].includes(arg)) {\n      continue;\n    }\n    // TODO(not7cd): check for \"--option -- argument\" case\n    if (!arg.startsWith('-')) {\n      result.sourceFiles.push(arg);\n      continue;\n    }\n    throwForDisallowedOption(arg);\n    throwForNoEqualSignInOptionWithArgument(arg);\n    throwForUnknownOption(commandType, arg);\n\n    if (arg.includes('=')) {\n      const [option, value] = arg.split('=');\n      if (option === '--extra') {\n        result.extra = result.extra ?? [];\n        result.extra.push(value);\n      } else if (option === '--extra-index-url') {\n        result.extraIndexUrl = result.extraIndexUrl ?? [];\n        result.extraIndexUrl.push(value);\n        // TODO: add to secrets? next PR\n      } else if (['--constraint', '--constraints'].includes(option)) {\n        result.constraintsFiles = result.constraintsFiles ?? [];\n        result.constraintsFiles.push(value);\n      } else if (option === '--output-file') {\n        if (result.outputFile) {\n          throw new Error('Cannot use multiple --output-file options');\n        }\n        result.outputFile = upath.normalize(value);\n      } else if (option === '--python-version') {\n        result.pythonVersion = value;\n      } else if (option === '--index-url') {\n        if (result.indexUrl) {\n          throw new Error('Cannot use multiple --index-url options');\n        }\n        result.indexUrl = value;\n        // TODO: add to secrets? next PR\n      } else {\n        logger.debug({ option }, `pip-compile: option not handled`);\n      }\n      continue;\n    }\n    if (arg === '--no-emit-index-url') {\n      result.noEmitIndexUrl = true;\n      continue;\n    }\n    if (arg === '--emit-index-url') {\n      result.emitIndexUrl = true;\n      continue;\n    }\n    if (arg === '--all-extras') {\n      result.allExtras = true;\n      continue;\n    }\n\n    logger.debug({ option: arg }, `pip-compile: option not handled`);\n  }\n  logger.trace(\n    {\n      ...result,\n    },\n    'Parsed pip-compile command from header',\n  );\n  if (result.noEmitIndexUrl && result.emitIndexUrl) {\n    throw new Error('Cannot use both --no-emit-index-url and --emit-index-url');\n  }\n  if (result.sourceFiles.length === 0) {\n    throw new Error(\n      'No source files detected in command, pass at least one package file explicitly',\n    );\n  }\n  return result;\n}\n\nconst pythonVersionRegex = regEx(\n  /^(#.*?\\r?\\n)*# This file is autogenerated by pip-compile with Python (?<pythonVersion>\\d+(\\.\\d+)*)\\s/,\n  'i',\n);\n\nexport function extractPythonVersion(\n  content: string,\n  fileName: string,\n): string | undefined {\n  const match = pythonVersionRegex.exec(content);\n  if (match?.groups === undefined) {\n    logger.warn(\n      { fileName, content },\n      'pip-compile: failed to extract Python version from header in file',\n    );\n    return undefined;\n  }\n  logger.trace(\n    `pip-compile: found Python version header in ${fileName}: \\n${match[0]}`,\n  );\n  const { pythonVersion } = match.groups;\n  logger.debug(\n    { fileName, pythonVersion },\n    `pip-compile: extracted Python version from header`,\n  );\n  return pythonVersion;\n}\n\nfunction throwForDisallowedOption(arg: string): void {\n  if (disallowedPipOptions.includes(arg)) {\n    throw new Error(`Option ${arg} not allowed for this manager`);\n  }\n}\nfunction throwForNoEqualSignInOptionWithArgument(arg: string): void {\n  if (optionsWithArguments.includes(arg)) {\n    throw new Error(\n      `Option ${arg} must have equal sign '=' separating it's argument`,\n    );\n  }\n}\nfunction throwForUnknownOption(commandType: CommandType, arg: string): void {\n  if (arg.includes('=')) {\n    const [option] = arg.split('=');\n    if (allowedOptions[commandType].includes(option)) {\n      return;\n    }\n  }\n  if (allowedOptions[commandType].includes(arg)) {\n    return;\n  }\n  throw new Error(`Option ${arg} not supported (yet)`);\n}\n\nfunction getRegistryCredEnvVars(\n  url: URL,\n  index: number,\n): Record<string, string> {\n  const hostRule = hostRules.find({ url: url.href });\n  logger.debug(hostRule, `Found host rule for url ${url.href}`);\n  const ret: Record<string, string> = {};\n  if (!!hostRule.username || !!hostRule.password) {\n    ret[`KEYRING_SERVICE_NAME_${index}`] = url.hostname;\n    ret[`KEYRING_SERVICE_USERNAME_${index}`] = hostRule.username ?? '';\n    ret[`KEYRING_SERVICE_PASSWORD_${index}`] = hostRule.password ?? '';\n  }\n  return ret;\n}\n\nfunction cleanUrl(url: string): URL | null {\n  try {\n    // Strip everything but protocol, host, and port\n    const urlObj = new URL(url);\n    return new URL(urlObj.origin);\n  } catch {\n    return null;\n  }\n}\n\nexport function getRegistryCredVarsFromPackageFiles(\n  packageFiles: PackageFileContent[],\n): ExtraEnv<string> {\n  const urls: string[] = [];\n  for (const packageFile of packageFiles) {\n    urls.push(\n      ...(packageFile.registryUrls ?? []),\n      ...(packageFile.additionalRegistryUrls ?? []),\n    );\n  }\n  logger.debug(urls, 'Extracted registry URLs from package files');\n\n  const uniqueHosts = new Set<URL>(\n    urls.map(cleanUrl).filter(isNotNullOrUndefined),\n  );\n\n  let allCreds: ExtraEnv<string> = {};\n  for (const [index, host] of [...uniqueHosts].entries()) {\n    const hostCreds = getRegistryCredEnvVars(host, index);\n    allCreds = {\n      ...allCreds,\n      ...hostCreds,\n    };\n  }\n\n  return allCreds;\n}\n\nexport function matchManager(filename: string): SupportedManagers | 'unknown' {\n  if (filename.endsWith('setup.py')) {\n    return 'pip_setup';\n  }\n  if (filename.endsWith('setup.cfg')) {\n    return 'setup-cfg';\n  }\n  if (filename.endsWith('pyproject.toml')) {\n    return 'pep621';\n  }\n  // naive, could be improved, maybe use pip_requirements.fileMatch\n  if (filename.endsWith('.in') || filename.endsWith('.txt')) {\n    return 'pip_requirements';\n  }\n  return 'unknown';\n}\n"]}