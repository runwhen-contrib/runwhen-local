{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pip-compile/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import { quote } from 'shlex';\nimport upath from 'upath';\nimport { TEMPORARY_ERROR } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { exec } from '../../../util/exec';\nimport {\n  deleteLocalFile,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../util/fs';\nimport { getRepoStatus } from '../../../util/git';\nimport { extractPackageFileFlags as extractRequirementsFileFlags } from '../pip_requirements/common';\nimport type {\n  PackageFileContent,\n  UpdateArtifact,\n  UpdateArtifactsResult,\n  Upgrade,\n} from '../types';\nimport {\n  extractHeaderCommand,\n  extractPythonVersion,\n  getExecOptions,\n  getRegistryCredVarsFromPackageFiles,\n  matchManager,\n} from './common';\nimport type { PipCompileArgs } from './types';\nimport { inferCommandExecDir } from './utils';\n\nfunction haveCredentialsInPipEnvironmentVariables(): boolean {\n  if (process.env.PIP_INDEX_URL) {\n    try {\n      const indexUrl = new URL(process.env.PIP_INDEX_URL);\n      if (!!indexUrl.username || !!indexUrl.password) {\n        return true;\n      }\n    } catch {\n      // Assume that an invalid URL contains credentials, just in case\n      return true;\n    }\n  }\n\n  try {\n    if (process.env.PIP_EXTRA_INDEX_URL) {\n      return process.env.PIP_EXTRA_INDEX_URL.split(' ')\n        .map((urlString) => new URL(urlString))\n        .some((url) => !!url.username || !!url.password);\n    }\n  } catch {\n    // Assume that an invalid URL contains credentials, just in case\n    return true;\n  }\n\n  return false;\n}\n\nexport function constructPipCompileCmd(\n  compileArgs: PipCompileArgs,\n  upgradePackages: Upgrade[] = [],\n): string {\n  if (compileArgs.commandType === 'custom') {\n    throw new Error(\n      'Detected custom command, header modified or set by CUSTOM_COMPILE_COMMAND',\n    );\n  }\n\n  if (!compileArgs.outputFile) {\n    logger.debug(`pip-compile: implicit output file`);\n  }\n  // safeguard against index url leak if not explicitly set by an option\n  if (\n    compileArgs.commandType === 'pip-compile' &&\n    !compileArgs.noEmitIndexUrl &&\n    !compileArgs.emitIndexUrl &&\n    haveCredentialsInPipEnvironmentVariables()\n  ) {\n    compileArgs.argv.splice(1, 0, '--no-emit-index-url');\n  }\n  for (const dep of upgradePackages) {\n    compileArgs.argv.push(\n      `--upgrade-package=${quote(dep.depName + '==' + dep.newVersion)}`,\n    );\n  }\n  return compileArgs.argv.map(quote).join(' ');\n}\n\nexport async function updateArtifacts({\n  packageFileName: inputFileName,\n  newPackageFileContent: newInputContent,\n  updatedDeps,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  if (!config.lockFiles) {\n    logger.warn(\n      { packageFileName: inputFileName },\n      'pip-compile: No lock files associated with a package file',\n    );\n    return null;\n  }\n  logger.debug(\n    `pipCompile.updateArtifacts(${inputFileName}->${JSON.stringify(\n      config.lockFiles,\n    )})`,\n  );\n  const result: UpdateArtifactsResult[] = [];\n  for (const outputFileName of config.lockFiles) {\n    const existingOutput = await readLocalFile(outputFileName, 'utf8');\n    if (!existingOutput) {\n      logger.debug('pip-compile: No output file found');\n      return null;\n    }\n    try {\n      await writeLocalFile(inputFileName, newInputContent);\n      // TODO(not7cd): use --upgrade option instead deleting\n      if (config.isLockFileMaintenance) {\n        await deleteLocalFile(outputFileName);\n      }\n      const compileArgs = extractHeaderCommand(existingOutput, outputFileName);\n      let pythonVersion: string | undefined;\n      if (compileArgs.commandType === 'uv') {\n        pythonVersion = compileArgs.pythonVersion;\n      } else {\n        pythonVersion = extractPythonVersion(existingOutput, outputFileName);\n      }\n      const cwd = inferCommandExecDir(outputFileName, compileArgs.outputFile);\n      const upgradePackages = updatedDeps.filter((dep) => dep.isLockfileUpdate);\n      const packageFiles: PackageFileContent[] = [];\n      for (const name of compileArgs.sourceFiles) {\n        const manager = matchManager(name);\n        if (manager === 'pip_requirements') {\n          const path = upath.join(cwd, name);\n          const content = await readLocalFile(path, 'utf8');\n          if (content) {\n            const packageFile = extractRequirementsFileFlags(content);\n            if (packageFile) {\n              packageFiles.push(packageFile);\n            }\n          }\n        }\n      }\n      const cmd = constructPipCompileCmd(compileArgs, upgradePackages);\n      const execOptions = await getExecOptions(\n        config,\n        compileArgs.commandType,\n        cwd,\n        getRegistryCredVarsFromPackageFiles(packageFiles),\n        pythonVersion,\n      );\n      logger.trace({ cwd, cmd }, 'pip-compile command');\n      logger.trace({ env: execOptions.extraEnv }, 'pip-compile extra env vars');\n      await exec(cmd, execOptions);\n      const status = await getRepoStatus();\n      if (status?.modified.includes(outputFileName)) {\n        result.push({\n          file: {\n            type: 'addition',\n            path: outputFileName,\n            contents: await readLocalFile(outputFileName, 'utf8'),\n          },\n        });\n      }\n    } catch (err) {\n      // istanbul ignore if\n      if (err.message === TEMPORARY_ERROR) {\n        throw err;\n      }\n      logger.debug({ err }, 'pip-compile: Failed to run command');\n      result.push({\n        artifactError: {\n          lockFile: outputFileName,\n          stderr: err.message,\n        },\n      });\n    }\n  }\n  logger.debug('pip-compile: Returning updated output file(s)');\n  return result.length === 0 ? null : result;\n}\n"]}