{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../lib/modules/manager/composer/schema.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\nimport { logger } from '../../../logger';\nimport { readLocalFile } from '../../../util/fs';\nimport { regEx } from '../../../util/regex';\nimport {\n  Json,\n  LooseArray,\n  LooseRecord,\n  withDebugMessage,\n} from '../../../util/schema-utils';\nimport { BitbucketTagsDatasource } from '../../datasource/bitbucket-tags';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport { GithubTagsDatasource } from '../../datasource/github-tags';\nimport { PackagistDatasource } from '../../datasource/packagist';\nimport { api as semverComposer } from '../../versioning/composer';\nimport type { PackageDependency, PackageFileContent } from '../types';\nimport type { ComposerManagerData } from './types';\n\nexport const ComposerRepo = z.object({\n  type: z.literal('composer'),\n  /**\n   * The regUrl is expected to be a base URL. GitLab composer repository installation guide specifies\n   * to use a base URL containing packages.json. Composer still works in this scenario by determining\n   * whether to add / remove packages.json from the URL.\n   *\n   * See https://github.com/composer/composer/blob/750a92b4b7aecda0e5b2f9b963f1cb1421900675/src/Composer/Repository/ComposerRepository.php#L815\n   */\n  url: z.string().transform((url) => url.replace(/\\/packages\\.json$/, '')),\n});\nexport type ComposerRepo = z.infer<typeof ComposerRepo>;\n\nexport const GitRepo = z.object({\n  type: z.enum(['vcs', 'git']).transform(() => 'git' as const),\n  url: z.string(),\n  name: z.string().optional(),\n});\nexport type GitRepo = z.infer<typeof GitRepo>;\n\nexport const PathRepo = z.object({\n  type: z.literal('path'),\n  url: z.string(),\n  name: z.string().optional(),\n});\nexport type PathRepo = z.infer<typeof PathRepo>;\n\nexport const PackageRepo = z.object({\n  type: z.literal('package'),\n});\n\nexport const Repo = z.discriminatedUnion('type', [\n  ComposerRepo,\n  GitRepo,\n  PathRepo,\n  PackageRepo,\n]);\nexport type Repo = z.infer<typeof ComposerRepo>;\n\nexport const NamedRepo = z.discriminatedUnion('type', [\n  ComposerRepo,\n  GitRepo.extend({ name: z.string() }),\n  PathRepo.extend({ name: z.string() }),\n  PackageRepo,\n]);\nexport type NamedRepo = z.infer<typeof NamedRepo>;\n\nconst DisablePackagist = z.object({ type: z.literal('disable-packagist') });\nexport type DisablePackagist = z.infer<typeof DisablePackagist>;\n\nconst bitbucketUrlRegex = regEx(\n  /^(?:https:\\/\\/|git@)bitbucket\\.org[/:](?<packageName>[^/]+\\/[^/]+?)(?:\\.git)?$/,\n);\n\nexport const ReposRecord = LooseRecord(z.union([Repo, z.literal(false)]), {\n  onError: ({ error: err }) => {\n    logger.debug({ err }, 'Composer: error parsing repositories object');\n  },\n}).transform((repos) => {\n  const result: (NamedRepo | DisablePackagist)[] = [];\n  for (const [name, repo] of Object.entries(repos)) {\n    if (repo === false) {\n      if (name === 'packagist' || name === 'packagist.org') {\n        result.push({ type: 'disable-packagist' });\n      }\n      continue;\n    }\n\n    if (repo.type === 'path' || repo.type === 'git') {\n      result.push({ name, ...repo });\n      continue;\n    }\n\n    if (repo.type === 'composer') {\n      result.push(repo);\n      continue;\n    }\n  }\n\n  return result;\n});\nexport type ReposRecord = z.infer<typeof ReposRecord>;\n\nexport const ReposArray = LooseArray(\n  z.union([\n    Repo,\n    z\n      .union([\n        z.object({ packagist: z.literal(false) }),\n        z.object({ 'packagist.org': z.literal(false) }),\n      ])\n      .transform((): DisablePackagist => ({ type: 'disable-packagist' })),\n  ]),\n  {\n    onError: ({ error: err }) => {\n      logger.debug({ err }, 'Composer: error parsing repositories array');\n    },\n  },\n).transform((repos) => {\n  const result: (NamedRepo | DisablePackagist)[] = [];\n  for (let idx = 0; idx < repos.length; idx++) {\n    const repo = repos[idx];\n    if (repo.type === 'path' || repo.type === 'git') {\n      result.push({ name: `__${idx}`, ...repo });\n    } else {\n      result.push(repo);\n    }\n  }\n  return result;\n});\nexport type ReposArray = z.infer<typeof ReposArray>;\n\nexport const Repos = z\n  .union([ReposRecord, ReposArray])\n  .default([]) // Prevents warnings for packages without repositories field\n  .catch(withDebugMessage([], 'Composer: invalid \"repositories\" field'))\n  .transform((repos) => {\n    let packagist = true;\n    const repoUrls: string[] = [];\n    const gitRepos: Record<string, GitRepo> = {};\n    const pathRepos: Record<string, PathRepo> = {};\n\n    for (const repo of repos) {\n      if (repo.type === 'composer') {\n        repoUrls.push(repo.url);\n      } else if (repo.type === 'git') {\n        gitRepos[repo.name] = repo;\n      } else if (repo.type === 'path') {\n        pathRepos[repo.name] = repo;\n      } else if (repo.type === 'disable-packagist') {\n        packagist = false;\n      }\n    }\n\n    if (packagist && repoUrls.length) {\n      repoUrls.push('https://packagist.org');\n    }\n    const registryUrls = repoUrls.length ? repoUrls : null;\n\n    return { registryUrls, gitRepos, pathRepos };\n  });\nexport type Repos = z.infer<typeof Repos>;\n\nconst RequireDefs = LooseRecord(z.string().transform((x) => x.trim())).catch(\n  {},\n);\n\nexport const PackageFile = z\n  .object({\n    type: z.string().optional(),\n    config: z\n      .object({\n        platform: z.object({\n          php: z.string(),\n        }),\n      })\n      .nullable()\n      .catch(null),\n    repositories: Repos,\n    require: RequireDefs,\n    'require-dev': RequireDefs,\n  })\n  .transform(\n    ({\n      type: composerJsonType,\n      config,\n      repositories,\n      require,\n      'require-dev': requireDev,\n    }) => ({\n      composerJsonType,\n      config,\n      repositories,\n      require,\n      requireDev,\n    }),\n  );\nexport type PackageFile = z.infer<typeof PackageFile>;\n\nconst LockedPackage = z.object({\n  name: z.string(),\n  version: z.string(),\n});\ntype LockedPackage = z.infer<typeof LockedPackage>;\n\nexport const Lockfile = z\n  .object({\n    'plugin-api-version': z.string().optional(),\n    packages: LooseArray(LockedPackage).catch([]),\n    'packages-dev': LooseArray(LockedPackage).catch([]),\n  })\n  .transform(\n    ({\n      'plugin-api-version': pluginApiVersion,\n      packages,\n      'packages-dev': packagesDev,\n    }) => ({ pluginApiVersion, packages, packagesDev }),\n  );\nexport type Lockfile = z.infer<typeof Lockfile>;\n\nexport const ComposerExtract = z\n  .object({\n    content: z.string(),\n    fileName: z.string(),\n  })\n  .transform(({ content, fileName }) => {\n    const lockfileName = fileName.replace(/\\.json$/, '.lock');\n    return {\n      file: content,\n      lockfileName,\n      lockfile: lockfileName,\n    };\n  })\n  .pipe(\n    z.object({\n      file: Json.pipe(PackageFile),\n      lockfileName: z.string(),\n      lockfile: z\n        .string()\n        .transform((lockfileName) => readLocalFile(lockfileName, 'utf8'))\n        .pipe(\n          z.union([\n            z.null(),\n            z\n              .string()\n              .pipe(Json)\n              .pipe(Lockfile)\n              .nullable()\n              .catch(withDebugMessage(null, 'Composer: does not match schema')),\n          ]),\n        ),\n    }),\n  )\n  .transform(({ file, lockfile, lockfileName }) => {\n    const { composerJsonType, require, requireDev } = file;\n    const { registryUrls, gitRepos, pathRepos } = file.repositories;\n\n    const deps: PackageDependency[] = [];\n\n    const profiles = [\n      {\n        depType: 'require',\n        req: require,\n        locked: lockfile?.packages ?? [],\n      },\n      {\n        depType: 'require-dev',\n        req: requireDev,\n        locked: lockfile?.packagesDev ?? [],\n      },\n    ];\n\n    for (const { depType, req, locked } of profiles) {\n      for (const [depName, currentValue] of Object.entries(req)) {\n        if (depName === 'php') {\n          deps.push({\n            depType,\n            depName,\n            currentValue,\n            datasource: GithubTagsDatasource.id,\n            packageName: 'containerbase/php-prebuild',\n          });\n          continue;\n        }\n\n        if (pathRepos[depName]) {\n          deps.push({\n            depType,\n            depName,\n            currentValue,\n            skipReason: 'path-dependency',\n          });\n          continue;\n        }\n\n        const dep: PackageDependency = {\n          depType,\n          depName,\n          currentValue,\n        };\n\n        if (!depName.includes('/')) {\n          dep.skipReason = 'unsupported';\n        }\n\n        const lockedDep = locked.find((item) => item.name === depName);\n        if (lockedDep && semverComposer.isVersion(lockedDep.version)) {\n          dep.lockedVersion = lockedDep.version.replace(regEx(/^v/i), '');\n        }\n\n        const gitRepo = gitRepos[depName];\n        if (gitRepo) {\n          const bitbucketMatchGroups = bitbucketUrlRegex.exec(\n            gitRepo.url,\n          )?.groups;\n\n          if (bitbucketMatchGroups) {\n            dep.datasource = BitbucketTagsDatasource.id;\n            dep.packageName = bitbucketMatchGroups.packageName;\n            deps.push(dep);\n            continue;\n          }\n\n          dep.datasource = GitTagsDatasource.id;\n          dep.packageName = gitRepo.url;\n          deps.push(dep);\n          continue;\n        }\n\n        dep.datasource = PackagistDatasource.id;\n\n        if (registryUrls) {\n          dep.registryUrls = registryUrls;\n        }\n\n        deps.push(dep);\n      }\n    }\n\n    if (!deps.length) {\n      return null;\n    }\n\n    const res: PackageFileContent<ComposerManagerData> = { deps };\n\n    if (composerJsonType) {\n      res.managerData = { composerJsonType };\n    }\n\n    if (require.php) {\n      res.extractedConstraints = { php: require.php };\n    }\n\n    if (lockfile) {\n      res.lockFiles = [lockfileName];\n    }\n\n    return res;\n  });\nexport type ComposerExtract = z.infer<typeof ComposerExtract>;\n"]}