{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/manager/composer/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO: types (#22198)\nimport is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport { GlobalConfig } from '../../../config/global';\nimport { logger } from '../../../logger';\nimport type { CombinedHostRule } from '../../../types';\nimport type { ToolConstraint } from '../../../util/exec/types';\nimport { coerceNumber } from '../../../util/number';\nimport { api, id as composerVersioningId } from '../../versioning/composer';\nimport type { UpdateArtifactsConfig } from '../types';\nimport type { Lockfile, PackageFile } from './schema';\n\nexport { composerVersioningId };\n\nconst depRequireInstall = new Set(['symfony/flex']);\n\nexport function getComposerArguments(\n  config: UpdateArtifactsConfig,\n  toolConstraint: ToolConstraint,\n): string {\n  let args = '';\n\n  if (config.composerIgnorePlatformReqs) {\n    if (config.composerIgnorePlatformReqs.length === 0) {\n      if (\n        is.string(toolConstraint.constraint) &&\n        api.intersects!(toolConstraint.constraint, '^2.2')\n      ) {\n        args += \" --ignore-platform-req='ext-*' --ignore-platform-req='lib-*'\";\n      } else {\n        args += ' --ignore-platform-reqs';\n      }\n    } else {\n      config.composerIgnorePlatformReqs.forEach((req) => {\n        args += ' --ignore-platform-req ' + quote(req);\n      });\n    }\n  }\n\n  args += ' --no-ansi --no-interaction';\n  if (!GlobalConfig.get('allowScripts') || config.ignoreScripts) {\n    args += ' --no-scripts --no-autoloader';\n  }\n\n  if (!GlobalConfig.get('allowPlugins') || config.ignorePlugins) {\n    args += ' --no-plugins';\n  }\n\n  return args;\n}\n\nexport function getComposerUpdateArguments(\n  config: UpdateArtifactsConfig,\n  toolConstraint: ToolConstraint,\n): string {\n  let args = getComposerArguments(config, toolConstraint);\n\n  if (\n    is.string(toolConstraint.constraint) &&\n    api.intersects!(toolConstraint.constraint, '>=2.7')\n  ) {\n    args += ' --minimal-changes';\n  }\n\n  return args;\n}\n\nexport function getPhpConstraint(\n  constraints: Record<string, string>,\n): string | null {\n  const { php } = constraints;\n\n  if (php) {\n    logger.debug('Using php constraint from config');\n    return php;\n  }\n\n  return null;\n}\n\nexport function requireComposerDependencyInstallation({\n  packages,\n  packagesDev,\n}: Lockfile): boolean {\n  return (\n    packages.some((p) => depRequireInstall.has(p.name)) === true ||\n    packagesDev.some((p) => depRequireInstall.has(p.name)) === true\n  );\n}\n\nexport function extractConstraints(\n  { config, require, requireDev }: PackageFile,\n  { pluginApiVersion }: Lockfile,\n): Record<string, string> {\n  const res: Record<string, string> = { composer: '1.*' };\n\n  // extract php\n  const phpVersion = config?.platform.php;\n  if (phpVersion) {\n    const major = api.getMajor(phpVersion);\n    const minor = coerceNumber(api.getMinor(phpVersion));\n    const patch = coerceNumber(api.getPatch(phpVersion));\n    res.php = `<=${major}.${minor}.${patch}`;\n  } else if (require.php) {\n    res.php = require.php;\n  }\n\n  // extract direct composer dependency\n  if (require['composer/composer']) {\n    res.composer = require['composer/composer'];\n  } else if (requireDev['composer/composer']) {\n    res.composer = requireDev['composer/composer'];\n  }\n  // composer platform package\n  else if (require.composer) {\n    res.composer = require.composer;\n  } else if (requireDev.composer) {\n    res.composer = requireDev.composer;\n  }\n  // check last used composer version\n  else if (pluginApiVersion) {\n    const major = api.getMajor(pluginApiVersion);\n    const minor = api.getMinor(pluginApiVersion);\n    res.composer = `^${major}.${minor}`;\n  }\n  // check composer api dependency\n  else if (require['composer-runtime-api']) {\n    const major = api.getMajor(require['composer-runtime-api']);\n    const minor = api.getMinor(require['composer-runtime-api']);\n    res.composer = `^${major}.${minor}`;\n  }\n  return res;\n}\n\nexport function isArtifactAuthEnabled(rule: CombinedHostRule): boolean {\n  return !rule.artifactAuth || rule.artifactAuth.includes('composer');\n}\n"]}