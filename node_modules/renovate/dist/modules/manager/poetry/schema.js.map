{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../lib/modules/manager/poetry/schema.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\nimport { logger } from '../../../logger';\nimport { parseGitUrl } from '../../../util/git/url';\nimport { regEx } from '../../../util/regex';\nimport {\n  LooseArray,\n  LooseRecord,\n  Toml,\n  withDepType,\n} from '../../../util/schema-utils';\nimport { uniq } from '../../../util/uniq';\nimport { GitRefsDatasource } from '../../datasource/git-refs';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport { GithubTagsDatasource } from '../../datasource/github-tags';\nimport { GitlabTagsDatasource } from '../../datasource/gitlab-tags';\nimport { PypiDatasource } from '../../datasource/pypi';\nimport { normalizePythonDepName } from '../../datasource/pypi/common';\nimport * as gitVersioning from '../../versioning/git';\nimport * as pep440Versioning from '../../versioning/pep440';\nimport * as poetryVersioning from '../../versioning/poetry';\nimport { dependencyPattern } from '../pip_requirements/extract';\nimport type { PackageDependency, PackageFileContent } from '../types';\n\nconst PoetryOptionalDependencyMixin = z\n  .object({\n    optional: z.boolean().optional().catch(false),\n  })\n  .transform(\n    ({ optional }): PackageDependency =>\n      optional ? { depType: 'extras' } : {},\n  );\n\nconst PoetryPathDependency = z\n  .object({\n    path: z.string(),\n    version: z.string().optional().catch(undefined),\n  })\n  .transform(({ version }): PackageDependency => {\n    const dep: PackageDependency = {\n      datasource: PypiDatasource.id,\n      skipReason: 'path-dependency',\n    };\n\n    if (version) {\n      dep.currentValue = version;\n    }\n\n    return dep;\n  })\n  .and(PoetryOptionalDependencyMixin);\n\nconst PoetryGitDependency = z\n  .object({\n    git: z.string(),\n    tag: z.string().optional().catch(undefined),\n    version: z.string().optional().catch(undefined),\n    branch: z.string().optional().catch(undefined),\n    rev: z.string().optional().catch(undefined),\n  })\n  .transform(({ git, tag, version, branch, rev }): PackageDependency => {\n    if (tag) {\n      const { source, owner, name } = parseGitUrl(git);\n      const repo = `${owner}/${name}`;\n      if (source === 'github.com') {\n        return {\n          datasource: GithubTagsDatasource.id,\n          currentValue: tag,\n          packageName: repo,\n        };\n      } else if (source === 'gitlab.com') {\n        return {\n          datasource: GitlabTagsDatasource.id,\n          currentValue: tag,\n          packageName: repo,\n        };\n      } else {\n        return {\n          datasource: GitTagsDatasource.id,\n          currentValue: tag,\n          packageName: git,\n        };\n      }\n    }\n\n    if (rev) {\n      return {\n        datasource: GitRefsDatasource.id,\n        currentValue: branch,\n        currentDigest: rev,\n        replaceString: rev,\n        packageName: git,\n      };\n    }\n\n    return {\n      datasource: GitRefsDatasource.id,\n      currentValue: version,\n      packageName: git,\n      skipReason: 'git-dependency',\n    };\n  })\n  .and(PoetryOptionalDependencyMixin);\n\nconst PoetryPypiDependency = z.union([\n  z\n    .object({ version: z.string().optional(), source: z.string().optional() })\n    .transform(({ version: currentValue, source }): PackageDependency => {\n      if (!currentValue) {\n        return { datasource: PypiDatasource.id };\n      }\n\n      return {\n        datasource: PypiDatasource.id,\n        managerData: {\n          nestedVersion: true,\n          ...(source ? { sourceName: source.toLowerCase() } : {}),\n        },\n        currentValue,\n      };\n    })\n    .and(PoetryOptionalDependencyMixin),\n  z.string().transform(\n    (version): PackageDependency => ({\n      datasource: PypiDatasource.id,\n      currentValue: version,\n      managerData: { nestedVersion: false },\n    }),\n  ),\n]);\n\nconst PoetryArrayDependency = z.array(z.unknown()).transform(\n  (): PackageDependency => ({\n    datasource: PypiDatasource.id,\n    skipReason: 'multiple-constraint-dep',\n  }),\n);\n\nconst PoetryDependency = z.union([\n  PoetryPathDependency,\n  PoetryGitDependency,\n  PoetryPypiDependency,\n  PoetryArrayDependency,\n]);\n\nexport const PoetryDependencies = LooseRecord(\n  z.string(),\n  PoetryDependency.transform((dep) => {\n    if (dep.skipReason) {\n      return dep;\n    }\n\n    if (dep.datasource === GitRefsDatasource.id && dep.currentDigest) {\n      dep.versioning = gitVersioning.id;\n      return dep;\n    }\n\n    // istanbul ignore if: normaly should not happen\n    if (!dep.currentValue) {\n      dep.skipReason = 'unspecified-version';\n      return dep;\n    }\n\n    if (pep440Versioning.isValid(dep.currentValue)) {\n      dep.versioning = pep440Versioning.id;\n      return dep;\n    }\n\n    if (poetryVersioning.isValid(dep.currentValue)) {\n      dep.versioning = poetryVersioning.id;\n      return dep;\n    }\n\n    dep.skipReason = 'invalid-version';\n    return dep;\n  }),\n).transform((record) => {\n  const deps: PackageDependency[] = [];\n  for (const [depName, dep] of Object.entries(record)) {\n    dep.depName = depName;\n    if (!dep.packageName) {\n      const packageName = normalizePythonDepName(depName);\n      if (depName !== packageName) {\n        dep.packageName = packageName;\n      }\n    }\n    deps.push(dep);\n  }\n  return deps;\n});\n\nexport const PoetryGroupDependencies = LooseRecord(\n  z.string(),\n  z\n    .object({ dependencies: PoetryDependencies })\n    .transform(({ dependencies }) => dependencies),\n).transform((record) => {\n  const deps: PackageDependency[] = [];\n  for (const [name, val] of Object.entries(record)) {\n    for (const dep of Object.values(val)) {\n      dep.depType = name;\n      deps.push(dep);\n    }\n  }\n  return deps;\n});\n\nconst PoetrySourceOrder = [\n  'default',\n  'primary',\n  'secondary',\n  'supplemental',\n  'explicit',\n] as const;\n\nexport const PoetrySource = z.object({\n  name: z.string().toLowerCase(),\n  url: z.string().optional(),\n  priority: z.enum(PoetrySourceOrder).default('primary'),\n});\nexport type PoetrySource = z.infer<typeof PoetrySource>;\n\nexport const PoetrySources = LooseArray(PoetrySource, {\n  onError: ({ error: err }) => {\n    logger.debug({ err }, 'Poetry: error parsing sources array');\n  },\n})\n  .transform((sources) => {\n    const pypiUrl = process.env.PIP_INDEX_URL ?? 'https://pypi.org/pypi/';\n    const result: PoetrySource[] = [];\n\n    let overridesPyPi = false;\n    let hasDefaultSource = false;\n    let hasPrimarySource = false;\n    for (const source of sources) {\n      if (source.name === 'pypi') {\n        source.url = pypiUrl;\n        overridesPyPi = true;\n      }\n\n      if (!source.url) {\n        continue;\n      }\n\n      if (source.priority === 'default') {\n        hasDefaultSource = true;\n      } else if (source.priority === 'primary') {\n        hasPrimarySource = true;\n      }\n\n      result.push(source);\n    }\n\n    if (sources.length && !hasDefaultSource && !overridesPyPi) {\n      result.push({\n        name: 'pypi',\n        priority: hasPrimarySource ? 'secondary' : 'default',\n        url: pypiUrl,\n      });\n    }\n\n    result.sort(\n      (a, b) =>\n        PoetrySourceOrder.indexOf(a.priority) -\n        PoetrySourceOrder.indexOf(b.priority),\n    );\n\n    return result;\n  })\n  .catch([]);\n\nexport const PoetrySectionSchema = z\n  .object({\n    version: z.string().optional().catch(undefined),\n    dependencies: withDepType(\n      PoetryDependencies,\n      'dependencies',\n      false,\n    ).optional(),\n    'dev-dependencies': withDepType(\n      PoetryDependencies,\n      'dev-dependencies',\n    ).optional(),\n    group: PoetryGroupDependencies.optional(),\n    source: PoetrySources,\n  })\n  .transform(\n    ({\n      version,\n      dependencies = [],\n      'dev-dependencies': devDependencies = [],\n      group: groupDependencies = [],\n      source: sourceUrls,\n    }) => {\n      const deps: PackageDependency[] = [\n        ...dependencies,\n        ...devDependencies,\n        ...groupDependencies,\n      ];\n\n      const res: PackageFileContent = { deps, packageFileVersion: version };\n\n      if (sourceUrls.length) {\n        for (const dep of res.deps) {\n          if (dep.managerData?.sourceName) {\n            const sourceUrl = sourceUrls.find(\n              ({ name }) => name === dep.managerData?.sourceName,\n            );\n            if (sourceUrl?.url) {\n              dep.registryUrls = [sourceUrl.url];\n            }\n          }\n        }\n\n        const sourceUrlsFiltered = sourceUrls.filter(\n          ({ priority }) => priority !== 'explicit',\n        );\n        res.registryUrls = uniq(sourceUrlsFiltered.map(({ url }) => url!));\n      }\n\n      return res;\n    },\n  );\n\nexport type PoetrySectionSchema = z.infer<typeof PoetrySectionSchema>;\n\nconst BuildSystemRequireVal = z\n  .string()\n  .nonempty()\n  .transform((val) => regEx(`^${dependencyPattern}$`).exec(val))\n  .transform((match, ctx) => {\n    if (!match) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: 'invalid requirement',\n      });\n      return z.NEVER;\n    }\n\n    const [, depName, , poetryRequirement] = match;\n    return { depName, poetryRequirement };\n  });\n\nexport const PoetrySchema = z\n  .object({\n    tool: z\n      .object({ poetry: PoetrySectionSchema })\n      .transform(({ poetry }) => poetry),\n    'build-system': z\n      .object({\n        'build-backend': z.string().refine(\n          // https://python-poetry.org/docs/pyproject/#poetry-and-pep-517\n          (buildBackend) =>\n            buildBackend === 'poetry.masonry.api' ||\n            buildBackend === 'poetry.core.masonry.api',\n        ),\n        requires: LooseArray(BuildSystemRequireVal).transform((vals) => {\n          const req = vals.find(\n            ({ depName }) => depName === 'poetry' || depName === 'poetry_core',\n          );\n          return req?.poetryRequirement;\n        }),\n      })\n      .transform(({ requires: poetryRequirement }) => poetryRequirement)\n      .optional()\n      .catch(undefined),\n  })\n  .transform(\n    ({ tool: packageFileContent, 'build-system': poetryRequirement }) => ({\n      packageFileContent,\n      poetryRequirement,\n    }),\n  );\n\nexport type PoetrySchema = z.infer<typeof PoetrySchema>;\n\nexport const PoetrySchemaToml = Toml.pipe(PoetrySchema);\n\nconst poetryConstraint: Record<string, string> = {\n  '1.0': '<1.1.0',\n  '1.1': '<1.3.0',\n  '2.0': '>=1.3.0 <1.4.0', // 1.4.0 introduced embedding of the poetry version in lock file header\n};\n\nexport const Lockfile = Toml.pipe(\n  z.object({\n    package: LooseArray(\n      z\n        .object({\n          name: z.string(),\n          version: z.string(),\n        })\n        .transform(({ name, version }): [string, string] => [name, version]),\n    )\n      .transform((entries) => Object.fromEntries(entries))\n      .catch({}),\n    metadata: z\n      .object({\n        'lock-version': z\n          .string()\n          .transform((lockVersion) => poetryConstraint[lockVersion])\n          .optional()\n          .catch(undefined),\n        'python-versions': z.string().optional().catch(undefined),\n      })\n      .transform(\n        ({\n          'lock-version': poetryConstraint,\n          'python-versions': pythonVersions,\n        }) => ({\n          poetryConstraint,\n          pythonVersions,\n        }),\n      )\n      .catch({\n        poetryConstraint: undefined,\n        pythonVersions: undefined,\n      }),\n  }),\n).transform(\n  ({ package: lock, metadata: { poetryConstraint, pythonVersions } }) => ({\n    lock,\n    poetryConstraint,\n    pythonVersions,\n  }),\n);\n"]}