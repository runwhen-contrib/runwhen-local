{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pip_setup/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import { RANGE_PATTERN } from '@renovatebot/pep440';\nimport type { lexer, parser } from 'good-enough-parser';\nimport { lang, query as q } from 'good-enough-parser';\nimport { regEx } from '../../../util/regex';\nimport { PypiDatasource } from '../../datasource/pypi';\nimport { normalizePythonDepName } from '../../datasource/pypi/common';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFileContent,\n} from '../types';\n\ninterface ManagerData {\n  lineNumber: number;\n}\n\ntype Context = PackageFileContent<ManagerData>;\n\nconst python = lang.createLang('python');\n\n// Optimize regex memory usage when we don't need named groups\nfunction cleanupNamedGroups(regexSource: string): string {\n  return regexSource.replace(/\\(\\?<\\w+>/g, '(?:');\n}\n\nconst rangePattern = cleanupNamedGroups(RANGE_PATTERN);\nconst versionPattern = `(?:${rangePattern}(?:\\\\s*,\\\\s*${rangePattern})*)`;\nconst depNamePattern = '(?:[a-zA-Z][-_a-zA-Z0-9\\\\.]*[a-zA-Z0-9])';\nconst depPattern = [\n  '^',\n  `(?<depName>${depNamePattern})`,\n  `(?<extra>(?:\\\\[\\\\s*(?:${depNamePattern}(?:\\\\s*,\\\\s*${depNamePattern})*\\\\s*)\\\\])?)`,\n  `(?<currentValue>${versionPattern})`,\n].join('\\\\s*');\n\nconst extractRegex = regEx(depPattern);\n\n// Extract dependency string\nfunction depStringHandler(\n  ctx: Context,\n  token: lexer.StringValueToken,\n): Context {\n  const depStr = token.value;\n  const match = extractRegex.exec(depStr);\n  // TODO #22198\n  const { depName, currentValue } = match!.groups!;\n\n  const dep: PackageDependency<ManagerData> = {\n    depName,\n    packageName: normalizePythonDepName(depName),\n    currentValue,\n    managerData: {\n      lineNumber: token.line - 1,\n    },\n    datasource: PypiDatasource.id,\n  };\n\n  if (currentValue?.startsWith('==')) {\n    dep.currentVersion = currentValue.replace(regEx(/^==\\s*/), '');\n  }\n\n  return { ...ctx, deps: [...ctx.deps, dep] };\n}\n\n// Add `skip-reason` for dependencies annotated\n// with \"# renovate: ignore\" comment\nfunction depSkipHandler(ctx: Context): Context {\n  const dep = ctx.deps[ctx.deps.length - 1];\n  const deps = ctx.deps.slice(0, -1);\n  deps.push({ ...dep, skipReason: 'ignored' });\n  return { ...ctx, deps };\n}\n\nconst incompleteDepString = q\n  .str<Context>(new RegExp(cleanupNamedGroups(depPattern)))\n  .op(/^\\+|\\*$/);\n\nconst depString = q\n  .str<Context>(new RegExp(cleanupNamedGroups(depPattern)), depStringHandler)\n  .opt(\n    q\n      .opt(q.op<Context>(','))\n      .comment(/^#\\s*renovate\\s*:\\s*ignore\\s*$/, depSkipHandler),\n  );\n\nconst query = q.alt(incompleteDepString, depString);\n\nexport function extractPackageFile(\n  content: string,\n  _packageFile: string,\n  _config: ExtractConfig,\n): PackageFileContent | null {\n  const res = python.query<Context, parser.Node>(content, query, { deps: [] });\n  return res?.deps?.length ? res : null;\n}\n"]}