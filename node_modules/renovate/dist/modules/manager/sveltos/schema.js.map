{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../lib/modules/manager/sveltos/schema.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AACxB,6DAAwD;AACxD,2CAAoD;AAEvC,QAAA,iBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC;IACxC,aAAa,EAAE,OAAC,CAAC,MAAM,EAAE;IACzB,cAAc,EAAE,OAAC,CAAC,MAAM,EAAE;IAC1B,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE;IACrB,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE;CACzB,CAAC,CAAC;AAIU,QAAA,eAAe,GAAG,OAAC,CAAC,MAAM,CAAC;IACtC,UAAU,EAAE,IAAA,yBAAU,EAAC,yBAAiB,CAAC,CAAC,QAAQ,EAAE;CACrD,CAAC,CAAC;AAGU,QAAA,cAAc,GAAG,2BAAkB,CAAC,MAAM,CAAC;IACtD,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,2BAA2B,CAAC;IAC9D,IAAI,EAAE,OAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC;IACjC,IAAI,EAAE,uBAAe;CACtB,CAAC,CAAC;AAEU,QAAA,OAAO,GAAG,2BAAkB,CAAC,MAAM,CAAC;IAC/C,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,2BAA2B,CAAC;IAC9D,IAAI,EAAE,OAAC,CAAC,OAAO,CAAC,SAAS,CAAC;IAC1B,IAAI,EAAE,uBAAe;CACtB,CAAC,CAAC;AAEU,QAAA,YAAY,GAAG,2BAAkB,CAAC,MAAM,CAAC;IACpD,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,wBAAwB,CAAC;IAC3D,IAAI,EAAE,OAAC,CAAC,OAAO,CAAC,cAAc,CAAC;IAC/B,IAAI,EAAE,uBAAe;CACtB,CAAC,CAAC;AAEH,8CAA8C;AACjC,QAAA,iBAAiB,GAAG,OAAC,CAAC,KAAK,CAAC;IACvC,eAAO;IACP,sBAAc;IACd,oBAAY;CACb,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\nimport { LooseArray } from '../../../util/schema-utils';\nimport { KubernetesResource } from '../flux/schema';\n\nexport const SveltosHelmSource = z.object({\n  repositoryURL: z.string(),\n  repositoryName: z.string(),\n  chartName: z.string(),\n  chartVersion: z.string(),\n});\n\nexport type SveltosHelmSource = z.infer<typeof SveltosHelmSource>;\n\nexport const SveltosHelmSpec = z.object({\n  helmCharts: LooseArray(SveltosHelmSource).optional(),\n});\nexport type SveltosHelmSpec = z.infer<typeof SveltosHelmSpec>;\n\nexport const ClusterProfile = KubernetesResource.extend({\n  apiVersion: z.string().startsWith('config.projectsveltos.io/'),\n  kind: z.literal('ClusterProfile'),\n  spec: SveltosHelmSpec,\n});\n\nexport const Profile = KubernetesResource.extend({\n  apiVersion: z.string().startsWith('config.projectsveltos.io/'),\n  kind: z.literal('Profile'),\n  spec: SveltosHelmSpec,\n});\n\nexport const EventTrigger = KubernetesResource.extend({\n  apiVersion: z.string().startsWith('lib.projectsveltos.io/'),\n  kind: z.literal('EventTrigger'),\n  spec: SveltosHelmSpec,\n});\n\n// Create a union schema for ProfileDefinition\nexport const ProfileDefinition = z.union([\n  Profile,\n  ClusterProfile,\n  EventTrigger,\n]);\nexport type ProfileDefinition = z.infer<typeof ProfileDefinition>;\n"]}