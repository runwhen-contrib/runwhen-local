{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/bicep/extract.ts"],"names":[],"mappings":";;AAYA,gDAgCC;AA5CD,+CAA0D;AAC1D,gFAAqF;AAOrF,MAAM,cAAc,GAAG,IAAA,aAAK,EAC1B,4FAA4F,CAC7F,CAAC;AAEF,SAAgB,kBAAkB,CAChC,OAAe,EACf,YAAoB,EACpB,OAAsB;IAEtB,MAAM,IAAI,GAAwB,EAAE,CAAC;IAErC,KAAK,MAAM,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,oBAAY,CAAC,EAAE,CAAC;QAC/C,MAAM,WAAW,GAAG,IAAI,EAAE,IAAI,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;YACjD,SAAS;QACX,CAAC;QAED,MAAM,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE/C,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC;YACnB,SAAS;QACX,CAAC;QAED,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;QAE9D,IAAI,CAAC,IAAI,CAAC;YACR,UAAU,EAAE,mDAA4B,CAAC,EAAE;YAC3C,UAAU,EAAE,gBAAgB;YAC5B,OAAO;YACP,YAAY;YACZ,yBAAyB,EAAE,4BAA4B;YACvD,aAAa;SACd,CAAC,CAAC;IACL,CAAC;IAED,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACxD,CAAC","sourcesContent":["import { newlineRegex, regEx } from '../../../util/regex';\nimport { AzureBicepResourceDatasource } from '../../datasource/azure-bicep-resource';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFileContent,\n} from '../types';\n\nconst RESOURCE_REGEX = regEx(\n  /resource\\s+[A-Za-z0-9_]+\\s+(?<replaceString>'(?<depName>.+\\..+\\/.+)@(?<currentValue>.+?)')/,\n);\n\nexport function extractPackageFile(\n  content: string,\n  _packageFile: string,\n  _config: ExtractConfig,\n): Promise<PackageFileContent | null> {\n  const deps: PackageDependency[] = [];\n\n  for (const line of content.split(newlineRegex)) {\n    const trimmedLine = line?.trim();\n    if (!trimmedLine || trimmedLine.startsWith('//')) {\n      continue;\n    }\n\n    const match = RESOURCE_REGEX.exec(trimmedLine);\n\n    if (!match?.groups) {\n      continue;\n    }\n\n    const { depName, currentValue, replaceString } = match.groups;\n\n    deps.push({\n      datasource: AzureBicepResourceDatasource.id,\n      versioning: 'azure-rest-api',\n      depName,\n      currentValue,\n      autoReplaceStringTemplate: \"'{{depName}}@{{newValue}}'\",\n      replaceString,\n    });\n  }\n\n  return Promise.resolve(deps.length ? { deps } : null);\n}\n"]}