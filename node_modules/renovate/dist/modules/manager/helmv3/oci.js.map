{"version":3,"file":"oci.js","sourceRoot":"","sources":["../../../../lib/modules/manager/helmv3/oci.ts"],"names":[],"mappings":";;AAGA,sCAQC;AAED,0CAKC;;AAlBD,kEAAkC;AAGlC,SAAgB,aAAa,CAC3B,UAAkD;IAElD,IAAI,YAAE,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC;QACnC,OAAO,KAAK,CAAC;IACf,CAAC;IACD,MAAM,IAAI,GAAG,YAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC;IACxE,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACnC,CAAC;AAED,SAAgB,eAAe,CAAC,UAAkB;IAChD,IAAI,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC;QAC9B,OAAO,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { Repository } from './types';\n\nexport function isOCIRegistry(\n  repository: Repository | string | null | undefined,\n): boolean {\n  if (is.nullOrUndefined(repository)) {\n    return false;\n  }\n  const repo = is.string(repository) ? repository : repository.repository;\n  return repo.startsWith('oci://');\n}\n\nexport function removeOCIPrefix(repository: string): string {\n  if (isOCIRegistry(repository)) {\n    return repository.replace('oci://', '');\n  }\n  return repository;\n}\n"]}