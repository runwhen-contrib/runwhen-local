{"version":3,"file":"update.js","sourceRoot":"","sources":["../../../../lib/modules/manager/git-submodules/update.ts"],"names":[],"mappings":";;AAQA,mCAuCC;;AA/CD,oEAA6B;AAC7B,0DAA0B;AAC1B,mDAAsD;AACtD,4CAAyC;AACzC,yCAAiD;AACjD,iDAAoE;AAGrD,KAAK,UAAU,gBAAgB,CAAC,EAC7C,WAAW,EACX,OAAO,GACgB;IACvB,MAAM,QAAQ,GAAG,qBAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC9C,MAAM,oCAAoC,GAAG,IAAA,iCAA0B,EAAC;QACtE,UAAU;QACV,UAAU;KACX,CAAC,CAAC;IACH,MAAM,MAAM,GAAG;QACb,kCAAkC;QAClC,GAAG,OAAO,CAAC,GAAG;QACd,8BAA8B;QAC9B,GAAG,oCAAoC;KACxC,CAAC;IACF,MAAM,GAAG,GAAG,IAAA,oBAAG,EAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtC,MAAM,YAAY,GAAG,IAAA,oBAAG,EAAC,eAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAEhE,IAAI,CAAC;QACH,MAAM,GAAG,CAAC,eAAe,CAAC,CAAC,YAAY,EAAE,QAAQ,EAAE,OAAO,CAAC,OAAQ,CAAC,CAAC,CAAC;QACtE,MAAM,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,SAAU,CAAC,CAAC,CAAC;QAClD,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,YAAY,KAAK,OAAO,CAAC,QAAQ,EAAE,CAAC;YAClE,MAAM,GAAG,CAAC,SAAS,CAAC;gBAClB,YAAY;gBACZ,UAAU;gBACV,OAAO,CAAC,QAAQ;gBAChB,OAAO,CAAC,OAAQ;aACjB,CAAC,CAAC;YACH,MAAM,qBAAqB,GAAG,MAAM,IAAA,kBAAa,EAC/C,OAAO,CAAC,WAAY,EACpB,MAAM,CACP,CAAC;YACF,OAAO,qBAAsB,CAAC;QAChC,CAAC;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,0BAA0B,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC","sourcesContent":["import Git from 'simple-git';\nimport upath from 'upath';\nimport { GlobalConfig } from '../../../config/global';\nimport { logger } from '../../../logger';\nimport { readLocalFile } from '../../../util/fs';\nimport { getGitEnvironmentVariables } from '../../../util/git/auth';\nimport type { UpdateDependencyConfig } from '../types';\n\nexport default async function updateDependency({\n  fileContent,\n  upgrade,\n}: UpdateDependencyConfig): Promise<string | null> {\n  const localDir = GlobalConfig.get('localDir');\n  const gitSubmoduleAuthEnvironmentVariables = getGitEnvironmentVariables([\n    'git-tags',\n    'git-refs',\n  ]);\n  const gitEnv = {\n    // pass all existing env variables\n    ...process.env,\n    // add all known git Variables\n    ...gitSubmoduleAuthEnvironmentVariables,\n  };\n  const git = Git(localDir).env(gitEnv);\n  const submoduleGit = Git(upath.join(localDir, upgrade.depName));\n\n  try {\n    await git.submoduleUpdate(['--checkout', '--init', upgrade.depName!]);\n    await submoduleGit.checkout([upgrade.newDigest!]);\n    if (upgrade.newValue && upgrade.currentValue !== upgrade.newValue) {\n      await git.subModule([\n        'set-branch',\n        '--branch',\n        upgrade.newValue,\n        upgrade.depName!,\n      ]);\n      const updatedPackageContent = await readLocalFile(\n        upgrade.packageFile!,\n        'utf8',\n      );\n      return updatedPackageContent!;\n    }\n    return fileContent;\n  } catch (err) {\n    logger.debug({ err }, 'submodule checkout error');\n    return null;\n  }\n}\n"]}