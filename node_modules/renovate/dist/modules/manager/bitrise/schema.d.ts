import { z } from 'zod';
export declare const BitriseFile: z.ZodPipeline<z.ZodEffects<z.ZodString, string | number | boolean | import("type-fest").JsonObject | import("type-fest").JsonValue[] | readonly import("type-fest").JsonValue[] | null, string>, z.ZodEffects<z.ZodObject<{
    default_step_lib_source: z.ZodOptional<z.ZodString>;
    workflows: z.ZodEffects<z.ZodRecord<z.ZodString, z.ZodEffects<z.ZodObject<{
        steps: z.ZodEffects<z.ZodArray<z.ZodEffects<z.ZodRecord<z.ZodString, z.ZodUnknown>, string[], Record<string, unknown>>, "many">, string[], Record<string, unknown>[]>;
    }, "strip", z.ZodTypeAny, {
        steps: string[];
    }, {
        steps: Record<string, unknown>[];
    }>, string[], {
        steps: Record<string, unknown>[];
    }>>, string[], Record<string, {
        steps: Record<string, unknown>[];
    }>>;
}, "strip", z.ZodTypeAny, {
    workflows: string[];
    default_step_lib_source?: string | undefined;
}, {
    workflows: Record<string, {
        steps: Record<string, unknown>[];
    }>;
    default_step_lib_source?: string | undefined;
}>, import("../types").PackageDependency<Record<string, any>>[], {
    workflows: Record<string, {
        steps: Record<string, unknown>[];
    }>;
    default_step_lib_source?: string | undefined;
}>>;
