{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/mix/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport { TEMPORARY_ERROR } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { exec } from '../../../util/exec';\nimport type { ExecOptions } from '../../../util/exec/types';\nimport {\n  deleteLocalFile,\n  findLocalSiblingOrParent,\n  getSiblingFileName,\n  localPathExists,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../util/fs';\nimport * as hostRules from '../../../util/host-rules';\nimport { regEx } from '../../../util/regex';\n\nimport type { UpdateArtifact, UpdateArtifactsResult } from '../types';\n\nconst hexRepoUrl = 'https://hex.pm/';\nconst hexRepoOrgUrlRegex = regEx(\n  `^https://hex\\\\.pm/api/repos/(?<organization>[a-z0-9_]+)/$`,\n);\n\nexport async function updateArtifacts({\n  packageFileName,\n  updatedDeps,\n  newPackageFileContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  logger.debug(`mix.getArtifacts(${packageFileName})`);\n  const { isLockFileMaintenance } = config;\n\n  if (is.emptyArray(updatedDeps) && !isLockFileMaintenance) {\n    logger.debug('No updated mix deps');\n    return null;\n  }\n\n  let lockFileName = getSiblingFileName(packageFileName, 'mix.lock');\n  let isUmbrella = false;\n\n  let existingLockFileContent = await readLocalFile(lockFileName, 'utf8');\n  if (!existingLockFileContent) {\n    const lockFileError = await checkLockFileReadError(lockFileName);\n    if (lockFileError) {\n      return lockFileError;\n    }\n\n    const parentLockFileName = await findLocalSiblingOrParent(\n      packageFileName,\n      'mix.lock',\n    );\n    existingLockFileContent =\n      parentLockFileName && (await readLocalFile(parentLockFileName, 'utf8'));\n\n    if (parentLockFileName && existingLockFileContent) {\n      lockFileName = parentLockFileName;\n      isUmbrella = true;\n    } else if (parentLockFileName) {\n      const lockFileError = await checkLockFileReadError(parentLockFileName);\n      if (lockFileError) {\n        return lockFileError;\n      }\n    }\n  }\n\n  if (isLockFileMaintenance && isUmbrella) {\n    logger.debug(\n      'Cannot use lockFileMaintenance in an umbrella project, see https://docs.renovatebot.com/modules/manager/mix/#lockFileMaintenance',\n    );\n    return null;\n  }\n\n  if (isLockFileMaintenance && !existingLockFileContent) {\n    logger.debug(\n      'Cannot use lockFileMaintenance when no mix.lock file is present',\n    );\n    return null;\n  }\n\n  try {\n    await writeLocalFile(packageFileName, newPackageFileContent);\n    if (isLockFileMaintenance) {\n      await deleteLocalFile(lockFileName);\n    }\n  } catch (err) {\n    logger.warn({ err }, 'mix.exs could not be written');\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n\n  if (!existingLockFileContent) {\n    logger.debug('No mix.lock found');\n    return null;\n  }\n\n  const organizations = new Set<string>();\n\n  const hexHostRulesWithMatchHost = hostRules\n    .getAll()\n    .filter(\n      (hostRule) =>\n        !!hostRule.matchHost && hexRepoOrgUrlRegex.test(hostRule.matchHost),\n    );\n\n  for (const { matchHost } of hexHostRulesWithMatchHost) {\n    if (matchHost) {\n      const result = hexRepoOrgUrlRegex.exec(matchHost);\n\n      if (result?.groups) {\n        const { organization } = result.groups;\n        organizations.add(organization);\n      }\n    }\n  }\n\n  for (const { packageName } of updatedDeps) {\n    if (packageName) {\n      const [, organization] = packageName.split(':');\n\n      if (organization) {\n        organizations.add(organization);\n      }\n    }\n  }\n\n  const preCommands = Array.from(organizations).reduce((acc, organization) => {\n    const url = `${hexRepoUrl}api/repos/${organization}/`;\n    const { token } = hostRules.find({ url });\n\n    if (token) {\n      logger.debug(`Authenticating to hex organization ${organization}`);\n      const authCommand = `mix hex.organization auth ${organization} --key ${token}`;\n      return [...acc, authCommand];\n    }\n\n    return acc;\n  }, [] as string[]);\n\n  const execOptions: ExecOptions = {\n    cwdFile: packageFileName,\n    docker: {},\n    toolConstraints: [\n      {\n        toolName: 'erlang',\n        // https://hexdocs.pm/elixir/1.14.5/compatibility-and-deprecations.html#compatibility-between-elixir-and-erlang-otp\n        constraint: config.constraints?.erlang ?? '^26',\n      },\n      {\n        toolName: 'elixir',\n        constraint: config.constraints?.elixir,\n      },\n    ],\n    preCommands,\n  };\n\n  let command: string;\n  if (isLockFileMaintenance) {\n    command = 'mix deps.get';\n  } else {\n    command = [\n      'mix',\n      'deps.update',\n      ...updatedDeps\n        .map((dep) => dep.depName)\n        .filter(is.string)\n        .map((dep) => quote(dep)),\n    ].join(' ');\n  }\n\n  try {\n    await exec(command, execOptions);\n  } catch (err) {\n    /* v8 ignore next 3 */\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n\n    logger.debug(\n      { err, message: err.message, command },\n      'Failed to update Mix lock file',\n    );\n\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n\n  const newMixLockContent = await readLocalFile(lockFileName, 'utf8');\n  if (existingLockFileContent === newMixLockContent) {\n    logger.debug('mix.lock is unchanged');\n    return null;\n  }\n  logger.debug('Returning updated mix.lock');\n  return [\n    {\n      file: {\n        type: 'addition',\n        path: lockFileName,\n        contents: newMixLockContent,\n      },\n    },\n  ];\n}\n\nasync function checkLockFileReadError(\n  lockFileName: string,\n): Promise<UpdateArtifactsResult[] | null> {\n  if (await localPathExists(lockFileName)) {\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: `Error reading ${lockFileName}`,\n        },\n      },\n    ];\n  }\n  return null;\n}\n"]}