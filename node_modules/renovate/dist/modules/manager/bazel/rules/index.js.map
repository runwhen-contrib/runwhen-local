{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/bazel/rules/index.ts"],"names":[],"mappings":";;;AAkCA,kEAQC;AAED,0DAKC;AAED,0BAeC;AAlED,6BAAwB;AACxB,kDAA+C;AAG/C,qCAAqD;AACrD,+BAA4C;AAC5C,6BAAyC;AACzC,iCAA+C;AAC/C,mCAAkD;AAClD,+BAA4C;AAE5C,MAAM,MAAM,GAAG,OAAC,CAAC,KAAK,CAAC;IACrB,qBAAY;IACZ,eAAS;IACT,eAAS;IACT,aAAQ;IACR,iBAAU;IACV,mBAAW;CACZ,CAAC,CAAC;AAEH;;;GAGG;AACH,MAAM,cAAc,GAAG;IACrB,GAAG,oBAAW;IACd,GAAG,cAAQ;IACX,GAAG,cAAQ;IACX,GAAG,YAAO;IACV,GAAG,gBAAS;IACZ,GAAG,kBAAU;CACd,CAAC;AACW,QAAA,mBAAmB,GAAG,IAAA,aAAK,EAAC,OAAO,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAE9E,SAAgB,2BAA2B,CACzC,YAA0B;IAE1B,MAAM,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACjB,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,OAAO,GAAG,CAAC,IAAI,CAAC;AAClB,CAAC;AAED,SAAgB,uBAAuB,CACrC,QAAkB;IAElB,MAAM,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;IACvC,OAAO,2BAA2B,CAAC,YAAY,CAAC,CAAC;AACnD,CAAC;AAED,SAAgB,OAAO,CAAC,QAAkB;IACxC,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC/B,OAAO,QAAQ,CAAC,KAAK,CAAC;IACxB,CAAC;IAED,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC/B,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC;QAC9B,MAAM,MAAM,GAAiC,EAAE,CAAC;QAChD,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;YACpD,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,OAAO,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC","sourcesContent":["import { z } from 'zod';\nimport { regEx } from '../../../../util/regex';\nimport type { PackageDependency } from '../../types';\nimport type { Fragment, FragmentData, Target } from '../types';\nimport { DockerTarget, dockerRules } from './docker';\nimport { GitTarget, gitRules } from './git';\nimport { GoTarget, goRules } from './go';\nimport { HttpTarget, httpRules } from './http';\nimport { MavenTarget, mavenRules } from './maven';\nimport { OciTarget, ociRules } from './oci';\n\nconst Target = z.union([\n  DockerTarget,\n  OciTarget,\n  GitTarget,\n  GoTarget,\n  HttpTarget,\n  MavenTarget,\n]);\n\n/**\n * Gather all rule names supported by Renovate in order to speed up parsing\n * by filtering out other syntactically correct rules we don't support yet.\n */\nconst supportedRules = [\n  ...dockerRules,\n  ...ociRules,\n  ...gitRules,\n  ...goRules,\n  ...httpRules,\n  ...mavenRules,\n];\nexport const supportedRulesRegex = regEx(`^(?:${supportedRules.join('|')})$`);\n\nexport function extractDepsFromFragmentData(\n  fragmentData: FragmentData,\n): PackageDependency[] {\n  const res = Target.safeParse(fragmentData);\n  if (!res.success) {\n    return [];\n  }\n  return res.data;\n}\n\nexport function extractDepsFromFragment(\n  fragment: Fragment,\n): PackageDependency[] {\n  const fragmentData = extract(fragment);\n  return extractDepsFromFragmentData(fragmentData);\n}\n\nexport function extract(fragment: Fragment): FragmentData {\n  if (fragment.type === 'string') {\n    return fragment.value;\n  }\n\n  if (fragment.type === 'record') {\n    const { children } = fragment;\n    const result: Record<string, FragmentData> = {};\n    for (const [key, value] of Object.entries(children)) {\n      result[key] = extract(value);\n    }\n    return result;\n  }\n\n  return fragment.children.map(extract);\n}\n"]}