{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/tekton/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { logger } from '../../../logger';\nimport { coerceArray } from '../../../util/array';\nimport { regEx } from '../../../util/regex';\nimport { parseYaml } from '../../../util/yaml';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport { GithubReleasesDatasource } from '../../datasource/github-releases';\nimport { getDep } from '../dockerfile/extract';\nimport type { PackageDependency, PackageFileContent } from '../types';\nimport type {\n  TektonBundle,\n  TektonResolverParamsField,\n  TektonResource,\n  TektonResourceSpec,\n} from './types';\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string,\n): PackageFileContent | null {\n  logger.trace(`tekton.extractPackageFile(${packageFile})`);\n  const deps: PackageDependency[] = [];\n  let docs: TektonResource[];\n  try {\n    // TODO: use schema (#9610)\n    docs = parseYaml(content);\n  } catch (err) {\n    logger.debug(\n      { err, packageFile },\n      'Failed to parse YAML resource as a Tekton resource',\n    );\n    return null;\n  }\n  for (const doc of docs) {\n    deps.push(...getDeps(doc));\n  }\n  if (!deps.length) {\n    return null;\n  }\n  return { deps };\n}\n\nfunction getDeps(doc: TektonResource): PackageDependency[] {\n  const deps: PackageDependency[] = [];\n  if (is.falsy(doc)) {\n    return deps;\n  }\n\n  // Handle TaskRun resource\n  addDep(doc.spec?.taskRef, deps);\n  addStepImageSpec(doc.spec?.taskSpec, deps);\n\n  // Handle Task resource\n  addStepImageSpec(doc.spec, deps);\n\n  // Handle PipelineRun resource\n  addDep(doc.spec?.pipelineRef, deps);\n\n  addPipelineAsCodeAnnotations(doc.metadata?.annotations, deps);\n\n  // Handle PipelineRun resource with inline Pipeline definition\n  const pipelineSpec = doc.spec?.pipelineSpec;\n  if (is.truthy(pipelineSpec)) {\n    deps.push(...getDeps({ spec: pipelineSpec }));\n  }\n\n  // Handle regular tasks of Pipeline resource\n  for (const task of [\n    ...coerceArray(doc.spec?.tasks),\n    ...coerceArray(doc.spec?.finally),\n  ]) {\n    addDep(task.taskRef, deps);\n    addStepImageSpec(task.taskSpec, deps);\n  }\n\n  // Handle TriggerTemplate resource\n  for (const resource of coerceArray(doc.spec?.resourcetemplates)) {\n    deps.push(...getDeps(resource));\n  }\n\n  // Handle list of TektonResources\n  for (const item of coerceArray(doc.items)) {\n    deps.push(...getDeps(item));\n  }\n\n  return deps;\n}\n\nconst annotationRegex = regEx(\n  /^pipelinesascode\\.tekton\\.dev\\/(?:task(-[0-9]+)?|pipeline)$/,\n);\n\nfunction addPipelineAsCodeAnnotations(\n  annotations: Record<string, string> | undefined | null,\n  deps: PackageDependency[],\n): void {\n  if (is.nullOrUndefined(annotations)) {\n    return;\n  }\n\n  for (const [key, value] of Object.entries(annotations)) {\n    if (!annotationRegex.test(key)) {\n      continue;\n    }\n\n    const values = value\n      .replace(regEx(/]$/), '')\n      .replace(regEx(/^\\[/), '')\n      .split(',');\n    for (const value of values) {\n      const dep = getAnnotationDep(value.trim());\n      if (!dep) {\n        continue;\n      }\n      deps.push(dep);\n    }\n  }\n}\n\nconst githubRelease = regEx(\n  /^(?<url>(?:(?:http|https):\\/\\/)?(?<path>(?:[^:/\\s]+[:/])?(?<project>[^/\\s]+\\/[^/\\s]+)))\\/releases\\/download\\/(?<currentValue>.+)\\/(?<subdir>[^?\\s]*)$/,\n);\n\nconst gitUrl = regEx(\n  /^(?<url>(?:(?:http|https):\\/\\/)?(?<path>(?:[^:/\\s]+[:/])?(?<project>[^/\\s]+\\/[^/\\s]+)))(?:\\/raw)?\\/(?<currentValue>.+?)\\/(?<subdir>[^?\\s]*)$/,\n);\n\nfunction getAnnotationDep(url: string): PackageDependency | null {\n  const dep: PackageDependency = {};\n  dep.depType = 'tekton-annotation';\n\n  let groups = githubRelease.exec(url)?.groups;\n\n  if (groups) {\n    dep.datasource = GithubReleasesDatasource.id;\n\n    dep.depName = groups.path;\n    dep.packageName = groups.project;\n    dep.currentValue = groups.currentValue;\n    return dep;\n  }\n\n  groups = gitUrl.exec(url)?.groups;\n  if (groups) {\n    dep.datasource = GitTagsDatasource.id;\n\n    dep.depName = groups.path.replace(\n      'raw.githubusercontent.com',\n      'github.com',\n    );\n    dep.packageName = groups.url.replace(\n      'raw.githubusercontent.com',\n      'github.com',\n    );\n    dep.currentValue = groups.currentValue;\n    return dep;\n  }\n\n  return null;\n}\n\nfunction addDep(ref: TektonBundle, deps: PackageDependency[]): void {\n  if (is.falsy(ref)) {\n    return;\n  }\n  let imageRef: string | undefined;\n\n  // First, find a bundle reference from the Bundle resolver\n  if (ref.resolver === 'bundles') {\n    imageRef = getBundleValue(ref.params);\n    if (is.nullOrUndefined(imageRef)) {\n      // Fallback to the deprecated Bundle resolver attribute\n      imageRef = getBundleValue(ref.resource);\n    }\n  }\n\n  if (is.nullOrUndefined(imageRef)) {\n    // Fallback to older style bundle reference\n    imageRef = ref.bundle;\n  }\n\n  const dep = getDep(imageRef);\n  dep.depType = 'tekton-bundle';\n  logger.trace(\n    {\n      depName: dep.depName,\n      currentValue: dep.currentValue,\n      currentDigest: dep.currentDigest,\n    },\n    'Tekton bundle dependency found',\n  );\n  deps.push(dep);\n}\n\nfunction addStepImageSpec(\n  spec: TektonResourceSpec | undefined,\n  deps: PackageDependency[],\n): void {\n  if (is.nullOrUndefined(spec)) {\n    return;\n  }\n\n  const steps = [\n    ...coerceArray(spec.steps),\n    ...coerceArray(spec.sidecars),\n    spec.stepTemplate,\n  ];\n  for (const step of steps) {\n    if (is.nullOrUndefined(step?.image)) {\n      continue;\n    }\n    const dep = getDep(step?.image);\n    dep.depType = 'tekton-step-image';\n    logger.trace(\n      {\n        depName: dep.depName,\n        currentValue: dep.currentValue,\n        currentDigest: dep.currentDigest,\n      },\n      'Tekton step image dependency found',\n    );\n    deps.push(dep);\n  }\n}\n\nfunction getBundleValue(\n  fields: TektonResolverParamsField[] | undefined,\n): string | undefined {\n  for (const field of coerceArray(fields)) {\n    if (field.name === 'bundle') {\n      return field.value;\n    }\n  }\n  return undefined;\n}\n"]}