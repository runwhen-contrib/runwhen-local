{"version":3,"file":"upgradeable-tooling.js","sourceRoot":"","sources":["../../../../lib/modules/manager/mise/upgradeable-tooling.ts"],"names":[],"mappings":"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","sourcesContent":["import { GithubReleasesDatasource } from '../../datasource/github-releases';\nimport { GithubTagsDatasource } from '../../datasource/github-tags';\nimport { HexpmBobDatasource } from '../../datasource/hexpm-bob';\nimport { JavaVersionDatasource } from '../../datasource/java-version';\nimport { NodeVersionDatasource } from '../../datasource/node-version';\nimport { RubyVersionDatasource } from '../../datasource/ruby-version';\nimport * as regexVersioning from '../../versioning/regex';\nimport * as semverVersioning from '../../versioning/semver';\nimport type { ToolingConfig } from '../asdf/upgradeable-tooling';\nimport { upgradeableTooling } from '../asdf/upgradeable-tooling';\n\nexport interface ToolingDefinition {\n  config: ToolingConfig;\n  misePluginUrl?: string;\n}\n\nexport const asdfTooling = upgradeableTooling;\n\nexport const miseTooling: Record<string, ToolingDefinition> = {\n  bun: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/bun.html',\n    config: {\n      packageName: 'oven-sh/bun',\n      datasource: GithubReleasesDatasource.id,\n      extractVersion: '^bun-v(?<version>\\\\S+)',\n    },\n  },\n  deno: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/deno.html',\n    config: {\n      packageName: 'denoland/deno',\n      datasource: GithubReleasesDatasource.id,\n      extractVersion: '^v(?<version>\\\\S+)',\n    },\n  },\n  elixir: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/elixir.html',\n    config: {\n      datasource: HexpmBobDatasource.id,\n    },\n  },\n  erlang: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/erlang.html',\n    config: {\n      packageName: 'erlang/otp',\n      datasource: GithubTagsDatasource.id,\n      extractVersion: '^OTP-(?<version>\\\\S+)',\n      versioning: `${regexVersioning.id}:^(?<major>\\\\d+?)\\\\.(?<minor>\\\\d+?)(\\\\.(?<patch>\\\\d+))?$`,\n    },\n  },\n  go: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/go.html',\n    config: {\n      packageName: 'golang/go',\n      datasource: GithubTagsDatasource.id,\n      extractVersion: '^go(?<version>\\\\S+)',\n    },\n  },\n  java: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/java.html',\n    config: (version) => {\n      // no prefix is shorthand for openjdk\n      const versionMatch = /^(\\d\\S+)/.exec(version)?.[1];\n      if (versionMatch) {\n        return {\n          datasource: JavaVersionDatasource.id,\n          packageName: 'java-jdk',\n          currentValue: versionMatch,\n        };\n      }\n      const openJdkMatches = /^openjdk-(?<version>\\d\\S+)/.exec(version)?.groups;\n      if (openJdkMatches) {\n        return {\n          datasource: JavaVersionDatasource.id,\n          packageName: 'java-jdk',\n          currentValue: openJdkMatches.version,\n        };\n      }\n      const adoptOpenJdkMatches = /^adoptopenjdk-(?<version>\\d\\S+)/.exec(\n        version,\n      )?.groups;\n      if (adoptOpenJdkMatches) {\n        return {\n          datasource: JavaVersionDatasource.id,\n          packageName: 'java-jdk',\n          currentValue: adoptOpenJdkMatches.version,\n        };\n      }\n      const temurinJdkMatches = /^temurin-(?<version>\\d\\S+)/.exec(\n        version,\n      )?.groups;\n      if (temurinJdkMatches) {\n        return {\n          datasource: JavaVersionDatasource.id,\n          packageName: 'java-jdk',\n          currentValue: temurinJdkMatches.version,\n        };\n      }\n      const correttoJdkMatches = /^corretto-(?<version>\\d\\S+)/.exec(\n        version,\n      )?.groups;\n      if (correttoJdkMatches) {\n        return {\n          datasource: JavaVersionDatasource.id,\n          packageName: 'java-jdk',\n          currentValue: correttoJdkMatches.version,\n        };\n      }\n      const zuluJdkMatches = /^zulu-(?<version>\\d\\S+)/.exec(version)?.groups;\n      if (zuluJdkMatches) {\n        return {\n          datasource: JavaVersionDatasource.id,\n          packageName: 'java-jdk',\n          currentValue: zuluJdkMatches.version,\n        };\n      }\n      const oracleGraalvmJdkMatches = /^oracle-graalvm-(?<version>\\d\\S+)/.exec(\n        version,\n      )?.groups;\n      if (oracleGraalvmJdkMatches) {\n        return {\n          datasource: JavaVersionDatasource.id,\n          packageName: 'java-jdk',\n          currentValue: oracleGraalvmJdkMatches.version,\n        };\n      }\n\n      return undefined;\n    },\n  },\n  node: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/node.html',\n    config: {\n      packageName: 'nodejs',\n      datasource: NodeVersionDatasource.id,\n    },\n  },\n  python: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/python.html',\n    config: {\n      packageName: 'python/cpython',\n      datasource: GithubTagsDatasource.id,\n      extractVersion: '^v(?<version>\\\\S+)',\n    },\n  },\n  ruby: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/ruby.html',\n    config: {\n      packageName: 'ruby-version',\n      datasource: RubyVersionDatasource.id,\n      versioning: semverVersioning.id,\n    },\n  },\n  rust: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/rust.html',\n    config: {\n      packageName: 'rust-lang/rust',\n      datasource: GithubTagsDatasource.id,\n    },\n  },\n  swift: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/swift.html',\n    config: {\n      packageName: 'swift-lang/swift',\n      datasource: GithubReleasesDatasource.id,\n      extractVersion: '^swift-(?<version>\\\\S+)',\n    },\n  },\n  zig: {\n    misePluginUrl: 'https://mise.jdx.dev/lang/zig.html',\n    config: {\n      packageName: 'ziglang/zig',\n      datasource: GithubTagsDatasource.id,\n    },\n  },\n};\n"]}