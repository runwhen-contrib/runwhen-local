import { z } from 'zod';
declare const MiseToolSchema: z.ZodUnion<[z.ZodString, z.ZodObject<{
    version: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    version?: string | undefined;
}, {
    version?: string | undefined;
}>, z.ZodArray<z.ZodString, "many">]>;
export type MiseToolSchema = z.infer<typeof MiseToolSchema>;
export declare const MiseFileSchema: z.ZodObject<{
    tools: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodObject<{
        version: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        version?: string | undefined;
    }, {
        version?: string | undefined;
    }>, z.ZodArray<z.ZodString, "many">]>>;
}, "strip", z.ZodTypeAny, {
    tools: Record<string, string | string[] | {
        version?: string | undefined;
    }>;
}, {
    tools: Record<string, string | string[] | {
        version?: string | undefined;
    }>;
}>;
export type MiseFileSchema = z.infer<typeof MiseFileSchema>;
export declare const MiseFileSchemaToml: z.ZodPipeline<z.ZodEffects<z.ZodString, unknown, string>, z.ZodObject<{
    tools: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodObject<{
        version: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        version?: string | undefined;
    }, {
        version?: string | undefined;
    }>, z.ZodArray<z.ZodString, "many">]>>;
}, "strip", z.ZodTypeAny, {
    tools: Record<string, string | string[] | {
        version?: string | undefined;
    }>;
}, {
    tools: Record<string, string | string[] | {
        version?: string | undefined;
    }>;
}>>;
export {};
