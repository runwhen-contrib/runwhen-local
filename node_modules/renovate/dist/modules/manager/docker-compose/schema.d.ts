import { z } from 'zod';
export declare const DockerComposeFile: z.ZodUnion<[z.ZodObject<{
    version: z.ZodOptional<z.ZodString>;
    services: z.ZodRecord<z.ZodString, z.ZodObject<{
        image: z.ZodOptional<z.ZodString>;
        build: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
            context: z.ZodOptional<z.ZodString>;
            dockerfile: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            context?: string | undefined;
            dockerfile?: string | undefined;
        }, {
            context?: string | undefined;
            dockerfile?: string | undefined;
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        build?: string | {
            context?: string | undefined;
            dockerfile?: string | undefined;
        } | undefined;
        image?: string | undefined;
    }, {
        build?: string | {
            context?: string | undefined;
            dockerfile?: string | undefined;
        } | undefined;
        image?: string | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    services: Record<string, {
        build?: string | {
            context?: string | undefined;
            dockerfile?: string | undefined;
        } | undefined;
        image?: string | undefined;
    }>;
    version?: string | undefined;
}, {
    services: Record<string, {
        build?: string | {
            context?: string | undefined;
            dockerfile?: string | undefined;
        } | undefined;
        image?: string | undefined;
    }>;
    version?: string | undefined;
}>, z.ZodRecord<z.ZodString, z.ZodObject<{
    image: z.ZodOptional<z.ZodString>;
    build: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
        context: z.ZodOptional<z.ZodString>;
        dockerfile: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        context?: string | undefined;
        dockerfile?: string | undefined;
    }, {
        context?: string | undefined;
        dockerfile?: string | undefined;
    }>]>>;
}, "strip", z.ZodTypeAny, {
    build?: string | {
        context?: string | undefined;
        dockerfile?: string | undefined;
    } | undefined;
    image?: string | undefined;
}, {
    build?: string | {
        context?: string | undefined;
        dockerfile?: string | undefined;
    } | undefined;
    image?: string | undefined;
}>>]>;
export type DockerComposeFile = z.infer<typeof DockerComposeFile>;
