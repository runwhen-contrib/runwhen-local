{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/manager/gradle/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import upath from 'upath';\nimport { regEx } from '../../../util/regex';\nimport { api as gradleVersioning } from '../../versioning/gradle';\nimport type { PackageDependency } from '../types';\nimport type {\n  GradleManagerData,\n  PackageVariables,\n  VariableRegistry,\n} from './types';\n\nconst artifactRegex = regEx(\n  '^[a-zA-Z][-_a-zA-Z0-9]*(?:\\\\.[a-zA-Z0-9][-_a-zA-Z0-9]*?)*$',\n);\n\nconst versionLikeRegex = regEx('^(?<version>[-_.\\\\[\\\\](),a-zA-Z0-9+ ]+)');\n\n// Extracts version-like and range-like strings from the beginning of input\nexport function versionLikeSubstring(\n  input: string | null | undefined,\n): string | null {\n  if (!input) {\n    return null;\n  }\n\n  const match = versionLikeRegex.exec(input);\n  const version = match?.groups?.version?.trim();\n  if (!version || !regEx(/\\d/).test(version)) {\n    return null;\n  }\n\n  if (!gradleVersioning.isValid(version)) {\n    return null;\n  }\n\n  return version;\n}\n\nexport function isDependencyString(input: string): boolean {\n  const parts = input.split(':');\n  if (parts.length !== 3 && parts.length !== 4) {\n    return false;\n  }\n  const [groupId, artifactId, versionPart, optionalClassifier] = parts;\n\n  if (optionalClassifier && !artifactRegex.test(optionalClassifier)) {\n    return false;\n  }\n\n  let version = versionPart;\n  if (versionPart.includes('@')) {\n    const [actualVersion, ...rest] = versionPart.split('@');\n    if (rest.length !== 1) {\n      return false;\n    }\n    version = actualVersion;\n  }\n\n  return !!(\n    groupId &&\n    artifactId &&\n    version &&\n    artifactRegex.test(groupId) &&\n    artifactRegex.test(artifactId) &&\n    version === versionLikeSubstring(version)\n  );\n}\n\nexport function parseDependencyString(\n  input: string,\n): PackageDependency<GradleManagerData> | null {\n  if (!isDependencyString(input)) {\n    return null;\n  }\n\n  const [groupId, artifactId, fullValue] = input.split(':');\n  const [currentValue, dataType] = fullValue.split('@');\n\n  return {\n    depName: `${groupId}:${artifactId}`,\n    currentValue,\n    ...(dataType && { dataType }),\n  };\n}\n\nconst gradleVersionsFileRegex = regEx('^versions\\\\.gradle(?:\\\\.kts)?$', 'i');\nconst gradleBuildFileRegex = regEx('^build\\\\.gradle(?:\\\\.kts)?$', 'i');\n\nexport function isGradleScriptFile(path: string): boolean {\n  const filename = upath.basename(path).toLowerCase();\n  return filename.endsWith('.gradle.kts') || filename.endsWith('.gradle');\n}\n\nexport function isGradleVersionsFile(path: string): boolean {\n  const filename = upath.basename(path);\n  return gradleVersionsFileRegex.test(filename);\n}\n\nexport function isGradleBuildFile(path: string): boolean {\n  const filename = upath.basename(path);\n  return gradleBuildFileRegex.test(filename);\n}\n\nexport function isPropsFile(path: string): boolean {\n  const filename = upath.basename(path).toLowerCase();\n  return filename === 'gradle.properties';\n}\n\nexport function isKotlinSourceFile(path: string): boolean {\n  const filename = upath.basename(path).toLowerCase();\n  return filename.endsWith('.kt');\n}\n\nexport function isTOMLFile(path: string): boolean {\n  const filename = upath.basename(path).toLowerCase();\n  return filename.endsWith('.toml');\n}\n\nexport function toAbsolutePath(packageFile: string): string {\n  return upath.join(packageFile.replace(regEx(/^[/\\\\]*/), '/'));\n}\n\nfunction getFileRank(filename: string): number {\n  if (isPropsFile(filename)) {\n    return 0;\n  }\n  if (isGradleVersionsFile(filename)) {\n    return 1;\n  }\n  if (isGradleBuildFile(filename)) {\n    return 3;\n  }\n  return 2;\n}\n\nexport function reorderFiles(packageFiles: string[]): string[] {\n  return packageFiles.sort((x, y) => {\n    const xAbs = toAbsolutePath(x);\n    const yAbs = toAbsolutePath(y);\n\n    const xDir = upath.dirname(xAbs);\n    const yDir = upath.dirname(yAbs);\n\n    if (xDir === yDir) {\n      const xRank = getFileRank(xAbs);\n      const yRank = getFileRank(yAbs);\n      if (xRank === yRank) {\n        if (xAbs > yAbs) {\n          return 1;\n        }\n        if (xAbs < yAbs) {\n          return -1;\n        }\n      } else if (xRank > yRank) {\n        return 1;\n      } else if (yRank > xRank) {\n        return -1;\n      }\n    } else if (xDir.startsWith(yDir)) {\n      return 1;\n    } else if (yDir.startsWith(xDir)) {\n      return -1;\n    }\n\n    return 0;\n  });\n}\n\nexport function getVars(\n  registry: VariableRegistry,\n  dir: string,\n  vars: PackageVariables = registry[dir] || {},\n): PackageVariables {\n  const dirAbs = toAbsolutePath(dir);\n  const parentDir = upath.dirname(dirAbs);\n  if (parentDir === dirAbs) {\n    return vars;\n  }\n  const parentVars = registry[parentDir] || {};\n  return getVars(registry, parentDir, { ...parentVars, ...vars });\n}\n\nexport function updateVars(\n  registry: VariableRegistry,\n  dir: string,\n  newVars: PackageVariables,\n): void {\n  const oldVars = registry[dir] ?? {};\n  registry[dir] = { ...oldVars, ...newVars };\n}\n"]}