{"version":3,"file":"version-catalogs.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/gradle/parser/version-catalogs.ts"],"names":[],"mappings":"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","sourcesContent":["import { query as q } from 'good-enough-parser';\nimport type { Ctx } from '../types';\nimport {\n  cleanupTempVars,\n  qArtifactId,\n  qGroupId,\n  qStringValue,\n  qStringValueAsSymbol,\n  qValueMatcher,\n  storeInTokenMap,\n  storeVarToken,\n} from './common';\nimport { handleLibraryDep, handlePlugin } from './handlers';\n\nconst qVersionCatalogVersion = q\n  .op<Ctx>('.')\n  .alt(\n    // library(\"kotlin-reflect\", \"org.jetbrains.kotlin\", \"kotlin-reflect\").versionRef(\"kotlin\")\n    q.sym<Ctx>('versionRef').tree({\n      maxDepth: 1,\n      startsWith: '(',\n      endsWith: ')',\n      search: q.begin<Ctx>().join(qStringValueAsSymbol).end(),\n    }),\n    // library(\"android-gradle\", \"com.android.tools.build\", \"gradle\").version(\"${agp}\")\n    q.sym<Ctx>('version').tree({\n      maxDepth: 1,\n      startsWith: '(',\n      endsWith: ')',\n      search: q.begin<Ctx>().join(qValueMatcher).end(),\n    }),\n  )\n  .handler((ctx) => storeInTokenMap(ctx, 'version'));\n\n// library(\"foo.bar\", \"foo\", \"bar\")\nconst qVersionCatalogDependencies = q\n  .sym<Ctx>('library', storeVarToken)\n  .handler((ctx) => storeInTokenMap(ctx, 'methodName'))\n  .tree({\n    type: 'wrapped-tree',\n    maxDepth: 1,\n    startsWith: '(',\n    endsWith: ')',\n    search: q\n      .begin<Ctx>()\n      .join(qStringValue)\n      .handler((ctx) => storeInTokenMap(ctx, 'alias'))\n      .op(',')\n      .join(qGroupId)\n      .op(',')\n      .join(qArtifactId)\n      .end(),\n  })\n  .opt(qVersionCatalogVersion)\n  .handler(handleLibraryDep)\n  .handler(cleanupTempVars);\n\n// plugin(\"foo.bar\", \"foo:bar\")\nconst qVersionCatalogPlugins = q\n  .sym<Ctx>('plugin', storeVarToken)\n  .handler((ctx) => storeInTokenMap(ctx, 'methodName'))\n  .tree({\n    type: 'wrapped-tree',\n    maxDepth: 1,\n    startsWith: '(',\n    endsWith: ')',\n    search: q\n      .begin<Ctx>()\n      .join(qStringValue)\n      .handler((ctx) => storeInTokenMap(ctx, 'alias'))\n      .op(',')\n      .alt(qStringValue)\n      .handler((ctx) => storeInTokenMap(ctx, 'pluginName'))\n      .end(),\n  })\n  .join(qVersionCatalogVersion)\n  .handler(handlePlugin)\n  .handler(cleanupTempVars);\n\n// alias(\"foo.bar\").to(\"foo\", \"bar\").version(\"1.2.3\")\nconst qVersionCatalogAliasDependencies = q\n  .sym<Ctx>('alias')\n  .tree({\n    type: 'wrapped-tree',\n    maxDepth: 1,\n    startsWith: '(',\n    endsWith: ')',\n    search: q\n      .begin<Ctx>()\n      .join(qStringValue)\n      .handler((ctx) => storeInTokenMap(ctx, 'alias'))\n      .end(),\n  })\n  .op('.')\n  .sym('to')\n  .tree({\n    type: 'wrapped-tree',\n    maxDepth: 1,\n    startsWith: '(',\n    endsWith: ')',\n    search: q.begin<Ctx>().join(qGroupId).op(',').join(qArtifactId).end(),\n  })\n  .opt(qVersionCatalogVersion)\n  .handler(handleLibraryDep)\n  .handler(cleanupTempVars);\n\nexport const qVersionCatalogs = q.alt(\n  qVersionCatalogDependencies,\n  qVersionCatalogPlugins,\n  qVersionCatalogAliasDependencies,\n);\n"]}