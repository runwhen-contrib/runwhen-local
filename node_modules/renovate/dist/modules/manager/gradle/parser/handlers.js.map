{"version":3,"file":"handlers.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/gradle/parser/handlers.ts"],"names":[],"mappings":"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","sourcesContent":["import upath from 'upath';\nimport { logger } from '../../../../logger';\nimport { getSiblingFileName } from '../../../../util/fs';\nimport { regEx } from '../../../../util/regex';\nimport { parseUrl } from '../../../../util/url';\nimport type { PackageDependency } from '../../types';\nimport type { parseGradle as parseGradleCallback } from '../parser';\nimport type {\n  ContentDescriptorMatcher,\n  ContentDescriptorSpec,\n  Ctx,\n  GradleManagerData,\n} from '../types';\nimport { isDependencyString, parseDependencyString } from '../utils';\nimport {\n  GRADLE_PLUGINS,\n  GRADLE_TEST_SUITES,\n  findVariable,\n  interpolateString,\n  loadFromTokenMap,\n} from './common';\n\n// needed to break circular dependency\nlet parseGradle: typeof parseGradleCallback;\nexport function setParseGradleFunc(func: typeof parseGradleCallback): void {\n  parseGradle = func;\n}\n\nexport function handleAssignment(ctx: Ctx): Ctx {\n  const key = loadFromTokenMap(ctx, 'keyToken')[0].value;\n  const valTokens = loadFromTokenMap(ctx, 'valToken');\n\n  if (valTokens.length > 1) {\n    // = template string with multiple variables\n    ctx.tokenMap.templateStringTokens = valTokens;\n    handleDepString(ctx);\n    delete ctx.tokenMap.templateStringTokens;\n  } else if (valTokens[0].type === 'symbol') {\n    // foo = bar || foo = \"${bar}\"\n    const varData = findVariable(valTokens[0].value, ctx);\n    if (varData) {\n      ctx.globalVars[key] = { ...varData };\n    }\n  } else {\n    // = string value\n    const dep = parseDependencyString(valTokens[0].value);\n    if (dep) {\n      dep.sharedVariableName = key;\n      dep.managerData = {\n        fileReplacePosition: valTokens[0].offset + dep.depName!.length + 1,\n        packageFile: ctx.packageFile,\n      };\n      ctx.deps.push(dep);\n    }\n\n    ctx.globalVars[key] = {\n      key,\n      value: valTokens[0].value,\n      fileReplacePosition: valTokens[0].offset,\n      packageFile: ctx.packageFile,\n    };\n  }\n\n  return ctx;\n}\n\nexport function handleDepString(ctx: Ctx): Ctx {\n  const stringTokens = loadFromTokenMap(ctx, 'templateStringTokens');\n\n  const templateString = interpolateString(stringTokens, ctx);\n  if (!templateString) {\n    return ctx;\n  }\n\n  const dep = parseDependencyString(templateString);\n  if (!dep) {\n    return ctx;\n  }\n\n  let packageFile: string | undefined;\n  let fileReplacePosition: number | undefined;\n  for (const token of stringTokens) {\n    if (token.type === 'symbol') {\n      const varData = findVariable(token.value, ctx);\n      if (varData) {\n        packageFile = varData.packageFile;\n        fileReplacePosition = varData.fileReplacePosition;\n        if (varData.value === dep.currentValue) {\n          dep.managerData = { fileReplacePosition, packageFile };\n          dep.sharedVariableName = varData.key;\n        }\n      }\n    }\n  }\n\n  if (!dep.managerData) {\n    const lastToken = stringTokens[stringTokens.length - 1];\n    if (\n      lastToken?.type === 'string-value' &&\n      dep.currentValue &&\n      lastToken.value.includes(dep.currentValue)\n    ) {\n      packageFile = ctx.packageFile;\n      if (stringTokens.length === 1) {\n        fileReplacePosition = lastToken.offset + dep.depName!.length + 1;\n      } else {\n        fileReplacePosition =\n          lastToken.offset + lastToken.value.lastIndexOf(dep.currentValue);\n      }\n      delete dep.sharedVariableName;\n    } else {\n      dep.skipReason = 'contains-variable';\n    }\n    dep.managerData = { fileReplacePosition, packageFile };\n  }\n\n  ctx.deps.push(dep);\n\n  return ctx;\n}\n\nexport function handleKotlinShortNotationDep(ctx: Ctx): Ctx {\n  const moduleNameTokens = loadFromTokenMap(ctx, 'artifactId');\n  const versionTokens = loadFromTokenMap(ctx, 'version');\n\n  const moduleName = interpolateString(moduleNameTokens, ctx);\n  const versionValue = interpolateString(versionTokens, ctx);\n  if (!moduleName || !versionValue) {\n    return ctx;\n  }\n\n  const groupIdArtifactId = `org.jetbrains.kotlin:kotlin-${moduleName}`;\n  const dep = parseDependencyString(`${groupIdArtifactId}:${versionValue}`);\n  if (!dep) {\n    return ctx;\n  }\n\n  dep.depName = moduleName;\n  dep.packageName = groupIdArtifactId;\n  dep.managerData = {\n    fileReplacePosition: versionTokens[0].offset,\n    packageFile: ctx.packageFile,\n  };\n\n  if (versionTokens.length > 1) {\n    // = template string with multiple variables\n    dep.skipReason = 'unspecified-version';\n  } else if (versionTokens[0].type === 'symbol') {\n    const varData = findVariable(versionTokens[0].value, ctx);\n    if (varData) {\n      dep.sharedVariableName = varData.key;\n      dep.currentValue = varData.value;\n      dep.managerData = {\n        fileReplacePosition: varData.fileReplacePosition,\n        packageFile: varData.packageFile,\n      };\n    }\n  }\n\n  ctx.deps.push(dep);\n\n  return ctx;\n}\n\nexport function handleLongFormDep(ctx: Ctx): Ctx {\n  const groupIdTokens = loadFromTokenMap(ctx, 'groupId');\n  const artifactIdTokens = loadFromTokenMap(ctx, 'artifactId');\n  const versionTokens = loadFromTokenMap(ctx, 'version');\n\n  const groupId = interpolateString(groupIdTokens, ctx);\n  const artifactId = interpolateString(artifactIdTokens, ctx);\n  const version = interpolateString(versionTokens, ctx);\n  if (!groupId || !artifactId || !version) {\n    return ctx;\n  }\n\n  // Special handling: 3 independent dependencies mismatched as groupId, artifactId, version\n  if (\n    isDependencyString(groupId) &&\n    isDependencyString(artifactId) &&\n    isDependencyString(version)\n  ) {\n    ctx.tokenMap.templateStringTokens = groupIdTokens;\n    handleDepString(ctx);\n    ctx.tokenMap.templateStringTokens = artifactIdTokens;\n    handleDepString(ctx);\n    ctx.tokenMap.templateStringTokens = versionTokens;\n    handleDepString(ctx);\n\n    return ctx;\n  }\n\n  const dep = parseDependencyString([groupId, artifactId, version].join(':'));\n  if (!dep) {\n    return ctx;\n  }\n\n  const methodName = ctx.tokenMap.methodName ?? null;\n  if (versionTokens.length > 1) {\n    // = template string with multiple variables\n    dep.skipReason = 'unspecified-version';\n  } else if (versionTokens[0].type === 'symbol') {\n    const varData = findVariable(versionTokens[0].value, ctx);\n    if (varData) {\n      dep.sharedVariableName = varData.key;\n      dep.managerData = {\n        fileReplacePosition: varData.fileReplacePosition,\n        packageFile: varData.packageFile,\n      };\n    }\n  } else {\n    // = string value\n    if (methodName?.[0]?.value === 'dependencySet') {\n      dep.sharedVariableName = `${groupId}:${version}`;\n    }\n    dep.managerData = {\n      fileReplacePosition: versionTokens[0].offset,\n      packageFile: ctx.packageFile,\n    };\n  }\n\n  ctx.deps.push(dep);\n\n  return ctx;\n}\n\nexport function handlePlugin(ctx: Ctx): Ctx {\n  const methodName = loadFromTokenMap(ctx, 'methodName')[0];\n  const pluginName = loadFromTokenMap(ctx, 'pluginName')[0];\n  const pluginVersion = loadFromTokenMap(ctx, 'version');\n\n  const plugin = pluginName.value;\n  const depName =\n    methodName.value === 'kotlin' ? `org.jetbrains.kotlin.${plugin}` : plugin;\n  const packageName = `${depName}:${depName}.gradle.plugin`;\n\n  const dep: PackageDependency<GradleManagerData> = {\n    depType: 'plugin',\n    depName,\n    packageName,\n    commitMessageTopic: `plugin ${depName}`,\n    currentValue: pluginVersion[0].value,\n    managerData: {\n      fileReplacePosition: pluginVersion[0].offset,\n      packageFile: ctx.packageFile,\n    },\n  };\n\n  if (pluginVersion.length > 1) {\n    // = template string with multiple variables\n    dep.skipReason = 'unspecified-version';\n  } else if (pluginVersion[0].type === 'symbol') {\n    const varData = findVariable(pluginVersion[0].value, ctx);\n    if (varData) {\n      dep.sharedVariableName = varData.key;\n      dep.currentValue = varData.value;\n      dep.managerData = {\n        fileReplacePosition: varData.fileReplacePosition,\n        packageFile: varData.packageFile,\n      };\n    } else {\n      dep.skipReason = 'unspecified-version';\n    }\n  }\n\n  ctx.deps.push(dep);\n\n  return ctx;\n}\n\nfunction isValidContentDescriptorRegex(\n  fieldName: string,\n  pattern: string,\n): boolean {\n  try {\n    regEx(pattern);\n  } catch {\n    logger.debug(\n      `Skipping content descriptor with unsupported regExp pattern for ${fieldName}: ${pattern}`,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nexport function handleRegistryContent(ctx: Ctx): Ctx {\n  const methodName = loadFromTokenMap(ctx, 'methodName')[0].value;\n  let groupId = loadFromTokenMap(ctx, 'groupId')[0].value;\n\n  let matcher: ContentDescriptorMatcher = 'simple';\n  if (methodName.includes('Regex')) {\n    matcher = 'regex';\n    groupId = `^${groupId}$`.replaceAll('\\\\\\\\', '\\\\');\n    if (!isValidContentDescriptorRegex('group', groupId)) {\n      return ctx;\n    }\n  } else if (methodName.includes('AndSubgroups')) {\n    matcher = 'subgroup';\n  }\n\n  const mode = methodName.startsWith('include') ? 'include' : 'exclude';\n  const spec: ContentDescriptorSpec = { mode, matcher, groupId };\n\n  if (methodName.includes('Module') || methodName.includes('Version')) {\n    spec.artifactId = loadFromTokenMap(ctx, 'artifactId')[0].value;\n    if (matcher === 'regex') {\n      spec.artifactId = `^${spec.artifactId}$`.replaceAll('\\\\\\\\', '\\\\');\n      if (!isValidContentDescriptorRegex('module', spec.artifactId)) {\n        return ctx;\n      }\n    }\n  }\n\n  if (methodName.includes('Version')) {\n    spec.version = loadFromTokenMap(ctx, 'version')[0].value;\n    if (matcher === 'regex') {\n      spec.version = `^${spec.version}$`.replaceAll('\\\\\\\\', '\\\\');\n      if (!isValidContentDescriptorRegex('version', spec.version)) {\n        return ctx;\n      }\n    }\n  }\n\n  ctx.tmpRegistryContent.push(spec);\n\n  return ctx;\n}\n\nfunction isPluginRegistry(ctx: Ctx): boolean {\n  if (ctx.tokenMap.registryScope) {\n    const registryScope = loadFromTokenMap(ctx, 'registryScope')[0].value;\n    return registryScope === 'pluginManagement';\n  }\n\n  return false;\n}\n\nfunction isExclusiveRegistry(ctx: Ctx): boolean {\n  if (ctx.tokenMap.registryType) {\n    const registryType = loadFromTokenMap(ctx, 'registryType')[0].value;\n    return registryType === 'exclusiveContent';\n  }\n\n  return false;\n}\n\nexport function handleRegistryUrl(ctx: Ctx): Ctx {\n  let localVariables = ctx.globalVars;\n\n  if (ctx.tokenMap.name) {\n    const nameTokens = loadFromTokenMap(ctx, 'name');\n    const nameValue = interpolateString(nameTokens, ctx, localVariables);\n    if (nameValue) {\n      localVariables = {\n        ...localVariables,\n        name: {\n          key: 'name',\n          value: nameValue,\n        },\n      };\n    }\n  }\n\n  let registryUrl = interpolateString(\n    loadFromTokenMap(ctx, 'registryUrl'),\n    ctx,\n    localVariables,\n  );\n  if (registryUrl) {\n    registryUrl = registryUrl.replace(regEx(/\\\\/g), '');\n    const url = parseUrl(registryUrl);\n    if (url?.host && url.protocol) {\n      ctx.registryUrls.push({\n        registryUrl,\n        registryType: isExclusiveRegistry(ctx) ? 'exclusive' : 'regular',\n        scope: isPluginRegistry(ctx) ? 'plugin' : 'dep',\n        content: ctx.tmpRegistryContent,\n      });\n    }\n  }\n\n  return ctx;\n}\n\nexport function handleLibraryDep(ctx: Ctx): Ctx {\n  const groupIdTokens = loadFromTokenMap(ctx, 'groupId');\n  const artifactIdTokens = loadFromTokenMap(ctx, 'artifactId');\n\n  const groupId = interpolateString(groupIdTokens, ctx);\n  const artifactId = interpolateString(artifactIdTokens, ctx);\n  if (!groupId || !artifactId) {\n    return ctx;\n  }\n\n  const aliasToken = loadFromTokenMap(ctx, 'alias')[0];\n  const key = `libs.${aliasToken.value.replace(regEx(/[-_]/g), '.')}`;\n\n  ctx.globalVars[key] = {\n    key,\n    value: `${groupId}:${artifactId}`,\n    fileReplacePosition: aliasToken.offset,\n    packageFile: ctx.packageFile,\n  };\n\n  if (ctx.tokenMap.version) {\n    const version = interpolateString(loadFromTokenMap(ctx, 'version'), ctx);\n    if (version) {\n      handleLongFormDep(ctx);\n    }\n  }\n\n  return ctx;\n}\n\nexport function handleApplyFrom(ctx: Ctx): Ctx {\n  let scriptFile = interpolateString(loadFromTokenMap(ctx, 'scriptFile'), ctx);\n  if (!scriptFile) {\n    return ctx;\n  }\n\n  if (ctx.tokenMap.parentPath) {\n    const parentPath = interpolateString(\n      loadFromTokenMap(ctx, 'parentPath'),\n      ctx,\n    );\n    if (parentPath && scriptFile) {\n      scriptFile = upath.join(parentPath, scriptFile);\n    }\n  }\n\n  if (ctx.recursionDepth > 2) {\n    logger.debug(`Max recursion depth reached in script file: ${scriptFile}`);\n    return ctx;\n  }\n\n  if (!regEx(/\\.gradle(\\.kts)?$/).test(scriptFile)) {\n    logger.debug({ scriptFile }, `Only Gradle files can be included`);\n    return ctx;\n  }\n\n  const scriptFilePath = getSiblingFileName(ctx.packageFile, scriptFile);\n  if (!ctx.fileContents[scriptFilePath]) {\n    logger.debug(`Failed to process included Gradle file ${scriptFilePath}`);\n    return ctx;\n  }\n\n  const matchResult = parseGradle(\n    // TODO #22198\n    ctx.fileContents[scriptFilePath],\n    ctx.globalVars,\n    scriptFilePath,\n    ctx.fileContents,\n    ctx.recursionDepth + 1,\n  );\n\n  ctx.deps.push(...matchResult.deps);\n  ctx.globalVars = { ...ctx.globalVars, ...matchResult.vars };\n  ctx.registryUrls.push(...matchResult.urls);\n\n  return ctx;\n}\n\nexport function handleImplicitDep(ctx: Ctx): Ctx {\n  const implicitDepName = loadFromTokenMap(ctx, 'implicitDepName')[0].value;\n  const versionTokens = loadFromTokenMap(ctx, 'version');\n  const versionValue = interpolateString(versionTokens, ctx);\n  if (!versionValue) {\n    return ctx;\n  }\n\n  const isImplicitGradlePlugin = implicitDepName in GRADLE_PLUGINS;\n  const groupIdArtifactId = isImplicitGradlePlugin\n    ? GRADLE_PLUGINS[implicitDepName as keyof typeof GRADLE_PLUGINS][1]\n    : GRADLE_TEST_SUITES[implicitDepName as keyof typeof GRADLE_TEST_SUITES];\n\n  const dep = parseDependencyString(`${groupIdArtifactId}:${versionValue}`);\n  if (!dep) {\n    return ctx;\n  }\n\n  dep.depName = implicitDepName;\n  dep.packageName = groupIdArtifactId;\n  dep.managerData = {\n    fileReplacePosition: versionTokens[0].offset,\n    packageFile: ctx.packageFile,\n  };\n\n  if (versionTokens.length > 1) {\n    // = template string with multiple variables\n    dep.skipReason = 'unspecified-version';\n  } else if (versionTokens[0].type === 'symbol') {\n    const varData = findVariable(versionTokens[0].value, ctx);\n    if (varData) {\n      dep.sharedVariableName = varData.key;\n      dep.currentValue = varData.value;\n      dep.managerData = {\n        fileReplacePosition: varData.fileReplacePosition,\n        packageFile: varData.packageFile,\n      };\n    }\n  }\n\n  ctx.deps.push(dep);\n\n  return ctx;\n}\n"]}