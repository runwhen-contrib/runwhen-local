{"version":3,"file":"plugins.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/gradle/parser/plugins.ts"],"names":[],"mappings":";;;AAAA,2DAAgD;AAChD,kDAA+C;AAE/C,qCAMkB;AAClB,yCAA0C;AAE7B,QAAA,QAAQ,GAAG,0BAAC;KACtB,GAAG,CAAC,IAAA,aAAK,EAAC,iBAAiB,CAAC,EAAE,sBAAa,CAAC;KAC5C,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAA,wBAAe,EAAC,GAAG,EAAE,YAAY,CAAC,CAAC;KACpD,GAAG;AACF,+BAA+B;AAC/B,qBAAY;KACT,OAAO,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,IAAA,wBAAe,EAAC,GAAG,EAAE,YAAY,CAAC,CAAC;KACzD,GAAG,CAAC,SAAS,CAAC;KACd,IAAI,CAAC,iBAAQ,CAAC;AACjB,iCAAiC;AACjC,0BAAC;KACE,IAAI,CAAC;IACJ,IAAI,EAAE,cAAc;IACpB,QAAQ,EAAE,CAAC;IACX,UAAU,EAAE,GAAG;IACf,QAAQ,EAAE,GAAG;IACb,MAAM,EAAE,0BAAC,CAAC,KAAK,EAAO,CAAC,IAAI,CAAC,qBAAY,CAAC,CAAC,GAAG,EAAE;CAChD,CAAC;KACD,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAA,wBAAe,EAAC,GAAG,EAAE,YAAY,CAAC,CAAC;KACpD,GAAG;AACF,gCAAgC;AAChC,0BAAC,CAAC,GAAG,CAAM,SAAS,CAAC,CAAC,IAAI,CAAC,iBAAQ,CAAC;AACpC,iCAAiC;AACjC,iCAAiC;AACjC,0BAAC;KACE,GAAG,CAAC,0BAAC,CAAC,EAAE,CAAM,GAAG,CAAC,CAAC;KACnB,GAAG,CAAC,SAAS,CAAC;KACd,IAAI,CAAC;IACJ,QAAQ,EAAE,CAAC;IACX,UAAU,EAAE,GAAG;IACf,QAAQ,EAAE,GAAG;IACb,MAAM,EAAE,0BAAC,CAAC,KAAK,EAAO,CAAC,IAAI,CAAC,iBAAQ,CAAC,CAAC,GAAG,EAAE;CAC5C,CAAC,CACL,CACJ;KACA,OAAO,CAAC,uBAAY,CAAC;KACrB,OAAO,CAAC,wBAAe,CAAC,CAAC","sourcesContent":["import { query as q } from 'good-enough-parser';\nimport { regEx } from '../../../../util/regex';\nimport type { Ctx } from '../types';\nimport {\n  cleanupTempVars,\n  qStringValue,\n  qVersion,\n  storeInTokenMap,\n  storeVarToken,\n} from './common';\nimport { handlePlugin } from './handlers';\n\nexport const qPlugins = q\n  .sym(regEx(/^(?:id|kotlin)$/), storeVarToken)\n  .handler((ctx) => storeInTokenMap(ctx, 'methodName'))\n  .alt(\n    // id \"foo.bar\" version \"1.2.3\"\n    qStringValue\n      .handler((ctx: Ctx) => storeInTokenMap(ctx, 'pluginName'))\n      .sym('version')\n      .join(qVersion),\n    // kotlin(\"jvm\") version \"1.3.71\"\n    q\n      .tree({\n        type: 'wrapped-tree',\n        maxDepth: 1,\n        startsWith: '(',\n        endsWith: ')',\n        search: q.begin<Ctx>().join(qStringValue).end(),\n      })\n      .handler((ctx) => storeInTokenMap(ctx, 'pluginName'))\n      .alt(\n        // id(\"foo.bar\") version \"1.2.3\"\n        q.sym<Ctx>('version').join(qVersion),\n        // id(\"foo.bar\").version(\"1.2.3\")\n        // id(\"foo.bar\") version(\"1.2.3\")\n        q\n          .opt(q.op<Ctx>('.'))\n          .sym('version')\n          .tree({\n            maxDepth: 1,\n            startsWith: '(',\n            endsWith: ')',\n            search: q.begin<Ctx>().join(qVersion).end(),\n          }),\n      ),\n  )\n  .handler(handlePlugin)\n  .handler(cleanupTempVars);\n"]}