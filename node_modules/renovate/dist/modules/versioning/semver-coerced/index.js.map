{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/semver-coerced/index.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport type { SemVer } from 'semver';\nimport semver from 'semver';\nimport stable from 'semver-stable';\nimport { regEx } from '../../../util/regex';\nimport type { NewValueConfig, VersioningApi } from '../types';\n\nexport const id = 'semver-coerced';\nexport const displayName = 'Coerced Semantic Versioning';\nexport const urls = ['https://semver.org/'];\nexport const supportsRanges = false;\n\nfunction isStable(version: string): boolean {\n  // matching a version with the semver prefix\n  // v1.2.3, 1.2.3, v1.2, 1.2, v1, 1\n  const regx = regEx(\n    /^v?(?<major>\\d+)(?<minor>\\.\\d+)?(?<patch>\\.\\d+)?(?<others>.+)?/,\n  );\n  const m = regx.exec(version);\n\n  if (!m?.groups) {\n    return false;\n  }\n\n  const major = m.groups.major;\n  const newMinor = m.groups.minor ?? '.0';\n  const newPatch = m.groups.patch ?? '.0';\n  const others = m.groups.others ?? '';\n  const fixed = major + newMinor + newPatch + others;\n  return stable.is(fixed);\n}\n\nfunction sortVersions(a: string, b: string): number {\n  const aCoerced = semver.coerce(a);\n  const bCoerced = semver.coerce(b);\n\n  return aCoerced && bCoerced ? semver.compare(aCoerced, bCoerced) : 0;\n}\n\nfunction getMajor(a: string | SemVer): number | null {\n  const aCoerced = semver.coerce(a);\n  return aCoerced ? semver.major(aCoerced) : null;\n}\n\nfunction getMinor(a: string | SemVer): number | null {\n  const aCoerced = semver.coerce(a);\n  return aCoerced ? semver.minor(aCoerced) : null;\n}\n\nfunction getPatch(a: string | SemVer): number | null {\n  const aCoerced = semver.coerce(a);\n  return aCoerced ? semver.patch(aCoerced) : null;\n}\n\nfunction matches(version: string, range: string): boolean {\n  const coercedVersion = semver.coerce(version);\n  return coercedVersion ? semver.satisfies(coercedVersion, range) : false;\n}\n\nfunction equals(a: string, b: string): boolean {\n  const aCoerced = semver.coerce(a);\n  const bCoerced = semver.coerce(b);\n  return aCoerced && bCoerced ? semver.eq(aCoerced, bCoerced) : false;\n}\n\nfunction isValid(version: string): boolean {\n  return !!semver.valid(semver.coerce(version));\n}\n\nfunction getSatisfyingVersion(\n  versions: string[],\n  range: string,\n): string | null {\n  const coercedVersions = versions\n    .map((version) =>\n      semver.valid(version) ? version : semver.coerce(version)?.version,\n    )\n    .filter(is.string);\n\n  return semver.maxSatisfying(coercedVersions, range);\n}\n\nfunction minSatisfyingVersion(\n  versions: string[],\n  range: string,\n): string | null {\n  const coercedVersions = versions\n    .map((version) => semver.coerce(version)?.version)\n    .filter(is.string);\n\n  return semver.minSatisfying(coercedVersions, range);\n}\n\nfunction isLessThanRange(version: string, range: string): boolean {\n  const coercedVersion = semver.coerce(version);\n  return coercedVersion ? semver.ltr(coercedVersion, range) : false;\n}\n\nfunction isGreaterThan(version: string, other: string): boolean {\n  const coercedVersion = semver.coerce(version);\n  const coercedOther = semver.coerce(other);\n  if (!coercedVersion || !coercedOther) {\n    return false;\n  }\n  return semver.gt(coercedVersion, coercedOther);\n}\n\nconst startsWithNumberRegex = regEx(`^\\\\d`);\n\nfunction isSingleVersion(version: string): boolean {\n  // Since coercion accepts ranges as well as versions, we have to manually\n  // check that the version string starts with either 'v' or a digit.\n  if (!version.startsWith('v') && !startsWithNumberRegex.exec(version)) {\n    return false;\n  }\n\n  return !!semver.valid(semver.coerce(version));\n}\n\n// If this is left as an alias, inputs like \"17.04.0\" throw errors\nexport const isVersion = (input: string): boolean => isValid(input);\n\nexport { isVersion as isValid, getSatisfyingVersion };\n\nfunction getNewValue({\n  currentValue,\n  currentVersion,\n  newVersion,\n}: NewValueConfig): string {\n  if (currentVersion === `v${currentValue}`) {\n    return newVersion.replace(/^v/, '');\n  }\n  return newVersion;\n}\n\nfunction isCompatible(version: string): boolean {\n  return isVersion(version);\n}\n\nexport const api: VersioningApi = {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  isCompatible,\n  isGreaterThan,\n  isLessThanRange,\n  isSingleVersion,\n  isStable,\n  isValid,\n  isVersion,\n  matches,\n  getSatisfyingVersion,\n  minSatisfyingVersion,\n  getNewValue,\n  sortVersions,\n};\nexport default api;\n"]}