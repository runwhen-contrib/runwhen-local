{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/python/index.ts"],"names":[],"mappings":";;;AAAA,sCAA0C;AAC1C,sCAA0C;AAG7B,QAAA,EAAE,GAAG,QAAQ,CAAC;AACd,QAAA,WAAW,GAAG,QAAQ,CAAC;AACvB,QAAA,IAAI,GAAG,EAAE,CAAC;AACV,QAAA,cAAc,GAAG,KAAK,CAAC;AAEpC,SAAS,eAAe,CAAC,OAAe,EAAE,KAAa;IACrD,OAAO,YAAM,CAAC,OAAO,CAAC,KAAK,CAAC;QAC1B,CAAC,CAAC,YAAM,CAAC,eAAgB,CAAC,OAAO,EAAE,KAAK,CAAC;QACzC,CAAC,CAAC,YAAM,CAAC,eAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC9C,CAAC;AAED,SAAS,OAAO,CAAC,KAAa;IAC5B,OAAO,YAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,YAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACxD,CAAC;AAED,SAAS,OAAO,CAAC,OAAe,EAAE,KAAa;IAC7C,OAAO,YAAM,CAAC,OAAO,CAAC,KAAK,CAAC;QAC1B,CAAC,CAAC,YAAM,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;QAChC,CAAC,CAAC,YAAM,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACrC,CAAC;AAED,SAAS,oBAAoB,CAC3B,QAAkB,EAClB,KAAa;IAEb,OAAO,YAAM,CAAC,OAAO,CAAC,KAAK,CAAC;QAC1B,CAAC,CAAC,YAAM,CAAC,oBAAoB,CAAC,QAAQ,EAAE,KAAK,CAAC;QAC9C,CAAC,CAAC,YAAM,CAAC,oBAAoB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AACnD,CAAC;AAED,SAAS,oBAAoB,CAC3B,QAAkB,EAClB,KAAa;IAEb,OAAO,YAAM,CAAC,OAAO,CAAC,KAAK,CAAC;QAC1B,CAAC,CAAC,YAAM,CAAC,oBAAoB,CAAC,QAAQ,EAAE,KAAK,CAAC;QAC9C,CAAC,CAAC,YAAM,CAAC,oBAAoB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AACnD,CAAC;AAED,SAAS,WAAW,CAAC,QAAwB;IAC3C,OAAO,YAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AACtC,CAAC;AAED,SAAS,MAAM,CAAC,QAAgB,EAAE,UAAkB;IAClD,OAAO,YAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,YAAM,CAAC,OAAO,CAAC,UAAU,CAAC;QAC3D,CAAC,CAAC,YAAM,CAAC,MAAO,CAAC,QAAQ,EAAE,UAAU,CAAC;QACtC,CAAC,CAAC,SAAS,CAAC;AAChB,CAAC;AAEY,QAAA,GAAG,GAAkB;IAChC,GAAG,YAAM;IACT,WAAW;IACX,oBAAoB;IACpB,eAAe;IACf,OAAO;IACP,OAAO;IACP,oBAAoB;IACpB,MAAM;CACP,CAAC;AACF,kBAAe,WAAG,CAAC","sourcesContent":["import { api as pep440 } from '../pep440';\nimport { api as poetry } from '../poetry';\nimport type { NewValueConfig, VersioningApi } from '../types';\n\nexport const id = 'python';\nexport const displayName = 'Python';\nexport const urls = [];\nexport const supportsRanges = false;\n\nfunction isLessThanRange(version: string, range: string): boolean {\n  return poetry.isValid(range)\n    ? poetry.isLessThanRange!(version, range)\n    : pep440.isLessThanRange!(version, range);\n}\n\nfunction isValid(input: string): boolean {\n  return poetry.isValid(input) || pep440.isValid(input);\n}\n\nfunction matches(version: string, range: string): boolean {\n  return poetry.isValid(range)\n    ? poetry.matches(version, range)\n    : pep440.matches(version, range);\n}\n\nfunction getSatisfyingVersion(\n  versions: string[],\n  range: string,\n): string | null {\n  return poetry.isValid(range)\n    ? poetry.getSatisfyingVersion(versions, range)\n    : pep440.getSatisfyingVersion(versions, range);\n}\n\nfunction minSatisfyingVersion(\n  versions: string[],\n  range: string,\n): string | null {\n  return poetry.isValid(range)\n    ? poetry.minSatisfyingVersion(versions, range)\n    : pep440.minSatisfyingVersion(versions, range);\n}\n\nfunction getNewValue(newValue: NewValueConfig): string | null {\n  return poetry.getNewValue(newValue);\n}\n\nfunction subset(subRange: string, superRange: string): boolean | undefined {\n  return poetry.isValid(subRange) && poetry.isValid(superRange)\n    ? poetry.subset!(subRange, superRange)\n    : undefined;\n}\n\nexport const api: VersioningApi = {\n  ...poetry,\n  getNewValue,\n  getSatisfyingVersion,\n  isLessThanRange,\n  isValid,\n  matches,\n  minSatisfyingVersion,\n  subset,\n};\nexport default api;\n"]}