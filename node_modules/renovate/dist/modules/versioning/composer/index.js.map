{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/composer/index.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport semver from 'semver';\nimport { parseRange } from 'semver-utils';\nimport { logger } from '../../../logger';\nimport type { RangeStrategy } from '../../../types/versioning';\nimport { regEx } from '../../../util/regex';\nimport { api as npm } from '../npm';\nimport type { NewValueConfig, VersioningApi } from '../types';\n\nexport const id = 'composer';\nexport const displayName = 'Composer';\nexport const urls = [\n  'https://getcomposer.org/doc/articles/versions.md',\n  'https://packagist.org/packages/composer/semver',\n  'https://madewithlove.be/tilde-and-caret-constraints/',\n  'https://semver.mwl.be',\n];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies: RangeStrategy[] = [\n  'bump',\n  'widen',\n  'pin',\n  'replace',\n  'update-lockfile',\n];\n\nfunction getVersionParts(input: string): [string, string] {\n  const versionParts = input.split('-');\n  if (versionParts.length === 1) {\n    return [input, ''];\n  }\n\n  return [versionParts[0], '-' + versionParts[1]];\n}\n\nfunction padZeroes(input: string): string {\n  const [output, stability] = getVersionParts(input);\n\n  const sections = output.split('.');\n  while (sections.length < 3) {\n    sections.push('0');\n  }\n  return sections.join('.') + stability;\n}\n\nfunction convertStabilityModifier(input: string): string {\n  // Handle stability modifiers.\n  const versionParts = input.split('@');\n  if (versionParts.length === 1) {\n    return input;\n  }\n\n  // 1.0@beta2 to 1.0-beta.2\n  const stability = versionParts[1].replace(\n    regEx(/(?:^|\\s)(beta|alpha|rc)([1-9][0-9]*)(?: |$)/gi),\n    '$1.$2',\n  );\n\n  // If there is a stability part, npm semver expects the version\n  // to be full\n  return padZeroes(versionParts[0]) + '-' + stability;\n}\n\nfunction normalizeVersion(input: string): string {\n  let output = input;\n  output = output.replace(regEx(/(^|>|>=|\\^|~)v/i), '$1');\n  return convertStabilityModifier(output);\n}\n\n/**\n * @param versions Version list in any format, it recognizes the specific patch format x.x.x-pXX\n * @param range Range in composer format\n * @param minMode If true, it will calculate minSatisfyingVersion, if false, it calculates the maxSatisfyingVersion\n * @returns min or max satisfyingVersion from the input\n */\nfunction calculateSatisfyingVersionIntenal(\n  versions: string[],\n  range: string,\n  minMode: boolean,\n): string | null {\n  // Because composer -p versions are considered stable, we have to remove the suffix for the npm.XXX functions.\n  const versionsMapped = versions.map((x) => {\n    return {\n      origianl: x,\n      cleaned: removeComposerSpecificPatchPart(x),\n      npmVariant: composer2npm(removeComposerSpecificPatchPart(x)[0]),\n    };\n  });\n\n  const npmVersions = versionsMapped.map((x) => x.npmVariant);\n  const npmVersion = minMode\n    ? npm.minSatisfyingVersion(npmVersions, composer2npm(range))\n    : npm.getSatisfyingVersion(npmVersions, composer2npm(range));\n\n  if (!npmVersion) {\n    return null;\n  }\n\n  // After we find the npm versions, we select from them back in the mapping the possible patches.\n  const candidates = versionsMapped\n    .filter((x) => x.npmVariant === npmVersion)\n    .sort((a, b) => (minMode ? 1 : -1) * sortVersions(a.origianl, b.origianl));\n\n  return candidates[0].origianl;\n}\n\n/**\n * @param intput Version in any format, it recognizes the specific patch format x.x.x-pXX\n * @returns If input contains the specific patch, it returns the input with removed the patch and true, otherwise it retunrs the same string and false.\n */\nfunction removeComposerSpecificPatchPart(input: string): [string, boolean] {\n  // the regex is based on the original from composer implementation https://github.com/composer/semver/blob/fa1ec24f0ab1efe642671ec15c51a3ab879f59bf/src/VersionParser.php#L137\n  const pattern = /^v?\\d+(\\.\\d+(\\.\\d+(\\.\\d+)?)?)?(?<suffix>-p[1-9]\\d*)$/gi;\n  const match = pattern.exec(input);\n\n  return match\n    ? [input.replace(match.groups!.suffix, ''), true]\n    : [input, false];\n}\n\nfunction composer2npm(input: string): string {\n  return input\n    .split(regEx(/\\s*\\|\\|?\\s*/g))\n    .map((part): string => {\n      const cleanInput = normalizeVersion(part);\n      if (npm.isVersion(cleanInput)) {\n        return cleanInput;\n      }\n      if (npm.isVersion(padZeroes(cleanInput))) {\n        return padZeroes(cleanInput);\n      }\n      const [versionId, stability] = getVersionParts(cleanInput);\n      let output = versionId;\n\n      // ~4 to ^4 and ~4.1 to ^4.1\n      output = output.replace(\n        regEx(/(?:^|\\s)~([1-9][0-9]*(?:\\.[0-9]*)?)(?: |$)/g),\n        '^$1',\n      );\n      // ~0.4 to >=0.4 <1\n      output = output.replace(\n        regEx(/(?:^|\\s)~(0\\.[1-9][0-9]*)(?: |$)/g),\n        '>=$1 <1',\n      );\n\n      // add extra digits to <8-DEV and <8.0-DEV\n      output = output\n        .replace(regEx(/^(<\\d+(\\.\\d+)?)$/g), '$1.0')\n        .replace(regEx(/^(<\\d+(\\.\\d+)?)$/g), '$1.0');\n\n      return output + stability;\n    })\n    .map((part) => part.replace(/([a-z])([0-9])/gi, '$1.$2'))\n    .join(' || ');\n}\n\nfunction equals(a: string, b: string): boolean {\n  return npm.equals(composer2npm(a), composer2npm(b));\n}\n\nfunction getMajor(version: string): number | null {\n  const semverVersion = semver.coerce(composer2npm(version));\n  return semverVersion ? npm.getMajor(semverVersion) : null;\n}\n\nfunction getMinor(version: string): number | null {\n  const semverVersion = semver.coerce(composer2npm(version));\n  return semverVersion ? npm.getMinor(semverVersion) : null;\n}\n\nfunction getPatch(version: string): number | null {\n  const semverVersion = semver.coerce(composer2npm(version));\n\n  // This returns only the numbers without the optional `-pXX` patch version supported by composer. Fixing that would require a bigger\n  // refactoring, because the API supports only numbers.\n  return semverVersion ? npm.getPatch(semverVersion) : null;\n}\n\nfunction isGreaterThan(a: string, b: string): boolean {\n  return sortVersions(a, b) === 1;\n}\n\nfunction isLessThanRange(version: string, range: string): boolean {\n  return !!npm.isLessThanRange?.(composer2npm(version), composer2npm(range));\n}\n\nfunction isSingleVersion(input: string): boolean {\n  return !!input && npm.isSingleVersion(composer2npm(input));\n}\n\nfunction isStable(version: string): boolean {\n  if (version) {\n    // Composer considers patches `-pXX` as stable: https://github.com/composer/semver/blob/fa1ec24f0ab1efe642671ec15c51a3ab879f59bf/src/VersionParser.php#L568 but npm not.\n    // In order to be able to use the standard npm.isStable function, we remove the potential patch version for the check.\n    const [withoutPatch] = removeComposerSpecificPatchPart(version);\n    return npm.isStable(composer2npm(withoutPatch));\n  }\n\n  return false;\n}\n\nexport function isValid(input: string): boolean {\n  return !!input && npm.isValid(composer2npm(input));\n}\n\nexport function isVersion(input: string): boolean {\n  return !!input && npm.isVersion(composer2npm(input));\n}\n\nfunction matches(version: string, range: string): boolean {\n  return npm.matches(composer2npm(version), composer2npm(range));\n}\n\nfunction getSatisfyingVersion(\n  versions: string[],\n  range: string,\n): string | null {\n  return calculateSatisfyingVersionIntenal(versions, range, false);\n}\n\nfunction minSatisfyingVersion(\n  versions: string[],\n  range: string,\n): string | null {\n  return calculateSatisfyingVersionIntenal(versions, range, true);\n}\n\nfunction subset(subRange: string, superRange: string): boolean | undefined {\n  try {\n    return npm.subset!(composer2npm(subRange), composer2npm(superRange));\n  } catch (err) {\n    logger.trace({ err }, 'composer.subset error');\n    return false;\n  }\n}\n\nfunction intersects(subRange: string, superRange: string): boolean {\n  try {\n    return npm.intersects!(composer2npm(subRange), composer2npm(superRange));\n  } catch (err) {\n    logger.trace({ err }, 'composer.intersects error');\n    return false;\n  }\n}\n\nfunction getNewValue({\n  currentValue,\n  rangeStrategy,\n  currentVersion,\n  newVersion,\n}: NewValueConfig): string | null {\n  if (rangeStrategy === 'pin') {\n    return newVersion;\n  }\n  if (rangeStrategy === 'update-lockfile') {\n    if (matches(newVersion, currentValue)) {\n      return currentValue;\n    }\n    return getNewValue({\n      currentValue,\n      rangeStrategy: 'replace',\n      currentVersion,\n      newVersion,\n    });\n  }\n  const currentMajor = currentVersion ? getMajor(currentVersion) : null;\n  const toMajor = getMajor(newVersion);\n  const toMinor = getMinor(newVersion);\n  let newValue: string | null = null;\n  if (isVersion(currentValue)) {\n    newValue = newVersion;\n  } else if (regEx(/^[~^](0\\.[1-9][0-9]*)$/).test(currentValue)) {\n    const operator = currentValue.substring(0, 1);\n    // handle ~0.4 case first\n    if (toMajor === 0) {\n      // TODO: types (#22198)\n      newValue = `${operator}0.${toMinor!}`;\n    } else {\n      // TODO: types (#22198)\n      newValue = `${operator}${toMajor!}.0`;\n    }\n  } else if (regEx(/^[~^]([0-9]*)$/).test(currentValue)) {\n    // handle ~4 case\n    const operator = currentValue.substring(0, 1);\n    // TODO: types (#22198)\n    newValue = `${operator}${toMajor!}`;\n  } else if (\n    toMajor &&\n    regEx(/^[~^]([0-9]*(?:\\.[0-9]*)?)$/).test(currentValue)\n  ) {\n    const operator = currentValue.substring(0, 1);\n    if (rangeStrategy === 'bump') {\n      newValue = `${operator}${newVersion}`;\n    } else if (\n      (is.number(currentMajor) && toMajor > currentMajor) ||\n      !toMinor\n    ) {\n      // handle ~4.1 case\n      newValue = `${operator}${toMajor}.0`;\n    } else {\n      newValue = `${operator}${toMajor}.${toMinor}`;\n    }\n  } else if (\n    currentVersion &&\n    npm.isVersion(padZeroes(normalizeVersion(newVersion))) &&\n    npm.isValid(normalizeVersion(currentValue)) &&\n    composer2npm(currentValue) === normalizeVersion(currentValue)\n  ) {\n    newValue = npm.getNewValue({\n      currentValue: normalizeVersion(currentValue),\n      rangeStrategy,\n      currentVersion: padZeroes(normalizeVersion(currentVersion)),\n      newVersion: padZeroes(normalizeVersion(newVersion)),\n    });\n  }\n\n  if (rangeStrategy === 'widen' && matches(newVersion, currentValue)) {\n    newValue = currentValue;\n  } else {\n    const hasOr = currentValue.includes(' || ');\n    if (hasOr || rangeStrategy === 'widen') {\n      const splitValues = currentValue.split('||');\n      const lastValue = splitValues[splitValues.length - 1];\n      const replacementValue = getNewValue({\n        currentValue: lastValue.trim(),\n        rangeStrategy: 'replace',\n        currentVersion,\n        newVersion,\n      });\n      if (rangeStrategy === 'replace') {\n        newValue = replacementValue;\n      } else if (replacementValue) {\n        const parsedRange = parseRange(replacementValue);\n        const element = parsedRange[parsedRange.length - 1];\n        if (element.operator?.startsWith('<')) {\n          const splitCurrent = currentValue.split(element.operator);\n          splitCurrent.pop();\n          newValue = splitCurrent.join(element.operator) + replacementValue;\n        } else {\n          newValue = currentValue + ' || ' + replacementValue;\n        }\n      }\n    }\n  }\n\n  if (!newValue) {\n    logger.warn(\n      { currentValue, rangeStrategy, currentVersion, newVersion },\n      'Unsupported composer value',\n    );\n    newValue = newVersion;\n  }\n  if (currentValue.split('.')[0].includes('v')) {\n    newValue = newValue.replace(regEx(/([0-9])/), 'v$1');\n  }\n\n  // Preserve original min-stability specifier\n  if (currentValue.includes('@')) {\n    newValue += '@' + currentValue.split('@')[1];\n  }\n\n  return newValue;\n}\n\nfunction sortVersions(a: string, b: string): number {\n  const [aWithoutPatch, aContainsPatch] = removeComposerSpecificPatchPart(a);\n  const [bWithoutPatch, bContainsPatch] = removeComposerSpecificPatchPart(b);\n\n  if (aContainsPatch === bContainsPatch) {\n    // If both [a and b] contain patch version or both [a and b] do not contain patch version, then npm comparison deliveres correct results\n    return npm.sortVersions(composer2npm(a), composer2npm(b));\n  } else if (\n    npm.equals(composer2npm(aWithoutPatch), composer2npm(bWithoutPatch))\n  ) {\n    // If only one [a or b] contains patch version and the parts without patch versions are equal, then the version with patch is greater (this is the case where npm comparison fails)\n    return aContainsPatch ? 1 : -1;\n  } else {\n    // All other cases can be compared correctly by npm\n    return npm.sortVersions(composer2npm(a), composer2npm(b));\n  }\n}\n\nfunction isCompatible(version: string): boolean {\n  return isVersion(version);\n}\n\nexport const api: VersioningApi = {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  isCompatible,\n  isGreaterThan,\n  isLessThanRange,\n  isSingleVersion,\n  isStable,\n  isValid,\n  isVersion,\n  matches,\n  getSatisfyingVersion,\n  minSatisfyingVersion,\n  getNewValue,\n  sortVersions,\n  subset,\n  intersects,\n};\nexport default api;\n"]}