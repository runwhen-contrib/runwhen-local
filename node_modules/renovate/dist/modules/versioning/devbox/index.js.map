{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/devbox/index.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAE5C,wCAAkD;AAGrC,QAAA,EAAE,GAAG,QAAQ,CAAC;AACd,QAAA,WAAW,GAAG,QAAQ,CAAC;AACvB,QAAA,IAAI,GAAG,EAAE,CAAC;AACV,QAAA,cAAc,GAAG,KAAK,CAAC;AAEpC,MAAM,YAAY,GAAG,IAAA,aAAK,EAAC,yCAAyC,CAAC,CAAC;AACtE,MAAM,cAAc,GAAG,IAAA,aAAK,EAAC,uCAAuC,CAAC,CAAC;AAEtE,MAAM,mBAAoB,SAAQ,8BAAoB;IAC1C,MAAM,CAAC,OAAe;QAC9B,MAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAClD,OAAO,EAAE,OAAO,EAAE,CAAC;IACrB,CAAC;IAEQ,OAAO,CAAC,OAAe;QAC9B,IAAI,OAAO,KAAK,QAAQ,EAAE,CAAC;YACzB,OAAO,IAAI,CAAC;QACd,CAAC;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC;IACvC,CAAC;IAEQ,SAAS,CAAC,OAAe;QAChC,IAAI,OAAO,KAAK,QAAQ,EAAE,CAAC;YACzB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC,OAAO,CAAC;IACnB,CAAC;IAEQ,OAAO,CAAC,OAAe,EAAE,KAAa;QAC7C,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAChE,CAAC;IAEkB,QAAQ,CAAC,OAAe,EAAE,KAAa;QACxD,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEnC,8CAA8C;QAC9C,IAAI,KAAK,KAAK,QAAQ,IAAI,OAAO,EAAE,CAAC;YAClC,OAAO,CAAC,CAAC;QACX,CAAC;QAED,+CAA+C;QAC/C,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,EAAE,CAAC;YAC1B,OAAO,CAAC,CAAC;QACX,CAAC;QACD,kCAAkC;QAClC,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YACnC,+BAA+B;YAC/B,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACjC,gEAAgE;YAChE,qBAAqB;YACrB,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,KAAK,EAAE,CAAC;gBAClE,OAAO,KAAK,GAAG,KAAK,CAAC;YACvB,CAAC;QACH,CAAC;QACD,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AAEY,QAAA,GAAG,GAAkB,IAAI,mBAAmB,EAAE,CAAC;AAE5D,kBAAe,WAAG,CAAC","sourcesContent":["import { regEx } from '../../../util/regex';\nimport type { GenericVersion } from '../generic';\nimport { GenericVersioningApi } from '../generic';\nimport type { VersioningApi } from '../types';\n\nexport const id = 'devbox';\nexport const displayName = 'devbox';\nexport const urls = [];\nexport const supportsRanges = false;\n\nconst validPattern = regEx(/^((\\d|[1-9]\\d*)(\\.(\\d|[1-9]\\d*)){0,2})$/);\nconst versionPattern = regEx(/^((\\d|[1-9]\\d*)(\\.(\\d|[1-9]\\d*)){2})$/);\n\nclass DevboxVersioningApi extends GenericVersioningApi {\n  protected _parse(version: string): GenericVersion | null {\n    const matches = validPattern.exec(version);\n    if (!matches) {\n      return null;\n    }\n    const release = matches[0].split('.').map(Number);\n    return { release };\n  }\n\n  override isValid(version: string): boolean {\n    if (version === 'latest') {\n      return true;\n    }\n    return this._parse(version) !== null;\n  }\n\n  override isVersion(version: string): boolean {\n    if (version === 'latest') {\n      return false;\n    }\n    const matches = versionPattern.exec(version);\n    return !!matches;\n  }\n\n  override matches(version: string, range: string): boolean {\n    return this.isVersion(version) && this.equals(version, range);\n  }\n\n  protected override _compare(version: string, other: string): number {\n    const parsed1 = this._parse(version);\n    const parsed2 = this._parse(other);\n\n    // Treat \"latest\" as * and always return equal\n    if (other === 'latest' && parsed1) {\n      return 0;\n    }\n\n    // If either version is invalid, return unequal\n    if (!(parsed1 && parsed2)) {\n      return 1;\n    }\n    // support variable length compare\n    const length = Math.max(parsed1.release.length, parsed2.release.length);\n    for (let i = 0; i < length; i += 1) {\n      // 2.1 and 2.1.0 are equivalent\n      const part1 = parsed1.release[i];\n      const part2 = parsed2.release[i];\n      // if part1 or part2 is undefined, we should treat them as equal\n      // e.g. 1.0.0 === 1.0\n      if (part1 !== undefined && part2 !== undefined && part1 !== part2) {\n        return part1 - part2;\n      }\n    }\n    return 0;\n  }\n}\n\nexport const api: VersioningApi = new DevboxVersioningApi();\n\nexport default api;\n"]}