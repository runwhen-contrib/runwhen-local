{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/glasskube/index.ts"],"names":[],"mappings":";;;AAAA,mCAAgC;AAEhC,wCAAkD;AAGrC,QAAA,EAAE,GAAG,WAAW,CAAC;AACjB,QAAA,WAAW,GAAG,WAAW,CAAC;AAC1B,QAAA,IAAI,GAAG,EAAE,CAAC;AACV,QAAA,cAAc,GAAG,KAAK,CAAC;AAEpC,MAAa,sBAAuB,SAAQ,8BAAoB;IAC3C,MAAM,CAAC,OAAe;QACvC,IAAI,aAAqB,CAAC;QAC1B,IAAI,CAAC;YACH,aAAa,GAAG,IAAI,eAAM,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC;QAAC,MAAM,CAAC;YACP,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,MAAM,GAAmB;YAC7B,OAAO,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC,KAAK,CAAC;YACxE,UAAU,EACR,aAAa,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;gBACjC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC;gBACpC,CAAC,CAAC,SAAS;SAChB,CAAC;QACF,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,KAAK,EAAE,CAAC;YACV,IAAI,CAAC;gBACH,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACvC,CAAC;YAAC,MAAM,CAAC;gBACP,UAAU;YACZ,CAAC;QACH,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAzBD,wDAyBC;AAEY,QAAA,GAAG,GAAkB,IAAI,sBAAsB,EAAE,CAAC;AAC/D,kBAAe,WAAG,CAAC","sourcesContent":["import { SemVer } from 'semver';\nimport type { GenericVersion } from '../generic';\nimport { GenericVersioningApi } from '../generic';\nimport type { VersioningApi } from '../types';\n\nexport const id = 'glasskube';\nexport const displayName = 'glasskube';\nexport const urls = [];\nexport const supportsRanges = false;\n\nexport class GlasskubeVersioningApi extends GenericVersioningApi {\n  protected override _parse(version: string): GenericVersion | null {\n    let parsedVersion: SemVer;\n    try {\n      parsedVersion = new SemVer(version);\n    } catch {\n      return null;\n    }\n    const result: GenericVersion = {\n      release: [parsedVersion.major, parsedVersion.minor, parsedVersion.patch],\n      prerelease:\n        parsedVersion.prerelease.length > 0\n          ? parsedVersion.prerelease.join('.')\n          : undefined,\n    };\n    const build = parsedVersion.build.at(0);\n    if (build) {\n      try {\n        result.release.push(parseInt(build));\n      } catch {\n        /* noop */\n      }\n    }\n    return result;\n  }\n}\n\nexport const api: VersioningApi = new GlasskubeVersioningApi();\nexport default api;\n"]}