{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/loose/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { regEx } from '../../../util/regex';\nimport type { GenericVersion } from '../generic';\nimport { GenericVersioningApi } from '../generic';\nimport type { VersioningApi } from '../types';\n\nexport const id = 'loose';\nexport const displayName = 'Loose';\nexport const urls = [];\nexport const supportsRanges = false;\n\nconst versionPattern = regEx(/^[vV]?(\\d+(?:\\.\\d+)*)(.*)$/);\nconst commitHashPattern = regEx(/^[a-f0-9]{7,40}$/);\nconst numericPattern = regEx(/^[0-9]+$/);\n\nclass LooseVersioningApi extends GenericVersioningApi {\n  protected _parse(version: string): GenericVersion | null {\n    if (commitHashPattern.test(version) && !numericPattern.test(version)) {\n      return null;\n    }\n    const matches = versionPattern.exec(version);\n    if (!matches) {\n      return null;\n    }\n    const [, prefix, suffix] = matches;\n    const release = prefix.split('.').map(Number);\n    if (release.length > 6) {\n      return null;\n    }\n    return { release, suffix: suffix || '' };\n  }\n\n  protected override _compare(version: string, other: string): number {\n    const parsed1 = this._parse(version);\n    const parsed2 = this._parse(other);\n    // istanbul ignore if\n    if (!(parsed1 && parsed2)) {\n      return 1;\n    }\n    const length = Math.max(parsed1.release.length, parsed2.release.length);\n    for (let i = 0; i < length; i += 1) {\n      const part1 = parsed1.release[i];\n      const part2 = parsed2.release[i];\n      // shorter is smaller 2.1 < 2.1.0\n      if (part1 === undefined) {\n        return -1;\n      }\n      if (part2 === undefined) {\n        return 1;\n      }\n      if (part1 !== part2) {\n        return part1 - part2;\n      }\n    }\n\n    if (parsed1.suffix && parsed2.suffix) {\n      return parsed1.suffix.localeCompare(parsed2.suffix, undefined, {\n        numeric: true,\n      });\n    }\n\n    if (parsed1.suffix) {\n      return -1;\n    }\n\n    if (parsed2.suffix) {\n      return 1;\n    }\n\n    // istanbul ignore next\n    return 0;\n  }\n}\n\nexport const api: VersioningApi = new LooseVersioningApi();\n\nexport default api;\n"]}