{"version":3,"file":"generic.js","sourceRoot":"","sources":["../../../lib/modules/versioning/generic.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport type { NewValueConfig, VersioningApi } from './types';\n\nexport interface GenericVersion {\n  release: number[];\n  /** prereleases are treated in the standard semver manner, if present */\n  prerelease?: string;\n  suffix?: string;\n}\nexport type VersionParser = (version: string) => GenericVersion;\n\nexport type VersionComparator = (version: string, other: string) => number;\n\nexport abstract class GenericVersioningApi<\n  T extends GenericVersion = GenericVersion,\n> implements VersioningApi\n{\n  private _getSection(version: string, index: number): number | null {\n    const parsed = this._parse(version);\n    return parsed && parsed.release.length > index\n      ? parsed.release[index]\n      : null;\n  }\n\n  protected _compare(version: string, other: string): number {\n    const left = this._parse(version);\n    const right = this._parse(other);\n\n    // istanbul ignore if\n    if (!(left && right)) {\n      return 1;\n    }\n\n    // support variable length compare\n    const length = Math.max(left.release.length, right.release.length);\n    for (let i = 0; i < length; i += 1) {\n      // 2.1 and 2.1.0 are equivalent\n      const part1 = left.release[i] ?? 0;\n      const part2 = right.release[i] ?? 0;\n      if (part1 !== part2) {\n        return part1 - part2;\n      }\n    }\n\n    if (\n      is.nonEmptyString(left.prerelease) &&\n      is.nonEmptyString(right.prerelease)\n    ) {\n      const pre = left.prerelease.localeCompare(right.prerelease, undefined, {\n        numeric: true,\n      });\n\n      if (pre !== 0) {\n        return pre;\n      }\n    } else if (is.nonEmptyString(left.prerelease)) {\n      return -1;\n    } else if (is.nonEmptyString(right.prerelease)) {\n      return 1;\n    }\n\n    return this._compareOther(left, right);\n  }\n\n  /*\n   * virtual\n   */\n\n  protected _compareOther(_left: T, _right: T): number {\n    return 0;\n  }\n\n  protected abstract _parse(version: string): T | null;\n\n  isValid(version: string): boolean {\n    return this._parse(version) !== null;\n  }\n\n  isCompatible(version: string, _current: string): boolean {\n    return this.isValid(version);\n  }\n\n  isStable(version: string): boolean {\n    const parsed = this._parse(version);\n    return !!(parsed && !parsed.prerelease);\n  }\n\n  isSingleVersion(version: string): boolean {\n    return this.isValid(version);\n  }\n\n  isVersion(version: string): boolean {\n    return this.isValid(version);\n  }\n\n  getMajor(version: string): number | null {\n    return this._getSection(version, 0);\n  }\n\n  getMinor(version: string): number | null {\n    return this._getSection(version, 1);\n  }\n\n  getPatch(version: string): number | null {\n    return this._getSection(version, 2);\n  }\n\n  equals(version: string, other: string): boolean {\n    return this._compare(version, other) === 0;\n  }\n\n  isGreaterThan(version: string, other: string): boolean {\n    return this._compare(version, other) > 0;\n  }\n\n  isLessThanRange(version: string, range: string): boolean {\n    return this._compare(version, range) < 0;\n  }\n\n  getSatisfyingVersion(versions: string[], range: string): string | null {\n    const result = versions.find((v) => this.equals(v, range));\n    return result ?? null;\n  }\n\n  minSatisfyingVersion(versions: string[], range: string): string | null {\n    const result = versions.find((v) => this.equals(v, range));\n    return result ?? null;\n  }\n\n  getNewValue({\n    currentValue,\n    currentVersion,\n    newVersion,\n  }: NewValueConfig): string | null {\n    if (currentVersion === `v${currentValue}`) {\n      return newVersion.replace(/^v/, '');\n    }\n    return newVersion ?? null;\n  }\n\n  sortVersions(version: string, other: string): number {\n    return this._compare(version, other);\n  }\n\n  matches(version: string, range: string): boolean {\n    return this.equals(version, range);\n  }\n\n  isSame(type: 'major' | 'minor' | 'patch', a: string, b: string): boolean {\n    if (type === 'major') {\n      return this.getMajor(a) === this.getMajor(b);\n    }\n    if (type === 'minor') {\n      return this.getMinor(a) === this.getMinor(b);\n    }\n    return this.getPatch(a) === this.getPatch(b);\n  }\n}\n"]}