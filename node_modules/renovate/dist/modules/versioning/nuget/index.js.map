{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/nuget/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { NewValueConfig, VersioningApi } from '../types';\nimport { parseRange, parseVersion } from './parser';\nimport {\n  coerceFloatingComponent,\n  getFloatingRangeLowerBound,\n  matches,\n  rangeToString,\n  tryBump,\n} from './range';\nimport type {\n  NugetBracketRange,\n  NugetFloatingRange,\n  NugetVersion,\n} from './types';\nimport { compare, versionToString } from './version';\n\nexport const id = 'nuget';\nexport const displayName = 'NuGet';\nexport const urls = [\n  'https://docs.microsoft.com/en-us/nuget/concepts/package-versioning',\n  'https://nugettools.azurewebsites.net/',\n];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies = ['pin', 'bump'];\n\nclass NugetVersioningApi implements VersioningApi {\n  isCompatible(version: string, _current?: string): boolean {\n    return this.isValid(version);\n  }\n\n  isSingleVersion(version: string): boolean {\n    const r = parseRange(version);\n    if (!r) {\n      return false;\n    }\n\n    return r.type === 'nuget-exact-range';\n  }\n\n  isStable(version: string): boolean {\n    const v = parseVersion(version);\n    if (v) {\n      return !v.prerelease;\n    }\n\n    const r = parseRange(version);\n    if (!r || r.type !== 'nuget-exact-range') {\n      return false;\n    }\n\n    return !r.version.prerelease;\n  }\n\n  isValid(input: string): boolean {\n    const v = parseVersion(input);\n    if (v) {\n      return true;\n    }\n\n    const r = parseRange(input);\n    if (r) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isVersion(input: string | undefined | null): boolean {\n    if (!input) {\n      return false;\n    }\n\n    const v = parseVersion(input);\n    if (!v) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getMajor(version: string): number | null {\n    const v = parseVersion(version);\n    if (!v) {\n      return null;\n    }\n\n    return v.major;\n  }\n\n  getMinor(version: string): number | null {\n    const v = parseVersion(version);\n    if (!v) {\n      return null;\n    }\n\n    return v.minor ?? null;\n  }\n\n  getPatch(version: string): number | null {\n    const v = parseVersion(version);\n    if (!v) {\n      return null;\n    }\n\n    return v.patch ?? null;\n  }\n\n  equals(version: string, other: string): boolean {\n    const x = parseVersion(version);\n    const y = parseVersion(other);\n    if (!x || !y) {\n      return false;\n    }\n\n    return compare(x, y) === 0;\n  }\n\n  isGreaterThan(version: string, other: string): boolean {\n    const x = parseVersion(version);\n    const y = parseVersion(other);\n    if (!x || !y) {\n      return false;\n    }\n\n    return compare(x, y) > 0;\n  }\n\n  isLessThanRange(version: string, range: string): boolean {\n    const v = parseVersion(version);\n    if (!v) {\n      return false;\n    }\n\n    const u = parseVersion(range);\n    if (u) {\n      return compare(v, u) < 0;\n    }\n\n    const r = parseRange(range);\n    if (!r) {\n      return false;\n    }\n\n    if (r.type === 'nuget-exact-range') {\n      return compare(v, r.version) < 0;\n    }\n\n    if (r.type === 'nuget-bracket-range') {\n      if (!r.min) {\n        return false;\n      }\n\n      const minBound =\n        r.min.type === 'nuget-version'\n          ? r.min\n          : getFloatingRangeLowerBound(r.min);\n      const cmp = compare(v, minBound);\n      return r.minInclusive ? cmp < 0 : cmp <= 0;\n    }\n\n    const minBound = getFloatingRangeLowerBound(r);\n    return compare(v, minBound) < 0;\n  }\n\n  getSatisfyingVersion(versions: string[], range: string): string | null {\n    const r = parseRange(range);\n    if (r) {\n      let result: string | null = null;\n      let vMax: NugetVersion | undefined;\n      for (const version of versions) {\n        const v = parseVersion(version);\n        if (!v) {\n          continue;\n        }\n\n        if (!matches(v, r)) {\n          continue;\n        }\n\n        if (!vMax || compare(v, vMax) > 0) {\n          vMax = v;\n          result = version;\n        }\n      }\n\n      return result;\n    }\n\n    const u = parseVersion(range);\n    if (u) {\n      let result: string | null = null;\n      let vMax: NugetVersion | undefined;\n      for (const version of versions) {\n        const v = parseVersion(version);\n        if (!v) {\n          continue;\n        }\n\n        if (compare(v, u) < 0) {\n          continue;\n        }\n\n        if (!vMax || compare(v, vMax) > 0) {\n          vMax = v;\n          result = version;\n        }\n      }\n\n      return result;\n    }\n\n    return null;\n  }\n\n  minSatisfyingVersion(versions: string[], range: string): string | null {\n    const r = parseRange(range);\n    if (r) {\n      let result: string | null = null;\n      let vMin: NugetVersion | undefined;\n      for (const version of versions) {\n        const v = parseVersion(version);\n        if (!v) {\n          continue;\n        }\n\n        if (!matches(v, r)) {\n          continue;\n        }\n\n        if (!vMin || compare(v, vMin) < 0) {\n          result = version;\n          vMin = v;\n        }\n      }\n\n      return result;\n    }\n\n    const u = parseVersion(range);\n    if (u) {\n      let result: string | null = null;\n      let vMin: NugetVersion | undefined;\n      for (const version of versions) {\n        const v = parseVersion(version);\n        if (!v) {\n          continue;\n        }\n\n        if (compare(v, u) < 0) {\n          continue;\n        }\n\n        if (!vMin || compare(v, vMin) < 0) {\n          result = version;\n          vMin = v;\n        }\n      }\n\n      return result;\n    }\n\n    return null;\n  }\n\n  getNewValue({\n    currentValue,\n    rangeStrategy,\n    currentVersion,\n    newVersion,\n  }: NewValueConfig): string | null {\n    const v = parseVersion(newVersion);\n    if (!v) {\n      return null;\n    }\n\n    if (rangeStrategy === 'pin') {\n      return rangeToString({ type: 'nuget-exact-range', version: v });\n    }\n\n    if (this.isVersion(currentValue)) {\n      return newVersion;\n    }\n\n    const r = parseRange(currentValue);\n    if (!r) {\n      return null;\n    }\n\n    if (this.isLessThanRange(newVersion, currentValue)) {\n      return currentValue;\n    }\n\n    if (r.type === 'nuget-exact-range') {\n      return rangeToString({ type: 'nuget-exact-range', version: v });\n    }\n\n    if (r.type === 'nuget-floating-range') {\n      const floating = r.floating;\n      if (!floating) {\n        return versionToString(v);\n      }\n\n      const res: NugetFloatingRange = { ...r };\n\n      if (floating === 'major') {\n        res.major = coerceFloatingComponent(v.major);\n        return tryBump(res, v, currentValue);\n      }\n      res.major = v.major;\n\n      if (floating === 'minor') {\n        res.minor = coerceFloatingComponent(v.minor);\n        return tryBump(res, v, currentValue);\n      }\n      res.minor = v.minor ?? 0;\n\n      if (floating === 'patch') {\n        res.patch = coerceFloatingComponent(v.patch);\n        return tryBump(res, v, currentValue);\n      }\n      res.patch = v.patch ?? 0;\n\n      res.revision = coerceFloatingComponent(v.revision);\n      return tryBump(res, v, currentValue);\n    }\n\n    const res: NugetBracketRange = { ...r };\n\n    if (!r.max) {\n      res.min = v;\n      res.minInclusive = true;\n      return rangeToString(res);\n    }\n\n    if (matches(v, r)) {\n      return currentValue;\n    }\n\n    if (!r.min) {\n      res.max = v;\n      res.maxInclusive = true;\n      return rangeToString(res);\n    }\n\n    res.max = v;\n    res.maxInclusive = true;\n    return rangeToString(res);\n  }\n\n  sortVersions(version: string, other: string): number {\n    const x = parseVersion(version);\n    const y = parseVersion(other);\n    if (!x || !y) {\n      return 0;\n    }\n\n    return compare(x, y);\n  }\n\n  matches(version: string, range: string): boolean {\n    const v = parseVersion(version);\n    if (!v) {\n      return false;\n    }\n\n    const u = parseVersion(range);\n    if (u) {\n      return compare(v, u) >= 0;\n    }\n\n    const r = parseRange(range);\n    if (!r) {\n      return false;\n    }\n\n    return matches(v, r);\n  }\n}\n\nexport const api: VersioningApi = new NugetVersioningApi();\n\nexport default api;\n"]}