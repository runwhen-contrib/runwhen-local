{"version":3,"file":"range.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/nuget/range.ts"],"names":[],"mappings":"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","sourcesContent":["import type { NugetFloatingRange, NugetRange, NugetVersion } from './types';\nimport { compare, versionToString } from './version';\n\nexport function getFloatingRangeLowerBound(\n  range: NugetFloatingRange,\n): NugetVersion {\n  const { major, minor = 0, patch = 0, revision = 0, prerelease } = range;\n  const res: NugetVersion = {\n    type: 'nuget-version',\n    major,\n    minor,\n    patch,\n    revision,\n  };\n\n  if (prerelease) {\n    const parts = prerelease.split('.');\n    const lastIdx = parts.length - 1;\n    const last = parts[lastIdx];\n    if (last === '*') {\n      parts[lastIdx] = '0';\n    } else {\n      parts[lastIdx] = last.replace(/\\*$/, '');\n    }\n    res.prerelease = parts.join('.');\n  }\n\n  return res;\n}\n\nexport function matches(v: NugetVersion, r: NugetRange): boolean {\n  if (r.type === 'nuget-exact-range') {\n    return compare(v, r.version) === 0;\n  }\n\n  if (r.type === 'nuget-floating-range') {\n    if (!r.prerelease && v.prerelease) {\n      return false;\n    }\n\n    const lowerBound = getFloatingRangeLowerBound(r);\n    return compare(v, lowerBound) >= 0;\n  }\n\n  let minBoundMatches = false;\n  let maxBoundMatches = false;\n\n  const { min, minInclusive, max, maxInclusive } = r;\n\n  if (min) {\n    const minBound =\n      min.type === 'nuget-version' ? min : getFloatingRangeLowerBound(min);\n    const cmp = compare(v, minBound);\n    minBoundMatches = minInclusive ? cmp >= 0 : cmp > 0;\n  } else {\n    minBoundMatches = true;\n  }\n\n  if (max) {\n    if (!(v.prerelease && !max.prerelease)) {\n      const cmp = compare(v, max);\n      maxBoundMatches = maxInclusive ? cmp <= 0 : cmp < 0;\n    }\n  } else {\n    maxBoundMatches = true;\n  }\n\n  return minBoundMatches && maxBoundMatches;\n}\n\nfunction floatingComponentToString(component: number): string {\n  const int = component / 10;\n  return int === 0 ? '*' : `${int}*`;\n}\n\nexport function coerceFloatingComponent(component: number | undefined): number {\n  return component ? Math.floor(component / 10) * 10 : 0;\n}\n\nexport function rangeToString(range: NugetRange): string {\n  if (range.type === 'nuget-exact-range') {\n    return `[${versionToString(range.version)}]`;\n  }\n\n  if (range.type === 'nuget-floating-range') {\n    const { major, minor, patch, revision, floating, prerelease } = range;\n    let res = '';\n\n    if (prerelease) {\n      res = `-${prerelease}`;\n    }\n\n    if (revision !== undefined) {\n      const revisionPart =\n        floating === 'revision'\n          ? floatingComponentToString(revision)\n          : `${revision}`;\n      res = `.${revisionPart}${res}`;\n    }\n\n    if (patch !== undefined) {\n      const patchPart =\n        floating === 'patch' ? floatingComponentToString(patch) : `${patch}`;\n      res = `.${patchPart}${res}`;\n    }\n\n    if (minor !== undefined) {\n      const minorPart =\n        floating === 'minor' ? floatingComponentToString(minor) : `${minor}`;\n      res = `.${minorPart}${res}`;\n    }\n\n    if (major !== undefined) {\n      const majorPart =\n        floating === 'major' ? floatingComponentToString(major) : `${major}`;\n      res = `${majorPart}${res}`;\n    }\n\n    return res;\n  }\n\n  const { min, max, minInclusive, maxInclusive } = range;\n  const leftBracket = minInclusive ? '[' : '(';\n  const rightBracket = maxInclusive ? ']' : ')';\n  if (min && max) {\n    const minStr =\n      min.type === 'nuget-version' ? versionToString(min) : rangeToString(min);\n    const maxStr = versionToString(max);\n    return `${leftBracket}${minStr},${maxStr}${rightBracket}`;\n  }\n\n  if (min) {\n    const minStr =\n      min.type === 'nuget-version' ? versionToString(min) : rangeToString(min);\n    return `${leftBracket}${minStr},${rightBracket}`;\n  }\n\n  const maxStr = versionToString(max);\n  return `${leftBracket},${maxStr}${rightBracket}`;\n}\n\nexport function tryBump(r: NugetRange, v: NugetVersion, x: string): string {\n  return matches(v, r) ? rangeToString(r) : x;\n}\n"]}