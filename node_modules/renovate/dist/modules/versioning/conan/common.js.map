{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/conan/common.ts"],"names":[],"mappings":"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","sourcesContent":["import * as semver from 'semver';\nimport { regEx } from '../../../util/regex';\nimport { coerceString } from '../../../util/string';\n\nexport function makeVersion(\n  version: string,\n  options: semver.RangeOptions,\n): string | boolean | null {\n  const splitVersion = version.split('.');\n  const prerelease = semver.prerelease(version, options);\n\n  if (prerelease && !options.includePrerelease) {\n    if (!Number.isNaN(parseInt(prerelease.toString()[0], 10))) {\n      const stringVersion = `${splitVersion[0]}.${splitVersion[1]}.${splitVersion[2]}`;\n      return semver.valid(stringVersion, options);\n    }\n    return false;\n  }\n\n  if (\n    options.loose &&\n    !semver.valid(version, options) &&\n    splitVersion.length !== 3\n  ) {\n    return semver.valid(semver.coerce(version, options), options);\n  }\n  return semver.valid(version, options);\n}\n\nexport function cleanVersion(version: string): string {\n  if (version) {\n    return version\n      .replace(\n        regEx(\n          /,|\\[|\\]|\"|include_prerelease=|include_prerelease|loose=|True|False/g,\n        ),\n        '',\n      )\n      .trim();\n  }\n  return version;\n}\n\nexport function getOptions(input: string): {\n  loose: boolean;\n  includePrerelease: boolean;\n} {\n  let includePrerelease = false;\n  let loose = true;\n  if (input) {\n    includePrerelease =\n      input.includes('include_prerelease') &&\n      !input.includes('include_prerelease=False');\n    loose = input.includes('loose=True') || !input.includes('loose=False');\n  }\n  return { loose, includePrerelease };\n}\n\nexport function containsOperators(input: string): boolean {\n  return regEx('[<=>^~]').test(input);\n}\n\nexport function matchesWithOptions(\n  version: string,\n  cleanRange: string,\n  options: semver.RangeOptions,\n): boolean {\n  let cleanedVersion = version;\n  if (\n    cleanedVersion &&\n    semver.prerelease(cleanedVersion) &&\n    options.includePrerelease\n  ) {\n    const coercedVersion = semver.coerce(cleanedVersion)?.raw;\n    cleanedVersion = coerceString(coercedVersion);\n  }\n  return semver.satisfies(cleanedVersion, cleanRange, options);\n}\n\nexport function findSatisfyingVersion(\n  versions: string[],\n  range: string,\n  compareRt: number,\n): string | null {\n  const options = getOptions(range);\n  let cur: any = null;\n  let curSV: any = null;\n  let index = 0;\n  let curIndex = -1;\n\n  for (const v of versions) {\n    const versionFromList = makeVersion(v, options);\n    if (typeof versionFromList === 'string') {\n      const cleanedVersion = cleanVersion(versionFromList);\n      const options = getOptions(range);\n      const cleanRange = cleanVersion(range);\n      if (matchesWithOptions(cleanedVersion, cleanRange, options)) {\n        if (\n          !cur ||\n          semver.compare(curSV, versionFromList, options) === compareRt\n        ) {\n          cur = versionFromList;\n          curIndex = index;\n          curSV = new semver.SemVer(cur, options);\n        }\n      }\n    }\n    index += 1;\n  }\n  if (curIndex >= 0) {\n    return versions[curIndex];\n  }\n  return null;\n}\n"]}