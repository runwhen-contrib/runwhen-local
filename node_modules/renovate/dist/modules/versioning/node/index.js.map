{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/node/index.ts"],"names":[],"mappings":";;;AA8CA,0BAEC;AAED,4BASC;AAED,0BAEC;AAED,oDAKC;AAED,oDAKC;;AA7ED,iCAAiC;AACjC,mCAA+B;AAC/B,sDAAwC;AAExC,yCAA6E;AAEhE,QAAA,EAAE,GAAG,MAAM,CAAC;AACZ,QAAA,WAAW,GAAG,SAAS,CAAC;AACxB,QAAA,IAAI,GAAG,EAAE,CAAC;AACV,QAAA,cAAc,GAAG,KAAK,CAAC;AAEpC,SAAS,cAAc,CAAC,KAAa;IACnC,MAAM,QAAQ,GAAG,IAAA,kCAAuB,EAAC,KAAK,CAAC,CAAC;IAChD,IAAI,QAAQ,EAAE,CAAC;QACb,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAChD,OAAO,IAAI,KAAK,EAAE,CAAC;IACrB,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,WAAW,CAAC,EACnB,YAAY,EACZ,aAAa,EACb,cAAc,EACd,UAAU,GACK;IACf,yDAAyD;IACzD,IAAI,aAAa,KAAK,KAAK,IAAI,IAAA,kCAAuB,EAAC,YAAY,CAAC,EAAE,CAAC;QACrE,MAAM,WAAW,GAAG,IAAA,iCAAsB,EAAC,UAAU,CAAC,CAAC;QACvD,IAAI,WAAW,EAAE,QAAQ,EAAE,CAAC;YAC1B,OAAO,WAAW,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAC5C,CAAC;IACH,CAAC;IACD,MAAM,GAAG,GAAG,aAAG,CAAC,WAAW,CAAC;QAC1B,YAAY,EAAE,cAAc,CAAC,YAAY,CAAC;QAC1C,aAAa;QACb,cAAc;QACd,UAAU;KACX,CAAC,CAAC;IACH,IAAI,GAAG,IAAI,IAAA,eAAS,EAAC,GAAG,CAAC,EAAE,CAAC;QAC1B,+BAA+B;QAC/B,OAAO,IAAA,cAAK,EAAC,GAAG,CAAC,CAAC;IACpB,CAAC;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAED,SAAgB,OAAO,CAAC,OAAe;IACrC,OAAO,aAAG,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;AAC9C,CAAC;AAED,SAAgB,QAAQ,CAAC,OAAe;IACtC,IAAI,aAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;QAC1B,MAAM,QAAQ,GAAG,IAAA,iCAAsB,EAAC,OAAO,CAAC,CAAC;QACjD,IAAI,QAAQ,EAAE,GAAG,EAAE,CAAC;YAClB,uDAAuD;YACvD,OAAO,gBAAQ,CAAC,KAAK,EAAE,GAAG,gBAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAgB,OAAO,CAAC,OAAe,EAAE,KAAa;IACpD,OAAO,aAAG,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD,CAAC;AAED,SAAgB,oBAAoB,CAClC,QAAkB,EAClB,KAAa;IAEb,OAAO,aAAG,CAAC,oBAAoB,CAAC,QAAQ,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AACnE,CAAC;AAED,SAAgB,oBAAoB,CAClC,QAAkB,EAClB,KAAa;IAEb,OAAO,aAAG,CAAC,oBAAoB,CAAC,QAAQ,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AACnE,CAAC;AAEY,QAAA,GAAG,GAAkB;IAChC,GAAG,aAAG;IACN,QAAQ;IACR,WAAW;IACX,OAAO;IACP,OAAO;IACP,oBAAoB;IACpB,oBAAoB;IACpB,0BAA0B,EAAE,IAAI;CACjC,CAAC;AAEF,kBAAe,WAAG,CAAC","sourcesContent":["import { DateTime } from 'luxon';\nimport { valid } from 'semver';\nimport npm, { isVersion } from '../npm';\nimport type { NewValueConfig, VersioningApi } from '../types';\nimport { findScheduleForCodename, findScheduleForVersion } from './schedule';\n\nexport const id = 'node';\nexport const displayName = 'Node.js';\nexport const urls = [];\nexport const supportsRanges = false;\n\nfunction normalizeValue(value: string): string {\n  const schedule = findScheduleForCodename(value);\n  if (schedule) {\n    const major = schedule.version.replace('v', '');\n    return `^${major}`;\n  }\n  return value;\n}\n\nfunction getNewValue({\n  currentValue,\n  rangeStrategy,\n  currentVersion,\n  newVersion,\n}: NewValueConfig): string | null {\n  // Try to use codename if the current value is a codename\n  if (rangeStrategy !== 'pin' && findScheduleForCodename(currentValue)) {\n    const newSchedule = findScheduleForVersion(newVersion);\n    if (newSchedule?.codename) {\n      return newSchedule.codename.toLowerCase();\n    }\n  }\n  const res = npm.getNewValue({\n    currentValue: normalizeValue(currentValue),\n    rangeStrategy,\n    currentVersion,\n    newVersion,\n  });\n  if (res && isVersion(res)) {\n    // normalize out any 'v' prefix\n    return valid(res);\n  }\n  return res;\n}\n\nexport function isValid(version: string): boolean {\n  return npm.isValid(normalizeValue(version));\n}\n\nexport function isStable(version: string): boolean {\n  if (npm.isStable(version)) {\n    const schedule = findScheduleForVersion(version);\n    if (schedule?.lts) {\n      // TODO: use the exact release that started LTS (#9716)\n      return DateTime.local() > DateTime.fromISO(schedule.lts);\n    }\n  }\n  return false;\n}\n\nexport function matches(version: string, range: string): boolean {\n  return npm.matches(version, normalizeValue(range));\n}\n\nexport function getSatisfyingVersion(\n  versions: string[],\n  range: string,\n): string | null {\n  return npm.getSatisfyingVersion(versions, normalizeValue(range));\n}\n\nexport function minSatisfyingVersion(\n  versions: string[],\n  range: string,\n): string | null {\n  return npm.minSatisfyingVersion(versions, normalizeValue(range));\n}\n\nexport const api: VersioningApi = {\n  ...npm,\n  isStable,\n  getNewValue,\n  isValid,\n  matches,\n  getSatisfyingVersion,\n  minSatisfyingVersion,\n  allowUnstableMajorUpgrades: true,\n};\n\nexport default api;\n"]}