{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/azure-rest-api/index.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAE5C,wCAAkD;AAGrC,QAAA,EAAE,GAAG,gBAAgB,CAAC;AACtB,QAAA,WAAW,GAAG,gBAAgB,CAAC;AAE/B,QAAA,IAAI,GAAG;IAClB,2FAA2F;CAC5F,CAAC;AAEW,QAAA,cAAc,GAAG,KAAK,CAAC;AAEpC,MAAM,4BAA4B,GAAG,IAAA,aAAK,EACxC,uEAAuE,CACxE,CAAC;AAEF,MAAM,yBAA0B,SAAQ,8BAAoB;IAChD,MAAM,CAAC,OAAe;QAC9B,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,WAAW,GAAG,4BAA4B,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC;QAEvE,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,WAAW,CAAC;QAErD,OAAO;YACL,OAAO,EAAE,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAClD,UAAU;SACX,CAAC;IACJ,CAAC;IAEkB,QAAQ,CAAC,QAAgB,EAAE,MAAc;QAC1D,IAAI,QAAQ,KAAK,MAAM,EAAE,CAAC;YACxB,OAAO,CAAC,CAAC;QACX,CAAC;QAED,OAAO,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;CACF;AAEY,QAAA,GAAG,GAAkB,IAAI,yBAAyB,EAAE,CAAC;AAElE,kBAAe,WAAG,CAAC","sourcesContent":["import { regEx } from '../../../util/regex';\nimport type { GenericVersion } from '../generic';\nimport { GenericVersioningApi } from '../generic';\nimport type { VersioningApi } from '../types';\n\nexport const id = 'azure-rest-api';\nexport const displayName = 'azure-rest-api';\n\nexport const urls = [\n  'https://github.com/microsoft/api-guidelines/blob/vNext/azure/Guidelines.md#api-versioning',\n];\n\nexport const supportsRanges = false;\n\nconst AZURE_REST_API_VERSION_REGEX = regEx(\n  /^(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})(?<prerelease>-[a-z]+)?$/,\n);\n\nclass AzureRestApiVersioningApi extends GenericVersioningApi {\n  protected _parse(version: string): GenericVersion | null {\n    if (!version) {\n      return null;\n    }\n\n    const matchGroups = AZURE_REST_API_VERSION_REGEX.exec(version)?.groups;\n\n    if (!matchGroups) {\n      return null;\n    }\n\n    const { year, month, day, prerelease } = matchGroups;\n\n    return {\n      release: [parseInt(`${year}${month}${day}`), 0, 0],\n      prerelease,\n    };\n  }\n\n  protected override _compare(_version: string, _other: string): number {\n    if (_version === _other) {\n      return 0;\n    }\n\n    return _version > _other ? 1 : -1;\n  }\n}\n\nexport const api: VersioningApi = new AzureRestApiVersioningApi();\n\nexport default api;\n"]}