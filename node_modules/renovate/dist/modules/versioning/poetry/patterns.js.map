{"version":3,"file":"patterns.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/poetry/patterns.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAE5C;;;;GAIG;AAEH,kBAAkB;AACL,QAAA,eAAe,GAAG,IAAA,aAAK,EAChC;IACE,GAAG;IACH,IAAI;IACJ,KAAK;IACH,wBAAwB,EAAY,QAAQ;IAC5C,sCAAsC,EAAE,kBAAkB;IAC1D,SAAS,EAA2B,cAAc;IAChD,QAAQ;IACR,6CAA6C;IAC7C,QAAQ;IACR,mBAAmB;IACrB,IAAI;IACJ,UAAU,EAA0B,eAAe;IACjD,yBAAyB;IACzB,GAAG;IACH,KAAK;IACH,QAAQ;IACR,uBAAuB;IACvB,QAAQ;IACR,qBAAqB;IACvB,GAAG;IACL,IAAI;IACJ,SAAS,EAA2B,cAAc;IAChD,QAAQ;IACR,eAAe;IACf,QAAQ;IACR,mBAAmB;IACrB,IAAI;IACN,GAAG;IACH,gDAAgD,EAAE,gBAAgB;IAClE,GAAG;CACJ,CAAC,IAAI,CAAC,EAAE,CAAC,CACX,CAAC;AAES,QAAA,wBAAwB,GAAG,IAAA,aAAK,EAC3C,oCAAoC,CACrC,CAAC","sourcesContent":["import { regEx } from '../../../util/regex';\n\n/**\n * regex used by poetry.core.version.Version to parse union of SemVer\n * (with a subset of pre/post/dev tags) and PEP440\n * see: https://github.com/python-poetry/poetry-core/blob/01c0472d9cef3e1a4958364122dd10358a9bd719/poetry/core/version/version.py\n */\n\n// prettier-ignore\nexport const VERSION_PATTERN = regEx(\n    [\n      '^',\n      'v?',\n      '(?:',\n        '(?:(?<epoch>[0-9]+)!)?',           // epoch\n        '(?<release>[0-9]+(?:\\\\.[0-9]+){0,2})', // release segment\n        '(?<pre>',                          // pre-release\n          '[-_.]?',\n          '(?<pre_l>(a|b|c|rc|alpha|beta|pre|preview))',\n          '[-_.]?',\n          '(?<pre_n>[0-9]+)?',\n        ')?',\n        '(?<post>',                         // post release\n          '(?:-(?<post_n1>[0-9]+))',\n          '|',\n          '(?:',\n            '[-_.]?',\n            '(?<post_l>post|rev|r)',\n            '[-_.]?',\n            '(?<post_n2>[0-9]+)?',\n          ')',\n        ')?',\n        '(?<dev>',                          // dev release\n          '[-_.]?',\n          '(?<dev_l>dev)',\n          '[-_.]?',\n          '(?<dev_n>[0-9]+)?',\n        ')?',\n      ')',\n      '(?:\\\\+(?<local>[a-z0-9]+(?:[-_.][a-z0-9]+)*))?', // local version\n      '$'\n    ].join('')\n  );\n\nexport const RANGE_COMPARATOR_PATTERN = regEx(\n  /(\\s*(?:\\^|~|[><!]?=|[><]|\\|\\|)\\s*)/,\n);\n"]}