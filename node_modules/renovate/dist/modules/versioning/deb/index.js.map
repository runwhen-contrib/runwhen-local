{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/deb/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { regEx } from '../../../util/regex';\nimport type { GenericVersion } from '../generic';\nimport { GenericVersioningApi } from '../generic';\nimport type { VersioningApi } from '../types';\n\nexport const id = 'deb';\nexport const displayName = 'Deb version';\nexport const urls = [\n  'https://www.debian.org/doc/debian-policy/ch-controlfields.html#version',\n  'https://manpages.debian.org/unstable/dpkg-dev/deb-version.7.en.html',\n];\nexport const supportsRanges = false;\n\nconst epochPattern = regEx(/^\\d+$/);\nconst upstreamVersionPattern = regEx(/^[-+.:~A-Za-z\\d]+$/);\nconst debianRevisionPattern = regEx(/^[+.~A-Za-z\\d]*$/);\nconst numericPattern = regEx(/\\d+/g);\nconst characterOrder =\n  '~ ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+-.:';\nconst numericChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nexport interface DebVersion extends GenericVersion {\n  /**\n   * epoch, defaults to 0 if not present, are used to leave version mistakes and previous\n   * versioning schemes behind.\n   */\n  epoch: number;\n  /**\n   * upstreamVersion is the main version part: it defines the version of origin software\n   * that was packaged.\n   */\n  upstreamVersion: string;\n  /**\n   * debianRevision is used to distinguish between different versions of packaging for the\n   * same upstream version.\n   */\n  debianRevision: string;\n}\n\nclass DebVersioningApi extends GenericVersioningApi {\n  protected _parse(version: string): DebVersion | null {\n    /* Splitting version into \"[epoch:]upstream-version[-debian-revision]\"\n       All found numbers are exported as release info */\n\n    // split of first element by `:` as epoch:\n    const epochSplit = version.split(':');\n    const epochStr = epochSplit.length > 1 ? epochSplit.shift()! : '0';\n    const remainingVersion = epochSplit.join(':');\n\n    // split of last element by `-`\n    if (remainingVersion.endsWith('-')) {\n      // Forbid debian revision (it would result in `2.4.0-` == `2.4.0`)\n      return null;\n    }\n    const debianSplit = remainingVersion.split('-');\n    const debianRevision = debianSplit.length > 1 ? debianSplit.pop()! : '';\n    const upstreamVersion = debianSplit.join('-');\n\n    if (\n      !epochPattern.test(epochStr) ||\n      !upstreamVersionPattern.test(upstreamVersion) ||\n      !debianRevisionPattern.test(debianRevision)\n    ) {\n      return null;\n    }\n    const release = [...remainingVersion.matchAll(numericPattern)].map((m) =>\n      parseInt(m[0], 10),\n    );\n    return {\n      epoch: parseInt(epochStr, 10),\n      upstreamVersion,\n      debianRevision,\n      release,\n      suffix: debianRevision,\n    };\n  }\n\n  protected _compare_string(a: string, b: string): number {\n    /* Special string sorting based on official specification:\n     * https://manpages.debian.org/unstable/dpkg-dev/deb-version.7.en.html#Sorting_algorithm\n     * The string is compared by continuous blocks of a) non-digit and b) digit characters.\n     * Non-digit blocks are compared lexicographically with a custom character order.\n     * Digit blocks are compared numerically.\n     * We are alternating between both modes until a difference is found.\n     */\n    let charPos = 0;\n    while (charPos < a.length || charPos < b.length) {\n      const aChar = a.charAt(charPos);\n      const bChar = b.charAt(charPos);\n      if (numericChars.includes(aChar) && numericChars.includes(bChar)) {\n        // numeric comparison of the whole block\n        let aNumericEnd = charPos + 1;\n        while (numericChars.includes(a.charAt(aNumericEnd))) {\n          aNumericEnd += 1;\n        }\n        let bNumericEnd = charPos + 1;\n        while (numericChars.includes(b.charAt(bNumericEnd))) {\n          bNumericEnd += 1;\n        }\n        const numericCmp = a\n          .substring(charPos, aNumericEnd)\n          .localeCompare(b.substring(charPos, bNumericEnd), undefined, {\n            numeric: true,\n          });\n        if (numericCmp !== 0) {\n          return numericCmp;\n        }\n        charPos = aNumericEnd; // the same as bNumericEnd as both are the same\n        continue;\n      }\n      if (aChar !== bChar) {\n        // Lexicographical comparison\n        // numeric character is treated like end of string (they are part of a new block)\n        const aPriority = characterOrder.indexOf(\n          numericChars.includes(aChar) || aChar === '' ? ' ' : aChar,\n        );\n        const bPriority = characterOrder.indexOf(\n          numericChars.includes(bChar) || bChar === '' ? ' ' : bChar,\n        );\n        return Math.sign(aPriority - bPriority);\n      }\n      charPos += 1;\n    }\n    return 0;\n  }\n\n  protected override _compare(version: string, other: string): number {\n    const parsed1 = this._parse(version);\n    const parsed2 = this._parse(other);\n    if (!(parsed1 && parsed2)) {\n      return 1;\n    }\n    if (parsed1.epoch !== parsed2.epoch) {\n      return Math.sign(parsed1.epoch - parsed2.epoch);\n    }\n    const upstreamVersionDifference = this._compare_string(\n      parsed1.upstreamVersion,\n      parsed2.upstreamVersion,\n    );\n    if (upstreamVersionDifference !== 0) {\n      return upstreamVersionDifference;\n    }\n    return this._compare_string(parsed1.debianRevision, parsed2.debianRevision);\n  }\n}\n\nexport const api: VersioningApi = new DebVersioningApi();\n\nexport default api;\n"]}