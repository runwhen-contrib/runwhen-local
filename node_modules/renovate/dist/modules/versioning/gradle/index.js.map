{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/gradle/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RangeStrategy } from '../../../types/versioning';\nimport { regEx } from '../../../util/regex';\nimport mavenVersion from '../maven';\nimport type { NewValueConfig, VersioningApi } from '../types';\nimport {\n  TokenType,\n  compare,\n  isValid,\n  isVersion,\n  parse,\n  parseMavenBasedRange,\n  parsePrefixRange,\n  parseSingleVersionRange,\n} from './compare';\n\nexport const id = 'gradle';\nexport const displayName = 'Gradle';\nexport const urls = [\n  'https://docs.gradle.org/current/userguide/single_versions.html#version_ordering',\n];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies: RangeStrategy[] = ['pin', 'bump'];\n\nconst equals = (a: string, b: string): boolean => compare(a, b) === 0;\n\nconst getMajor = (version: string): number | null => {\n  const tokens = parse(version?.replace(regEx(/^v/i), ''));\n  if (tokens) {\n    const majorToken = tokens?.[0];\n    if (majorToken && majorToken.type === TokenType.Number) {\n      return majorToken.val as number;\n    }\n  }\n  return null;\n};\n\nconst getMinor = (version: string): number | null => {\n  const tokens = parse(version?.replace(regEx(/^v/i), ''));\n  if (tokens) {\n    const majorToken = tokens[0];\n    const minorToken = tokens[1];\n    if (\n      majorToken &&\n      majorToken.type === TokenType.Number &&\n      minorToken &&\n      minorToken.type === TokenType.Number\n    ) {\n      return minorToken.val as number;\n    }\n    return 0;\n  }\n  return null;\n};\n\nconst getPatch = (version: string): number | null => {\n  const tokens = parse(version?.replace(regEx(/^v/i), ''));\n  if (tokens) {\n    const majorToken = tokens[0];\n    const minorToken = tokens[1];\n    const patchToken = tokens[2];\n    if (\n      majorToken &&\n      majorToken.type === TokenType.Number &&\n      minorToken &&\n      minorToken.type === TokenType.Number &&\n      patchToken &&\n      patchToken.type === TokenType.Number\n    ) {\n      return patchToken.val as number;\n    }\n    return 0;\n  }\n  return null;\n};\n\nconst isGreaterThan = (a: string, b: string): boolean => compare(a, b) === 1;\n\nconst unstable = new Set([\n  'dev',\n  'a',\n  'alpha',\n  'b',\n  'beta',\n  'm',\n  'mt',\n  'milestone',\n  'rc',\n  'cr',\n  'preview',\n  'snapshot',\n]);\n\nconst isStable = (version: string): boolean => {\n  const tokens = parse(version);\n  if (tokens) {\n    for (const token of tokens) {\n      if (token.type === TokenType.String) {\n        const val = token.val.toString().toLowerCase();\n        if (unstable.has(val)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  return false;\n};\n\nconst matches = (a: string, b: string): boolean => {\n  const versionTokens = parse(a);\n  if (!a || !versionTokens || !b) {\n    return false;\n  }\n  if (isVersion(b)) {\n    return equals(a, b);\n  }\n\n  const singleVersionRange = parseSingleVersionRange(b);\n  if (singleVersionRange) {\n    const { val } = singleVersionRange;\n    return equals(a, val);\n  }\n\n  const prefixRange = parsePrefixRange(b);\n  if (prefixRange) {\n    const tokens = prefixRange.tokens;\n    if (tokens.length === 0) {\n      return true;\n    }\n    const x = versionTokens\n      .slice(0, tokens.length)\n      .map(({ val }) => val)\n      .join('.');\n    const y = tokens.map(({ val }) => val).join('.');\n    return equals(x, y);\n  }\n\n  const mavenBasedRange = parseMavenBasedRange(b);\n  if (!mavenBasedRange) {\n    return false;\n  }\n\n  const { leftBound, leftVal, rightBound, rightVal } = mavenBasedRange;\n  let leftResult = true;\n  let rightResult = true;\n\n  if (leftVal) {\n    leftResult =\n      leftBound === 'exclusive'\n        ? compare(leftVal, a) === -1\n        : compare(leftVal, a) !== 1;\n  }\n\n  if (rightVal) {\n    rightResult =\n      rightBound === 'exclusive'\n        ? compare(a, rightVal) === -1\n        : compare(a, rightVal) !== 1;\n  }\n\n  return leftResult && rightResult;\n};\n\nfunction getSatisfyingVersion(\n  versions: string[],\n  range: string,\n): string | null {\n  return versions.reduce((result: string | null, version) => {\n    if (matches(version, range)) {\n      if (!result) {\n        return version;\n      }\n      if (isGreaterThan(version, result)) {\n        return version;\n      }\n    }\n    return result;\n  }, null);\n}\n\nfunction minSatisfyingVersion(\n  versions: string[],\n  range: string,\n): string | null {\n  return versions.reduce((result: string | null, version) => {\n    if (matches(version, range)) {\n      if (!result) {\n        return version;\n      }\n      if (compare(version, result) === -1) {\n        return version;\n      }\n    }\n    return result;\n  }, null);\n}\n\nfunction getNewValue({\n  currentValue,\n  rangeStrategy,\n  newVersion,\n}: NewValueConfig): string | null {\n  if (isVersion(currentValue) || rangeStrategy === 'pin') {\n    return newVersion;\n  }\n\n  // Check if our version is of the form \"1.2.+\"\n  const prefixRange = parsePrefixRange(currentValue);\n  const parsedNewVersion = parse(newVersion);\n  if (prefixRange && parsedNewVersion) {\n    if (prefixRange.tokens.length > 0) {\n      if (prefixRange.tokens.length <= parsedNewVersion.length) {\n        const newPrefixed = prefixRange.tokens\n          .map((_, i) => parsedNewVersion[i].val)\n          .join('.');\n\n        return `${newPrefixed}.+`;\n      } else {\n        // our new version is shorter than our prefix range so drop our prefix range\n        return newVersion;\n      }\n    } else {\n      // our version is already \"+\" which includes ever version\n      return null;\n    }\n  }\n\n  return mavenVersion.getNewValue({ currentValue, rangeStrategy, newVersion });\n}\n\nexport const api: VersioningApi = {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  isCompatible: isVersion,\n  isGreaterThan,\n  isSingleVersion: isVersion,\n  isStable,\n  isValid,\n  isVersion,\n  matches,\n  getSatisfyingVersion,\n  minSatisfyingVersion,\n  getNewValue,\n  sortVersions: compare,\n};\n\nexport default api;\n"]}