{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/platform/gitea/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport type { MergeStrategy } from '../../../config/types';\nimport { CONFIG_GIT_URL_UNAVAILABLE } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport * as hostRules from '../../../util/host-rules';\nimport { regEx } from '../../../util/regex';\nimport { parseUrl } from '../../../util/url';\nimport { getPrBodyStruct } from '../pr-body';\nimport type { GitUrlOption, Pr } from '../types';\nimport type { PR, PRMergeMethod, Repo } from './types';\n\nexport function smartLinks(body: string): string {\n  return body?.replace(regEx(/\\]\\(\\.\\.\\/pull\\//g), '](pulls/');\n}\n\nexport function trimTrailingApiPath(url: string): string {\n  return url?.replace(regEx(/api\\/v1\\/?$/g), '');\n}\n\nexport function getRepoUrl(\n  repo: Repo,\n  gitUrl: GitUrlOption | undefined,\n  endpoint: string,\n): string {\n  if (gitUrl === 'ssh') {\n    if (!repo.ssh_url) {\n      throw new Error(CONFIG_GIT_URL_UNAVAILABLE);\n    }\n    logger.debug(`Using SSH URL: ${repo.ssh_url}`);\n    return repo.ssh_url;\n  }\n\n  // Find options for current host and determine Git endpoint\n  const opts = hostRules.find({\n    hostType: 'gitea',\n    url: endpoint,\n  });\n\n  if (gitUrl === 'endpoint') {\n    const url = parseUrl(endpoint);\n    if (!url) {\n      throw new Error(CONFIG_GIT_URL_UNAVAILABLE);\n    }\n    url.username = opts.token ?? '';\n    url.pathname = `${url.pathname}${repo.full_name}.git`;\n    logger.debug(\n      { url: url.toString() },\n      'using URL based on configured endpoint',\n    );\n    return url.toString();\n  }\n\n  if (!repo.clone_url) {\n    throw new Error(CONFIG_GIT_URL_UNAVAILABLE);\n  }\n\n  logger.debug(`Using HTTP URL: ${repo.clone_url}`);\n  const repoUrl = parseUrl(repo.clone_url);\n  if (!repoUrl) {\n    throw new Error(CONFIG_GIT_URL_UNAVAILABLE);\n  }\n  repoUrl.username = opts.token ?? '';\n  return repoUrl.toString();\n}\n\nexport function getMergeMethod(\n  strategy: MergeStrategy | undefined,\n): PRMergeMethod | null {\n  switch (strategy) {\n    case 'fast-forward':\n      return 'rebase';\n    case 'merge-commit':\n      return 'merge';\n    case 'rebase':\n      return 'rebase-merge';\n    case 'squash':\n      return strategy;\n    case 'auto':\n    default:\n      return null;\n  }\n}\n\nexport const API_PATH = '/api/v1';\n\nexport const DRAFT_PREFIX = 'WIP: ';\nconst reconfigurePrRegex = regEx(/reconfigure$/g);\n\nexport function toRenovatePR(data: PR, author: string | null): Pr | null {\n  if (!data) {\n    return null;\n  }\n\n  if (\n    !data.base?.ref ||\n    !data.head?.label ||\n    !data.head?.sha ||\n    !data.head?.repo?.full_name\n  ) {\n    logger.trace(\n      `Skipping Pull Request #${data.number} due to missing base and/or head branch`,\n    );\n    return null;\n  }\n\n  const createdBy = data.user?.username;\n  if (\n    createdBy &&\n    author &&\n    !reconfigurePrRegex.test(data.head.label) &&\n    createdBy !== author\n  ) {\n    return null;\n  }\n\n  let title = data.title;\n  let isDraft = false;\n  if (title.startsWith(DRAFT_PREFIX)) {\n    title = title.substring(DRAFT_PREFIX.length);\n    isDraft = true;\n  }\n  const labels = (data?.labels ?? []).map((l) => l.name);\n\n  return {\n    labels,\n    number: data.number,\n    state: data.merged ? 'merged' : data.state,\n    title,\n    isDraft,\n    bodyStruct: getPrBodyStruct(data.body),\n    sha: data.head.sha,\n    sourceBranch: data.head.label,\n    targetBranch: data.base.ref,\n    sourceRepo: data.head.repo.full_name,\n    createdAt: data.created_at,\n    cannotMergeReason: data.mergeable\n      ? undefined\n      : `pr.mergeable=\"${data.mergeable}\"`,\n    hasAssignees: !!(data.assignee?.login ?? is.nonEmptyArray(data.assignees)),\n  };\n}\n\n/**\n * Check if a repository is usable.\n * A repo isn't usable if one of the following conditions is met:\n * - The repo is a `mirror`\n * - We don't have pull or push permissions\n * - Pull requests are disabled\n * @param repo Repo to check\n * @returns  `true` if the repository is usable, `false` otherwise\n */\nexport function usableRepo(repo: Repo): boolean {\n  if (repo.mirror === true) {\n    return false;\n  }\n\n  if (repo.permissions.pull === false || repo.permissions.push === false) {\n    logger.debug(\n      `Skipping repository ${repo.full_name} because of missing pull or push permissions`,\n    );\n    return false;\n  }\n\n  if (repo.has_pull_requests === false) {\n    logger.debug(\n      `Skipping repository ${repo.full_name} because pull requests are disabled`,\n    );\n    return false;\n  }\n  return true;\n}\n"]}