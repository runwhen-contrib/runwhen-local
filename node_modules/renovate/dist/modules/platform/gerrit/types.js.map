{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../lib/modules/platform/gerrit/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { FindPRConfig } from '../types';\n\nexport interface GerritFindPRConfig extends FindPRConfig {\n  label?: string;\n}\n\n/**\n * The Interfaces for the Gerrit API Responses ({@link https://gerrit-review.googlesource.com/Documentation/rest-api.html | REST-API})\n * minimized to only needed properties.\n *\n * @packageDocumentation\n */\n\nexport interface GerritProjectInfo {\n  id: string;\n  name: string;\n  state?: 'ACTIVE' | 'READ_ONLY' | 'HIDDEN';\n  labels?: Record<string, GerritLabelTypeInfo>;\n}\n\nexport interface GerritLabelTypeInfo {\n  values: Record<number, string>;\n  default_value: number;\n}\n\nexport interface GerritBranchInfo {\n  ref: string;\n  revision: string;\n}\n\nexport type GerritChangeStatus = 'NEW' | 'MERGED' | 'ABANDONED';\n\nexport type GerritReviewersType = 'REVIEWER' | 'CC' | 'REMOVED';\n\nexport interface GerritChange {\n  branch: string;\n  change_id: string;\n  subject: string;\n  status: GerritChangeStatus;\n  created: string;\n  submittable?: boolean;\n  _number: number;\n  labels?: Record<string, GerritLabelInfo>;\n  reviewers?: Record<GerritReviewersType, GerritAccountInfo[]>;\n  messages?: GerritChangeMessageInfo[];\n  current_revision: string;\n  /**\n   * All patch sets of this change as a map that maps the commit ID of the patch set to a RevisionInfo entity.\n   */\n  revisions: Record<string, GerritRevisionInfo>;\n  problems: unknown[];\n}\n\nexport interface GerritCommitInfo {\n  message: string;\n}\n\nexport interface GerritRevisionInfo {\n  uploader: GerritAccountInfo;\n  /**\n   * The Git reference for the patch set.\n   */\n  ref: string;\n  actions?: Record<string, GerritActionInfo>;\n  commit: GerritCommitInfo;\n}\n\nexport interface GerritChangeMessageInfo {\n  id: string;\n  message: string;\n  tag?: string;\n}\n\nexport interface GerritLabelInfo {\n  approved?: GerritAccountInfo;\n  rejected?: GerritAccountInfo;\n  /** If true, the label blocks submit operation. If not set, the default is false. */\n  blocking?: boolean;\n}\n\nexport interface GerritActionInfo {\n  method?: string;\n  enabled?: boolean;\n}\n\nexport interface GerritAccountInfo {\n  _account_id: number;\n  username?: string;\n}\n\nexport interface GerritMergeableInfo {\n  submit_type:\n    | 'MERGE_IF_NECESSARY'\n    | 'FAST_FORWARD_ONLY'\n    | 'REBASE_IF_NECESSARY'\n    | 'REBASE_ALWAYS'\n    | 'MERGE_ALWAYS'\n    | 'CHERRY_PICK';\n  mergeable: boolean;\n}\n"]}