{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../lib/modules/platform/bitbucket-server/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { HTTPError, Response } from 'got';\nimport type { Pr } from '../types';\n\nexport interface BbsConfig {\n  bbUseDefaultReviewers: boolean;\n  fileList: any[];\n  mergeMethod: string;\n  owner: string;\n  projectKey: string;\n  repository: string;\n  repositorySlug: string;\n\n  prVersions: Map<number, number>;\n  ignorePrAuthor: boolean;\n  username: string;\n}\n\nexport interface BbsPr extends Pr {\n  version?: number;\n}\n\nexport type BbsRestPrState = 'DECLINED' | 'OPEN' | 'MERGED';\n\nexport interface BbsRestBranchRef {\n  displayId: string;\n  id: string;\n}\n\nexport interface BbsRestUser {\n  name: string;\n}\n\nexport interface BbsRestUserRef {\n  user: BbsRestUser;\n}\n\n// https://docs.atlassian.com/bitbucket-server/rest/7.0.1/bitbucket-rest.html#idp280\nexport interface BbsRestPr {\n  createdDate: string;\n  updatedDate: number;\n  description: string;\n  fromRef: BbsRestBranchRef;\n  id: number;\n  reviewers: BbsRestUserRef[];\n  state: BbsRestPrState;\n  title: string;\n  toRef: BbsRestBranchRef;\n  version?: number;\n}\n\nexport interface BbsRestRepo {\n  id: number;\n  slug: string;\n  project: { key: string };\n  origin?: { name: string; slug: string }; // only present in forks\n  links: {\n    clone?: { href: string; name: string }[];\n  };\n}\n\nexport interface BbsRestBranch {\n  displayId: string;\n}\n\nexport interface BitbucketErrorResponse {\n  errors?: {\n    exceptionName?: string;\n    reviewerErrors?: { context?: string }[];\n  }[];\n}\n\nexport interface BitbucketError extends HTTPError {\n  readonly response: Response<BitbucketErrorResponse>;\n}\n\nexport interface BbsPrCacheData {\n  items: Record<number, BbsPr>;\n  updatedDate: number | null;\n  author: string | null;\n}\n"]}