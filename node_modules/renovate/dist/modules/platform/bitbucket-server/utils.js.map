{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/platform/bitbucket-server/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// SEE for the reference https://github.com/renovatebot/renovate/blob/c3e9e572b225085448d94aa121c7ec81c14d3955/lib/platform/bitbucket/utils.js\nimport { URL } from 'node:url';\nimport is from '@sindresorhus/is';\nimport { CONFIG_GIT_URL_UNAVAILABLE } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport type { HostRule } from '../../../types';\nimport type { GitOptions, GitProtocol } from '../../../types/git';\nimport * as git from '../../../util/git';\nimport { parseUrl } from '../../../util/url';\nimport { getPrBodyStruct } from '../pr-body';\nimport type { GitUrlOption } from '../types';\nimport type { BbsPr, BbsRestPr, BbsRestRepo, BitbucketError } from './types';\n\nexport const BITBUCKET_INVALID_REVIEWERS_EXCEPTION =\n  'com.atlassian.bitbucket.pull.InvalidPullRequestReviewersException';\n\n// https://docs.atlassian.com/bitbucket-server/rest/6.0.0/bitbucket-rest.html#idp250\nconst prStateMapping: any = {\n  MERGED: 'merged',\n  DECLINED: 'closed',\n  OPEN: 'open',\n};\n\nexport function prInfo(pr: BbsRestPr): BbsPr {\n  return {\n    version: pr.version,\n    number: pr.id,\n    bodyStruct: getPrBodyStruct(pr.description),\n    sourceBranch: pr.fromRef.displayId,\n    targetBranch: pr.toRef.displayId,\n    title: pr.title,\n    state: prStateMapping[pr.state],\n    createdAt: pr.createdDate,\n  };\n}\n\nexport interface BitbucketCommitStatus {\n  failed: number;\n  inProgress: number;\n  successful: number;\n}\n\nexport type BitbucketBranchState =\n  | 'SUCCESSFUL'\n  | 'FAILED'\n  | 'INPROGRESS'\n  | 'STOPPED';\n\nexport interface BitbucketStatus {\n  key: string;\n  state: BitbucketBranchState;\n}\n\nexport function isInvalidReviewersResponse(err: BitbucketError): boolean {\n  const errors = err?.response?.body?.errors ?? [];\n  return (\n    errors.length > 0 &&\n    errors.every(\n      (error) => error.exceptionName === BITBUCKET_INVALID_REVIEWERS_EXCEPTION,\n    )\n  );\n}\n\nexport function getInvalidReviewers(err: BitbucketError): string[] {\n  const errors = err?.response?.body?.errors ?? [];\n  let invalidReviewers: string[] = [];\n  for (const error of errors) {\n    if (error.exceptionName === BITBUCKET_INVALID_REVIEWERS_EXCEPTION) {\n      invalidReviewers = invalidReviewers.concat(\n        error.reviewerErrors\n          ?.map(({ context }) => context)\n          .filter(is.nonEmptyString) ?? [],\n      );\n    }\n  }\n\n  return invalidReviewers;\n}\n\nfunction generateUrlFromEndpoint(\n  defaultEndpoint: string,\n  opts: HostRule,\n  repository: string,\n): string {\n  const url = new URL(defaultEndpoint);\n  const generatedUrl = git.getUrl({\n    protocol: url.protocol as GitProtocol,\n    // TODO: types (#22198)\n    auth: `${opts.username}:${opts.password}`,\n    host: `${url.host}${url.pathname}${\n      /* v8 ignore start */\n      url.pathname.endsWith('/') ? '' : '/'\n      /* v8 ignore stop */\n    }scm`,\n    repository,\n  });\n  logger.debug(`Using generated endpoint URL: ${generatedUrl}`);\n  return generatedUrl;\n}\n\nfunction injectAuth(url: string, opts: HostRule): string {\n  const repoUrl = parseUrl(url)!;\n  if (!repoUrl) {\n    logger.debug(`Invalid url: ${url}`);\n    throw new Error(CONFIG_GIT_URL_UNAVAILABLE);\n  }\n  if (!opts.token && opts.username && opts.password) {\n    repoUrl.username = opts.username;\n    repoUrl.password = opts.password;\n  }\n  return repoUrl.toString();\n}\n\nexport function getRepoGitUrl(\n  repository: string,\n  defaultEndpoint: string,\n  gitUrl: GitUrlOption | undefined,\n  info: BbsRestRepo,\n  opts: HostRule,\n): string {\n  if (gitUrl === 'ssh') {\n    const sshUrl = info.links.clone?.find(({ name }) => name === 'ssh');\n    if (sshUrl === undefined) {\n      throw new Error(CONFIG_GIT_URL_UNAVAILABLE);\n    }\n    logger.debug(`Using ssh URL: ${sshUrl.href}`);\n    return sshUrl.href;\n  }\n  let cloneUrl = info.links.clone?.find(({ name }) => name === 'http');\n  if (cloneUrl) {\n    // Inject auth into the API provided URL\n    return injectAuth(cloneUrl.href, opts);\n  }\n  // Http access might be disabled, try to find ssh url in this case\n  cloneUrl = info.links.clone?.find(({ name }) => name === 'ssh');\n  if (gitUrl === 'endpoint' || !cloneUrl) {\n    return generateUrlFromEndpoint(defaultEndpoint, opts, repository);\n  }\n  // SSH urls can be used directly\n  return cloneUrl.href;\n}\n\nexport function getExtraCloneOpts(opts: HostRule): GitOptions {\n  if (opts.token) {\n    return {\n      '-c': `http.extraheader=Authorization: Bearer ${opts.token}`,\n    };\n  }\n  return {};\n}\n"]}