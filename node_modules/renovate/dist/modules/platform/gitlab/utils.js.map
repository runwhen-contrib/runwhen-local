{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/platform/gitlab/utils.ts"],"names":[],"mappings":";;;AAOA,wBAiCC;;AAxCD,kEAAkC;AAClC,wCAA6C;AAGhC,QAAA,YAAY,GAAG,SAAS,CAAC;AACzB,QAAA,uBAAuB,GAAG,OAAO,CAAC;AAE/C,SAAgB,MAAM,CAAC,EAAsB;IAC3C,MAAM,EAAE,GAAa;QACnB,YAAY,EAAE,EAAE,CAAC,aAAa;QAC9B,KAAK,EAAE,EAAE,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;QAChD,MAAM,EAAE,EAAE,CAAC,GAAG;QACd,KAAK,EAAE,EAAE,CAAC,KAAK;QACf,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QAC1D,UAAU,EAAE,IAAA,yBAAe,EAAC,EAAE,CAAC,WAAW,CAAC;QAE3C,GAAG,CAAC,EAAE,CAAC,aAAa,IAAI,EAAE,YAAY,EAAE,EAAE,CAAC,aAAa,EAAE,CAAC;QAE3D,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,MAAM,IAAI;YAC9B,kBAAkB,EAAE,EAAE,CAAC,aAAa,EAAE,MAAM;SAC7C,CAAC;QACF,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,IAAI,EAAE,eAAe,EAAE,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC;QAExE,GAAG,CAAC,YAAE,CAAC,aAAa,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI;YACpC,SAAS,EAAE,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC;SACzD,CAAC;QAEF,GAAG,CAAC,EAAE,CAAC,MAAM,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,MAAM,EAAE,CAAC;QACvC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;KAC/B,CAAC;IAEF,IAAI,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,oBAAY,CAAC,EAAE,CAAC;QACtC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,oBAAY,CAAC,MAAM,CAAC,CAAC;QACnD,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;IACpB,CAAC;SAAM,IAAI,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,+BAAuB,CAAC,EAAE,CAAC;QACxD,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,+BAAuB,CAAC,MAAM,CAAC,CAAC;QAC9D,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,OAAO,EAAE,CAAC;AACZ,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport { getPrBodyStruct } from '../pr-body';\nimport type { GitLabMergeRequest, GitlabPr } from './types';\n\nexport const DRAFT_PREFIX = 'Draft: ';\nexport const DRAFT_PREFIX_DEPRECATED = 'WIP: ';\n\nexport function prInfo(mr: GitLabMergeRequest): GitlabPr {\n  const pr: GitlabPr = {\n    sourceBranch: mr.source_branch,\n    state: mr.state === 'opened' ? 'open' : mr.state,\n    number: mr.iid,\n    title: mr.title,\n    hasAssignees: !!(mr.assignee?.id ?? mr.assignees?.[0]?.id),\n    bodyStruct: getPrBodyStruct(mr.description),\n\n    ...(mr.target_branch && { targetBranch: mr.target_branch }),\n\n    ...(mr.head_pipeline?.status && {\n      headPipelineStatus: mr.head_pipeline?.status,\n    }),\n    ...(mr.head_pipeline?.sha && { headPipelineSha: mr.head_pipeline?.sha }),\n\n    ...(is.nonEmptyArray(mr.reviewers) && {\n      reviewers: mr.reviewers?.map(({ username }) => username),\n    }),\n\n    ...(mr.labels && { labels: mr.labels }),\n    ...(mr.sha && { sha: mr.sha }),\n  };\n\n  if (pr.title.startsWith(DRAFT_PREFIX)) {\n    pr.title = pr.title.substring(DRAFT_PREFIX.length);\n    pr.isDraft = true;\n  } else if (pr.title.startsWith(DRAFT_PREFIX_DEPRECATED)) {\n    pr.title = pr.title.substring(DRAFT_PREFIX_DEPRECATED.length);\n    pr.isDraft = true;\n  }\n\n  return pr;\n}\n"]}