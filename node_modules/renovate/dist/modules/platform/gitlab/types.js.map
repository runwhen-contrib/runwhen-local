{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../lib/modules/platform/gitlab/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { LongCommitSha } from '../../../util/git/types';\nimport type { Pr } from '../types';\n\nexport interface GitlabIssue {\n  iid: number;\n\n  labels?: string[];\n\n  title: string;\n}\n\nexport interface GitlabComment {\n  body: string;\n  id: number;\n}\n\nexport interface GitLabUser {\n  id: number;\n  username: string;\n}\n\nexport interface GitLabMergeRequest {\n  iid: number;\n  title: string;\n  state: string;\n  source_branch: string;\n  target_branch: string;\n  description: string;\n  diverged_commits_count: number;\n  merge_status: string;\n  assignee?: GitLabUser;\n  assignees?: GitLabUser[];\n  reviewers?: GitLabUser[];\n  labels: string[];\n  sha: LongCommitSha;\n  head_pipeline?: {\n    status: string;\n    sha: string;\n  };\n}\n\nexport interface GitlabPr extends Pr {\n  headPipelineStatus?: string;\n  headPipelineSha?: string;\n}\n\nexport interface UpdateMergeRequest {\n  target_branch?: string;\n  title?: string;\n  assignee_id?: number;\n  assignee_ids?: number[];\n  reviewer_ids?: number[];\n}\n\nexport type MergeMethod = 'merge' | 'rebase_merge' | 'ff';\n\nexport interface RepoResponse {\n  id: number;\n  archived: boolean;\n  mirror: boolean;\n  default_branch: string;\n  empty_repo: boolean;\n  ssh_url_to_repo: string;\n  http_url_to_repo: string;\n  forked_from_project: boolean;\n  repository_access_level: 'disabled' | 'private' | 'enabled';\n  merge_requests_access_level: 'disabled' | 'private' | 'enabled';\n  merge_method: MergeMethod;\n  path_with_namespace: string;\n  squash_option?: 'never' | 'always' | 'default_on' | 'default_off';\n}\n\n// See https://gitlab.com/gitlab-org/gitlab/-/blob/master/app/graphql/types/user_status_type.rb\nexport interface GitlabUserStatus {\n  message?: string;\n  message_html?: string;\n  emoji?: string;\n  availability: 'not_set' | 'busy';\n}\n"]}