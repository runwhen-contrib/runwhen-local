{"version":3,"file":"merge-request.js","sourceRoot":"","sources":["../../../../lib/modules/platform/gitlab/merge-request.ts"],"names":[],"mappings":";;AAIA,sBAQC;AAED,4BAWC;AAzBD,4CAAyC;AACzC,iCAAmC;AAG5B,KAAK,UAAU,KAAK,CACzB,UAAkB,EAClB,GAAW;IAEX,eAAM,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;IAE9B,MAAM,GAAG,GAAG,YAAY,UAAU,mBAAmB,GAAG,mCAAmC,CAAC;IAC5F,OAAO,CAAC,MAAM,gBAAS,CAAC,gBAAgB,CAAqB,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1E,CAAC;AAEM,KAAK,UAAU,QAAQ,CAC5B,UAAkB,EAClB,GAAW,EACX,IAAwB;IAExB,eAAM,CAAC,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC;IAEjC,MAAM,GAAG,GAAG,YAAY,UAAU,mBAAmB,GAAG,EAAE,CAAC;IAC3D,MAAM,gBAAS,CAAC,OAAO,CAAC,GAAG,EAAE;QAC3B,IAAI,EAAE,IAAI;KACX,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { logger } from '../../../logger';\nimport { gitlabApi } from './http';\nimport type { GitLabMergeRequest, UpdateMergeRequest } from './types';\n\nexport async function getMR(\n  repository: string,\n  iid: number,\n): Promise<GitLabMergeRequest> {\n  logger.debug(`getMR(${iid})`);\n\n  const url = `projects/${repository}/merge_requests/${iid}?include_diverged_commits_count=1`;\n  return (await gitlabApi.getJsonUnchecked<GitLabMergeRequest>(url)).body;\n}\n\nexport async function updateMR(\n  repository: string,\n  iid: number,\n  data: UpdateMergeRequest,\n): Promise<void> {\n  logger.debug(`updateMR(${iid})`);\n\n  const url = `projects/${repository}/merge_requests/${iid}`;\n  await gitlabApi.putJson(url, {\n    body: data,\n  });\n}\n"]}