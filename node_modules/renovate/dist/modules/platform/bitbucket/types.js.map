{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../lib/modules/platform/bitbucket/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { Pr } from '../types';\n\nexport type BitbucketMergeStrategy = 'fast_forward' | 'merge_commit' | 'squash';\n\nexport interface MergeRequestBody {\n  close_source_branch?: boolean;\n  message?: string;\n  merge_strategy?: BitbucketMergeStrategy;\n}\n\nexport interface Config {\n  defaultBranch: string;\n  has_issues: boolean;\n  mergeMethod: string;\n  owner: string;\n  repository: string;\n  ignorePrAuthor: boolean;\n  is_private: boolean;\n}\n\nexport interface PagedResult<T = any> {\n  page?: number;\n  pagelen: number;\n  size?: number;\n  next?: string;\n  values: T[];\n}\n\nexport interface RepoBranchingModel {\n  development: {\n    name: string;\n    branch?: {\n      name: string;\n    };\n  };\n}\n\nexport interface BranchResponse {\n  target: {\n    hash: string;\n  };\n}\n\nexport type BitbucketBranchState = 'SUCCESSFUL' | 'FAILED' | 'INPROGRESS';\n\nexport interface BitbucketStatus {\n  key: string;\n  state: BitbucketBranchState;\n}\n\nexport interface PrResponse {\n  id: number;\n  title: string;\n  state: string;\n  links: {\n    commits: {\n      href: string;\n    };\n  };\n  summary?: { raw: string };\n  source: {\n    branch: {\n      name: string;\n    };\n  };\n  destination: {\n    branch: {\n      name: string;\n    };\n  };\n  reviewers: Account[];\n  created_on: string;\n  updated_on: string;\n}\n\nexport interface Account {\n  display_name?: string;\n  uuid: string;\n  nickname?: string;\n  account_status?: string;\n}\n\nexport interface EffectiveReviewer {\n  type: string;\n  reviewer_type: string;\n  user: Account;\n}\n\nexport interface BitbucketPrCacheData {\n  items: Record<number, Pr>;\n  updated_on: string | null;\n  author: string | null;\n}\n"]}