{"version":3,"file":"pretty-stdout.js","sourceRoot":"","sources":["../../lib/logger/pretty-stdout.ts"],"names":[],"mappings":"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","sourcesContent":["// Code originally derived from https://github.com/hadfieldn/node-bunyan-prettystream but since heavily edited\n// Neither fork nor original repo appear to be maintained\n\nimport { Stream } from 'node:stream';\nimport * as util from 'node:util';\nimport chalk from 'chalk';\nimport stringify from 'json-stringify-pretty-compact';\nimport type { BunyanRecord } from './types';\n\nconst bunyanFields = [\n  'name',\n  'hostname',\n  'pid',\n  'level',\n  'v',\n  'time',\n  'msg',\n  'start_time',\n];\nconst metaFields = [\n  'repository',\n  'baseBranch',\n  'packageFile',\n  'depType',\n  'dependency',\n  'dependencies',\n  'branch',\n];\n\nconst levels: Record<number, string> = {\n  10: chalk.gray('TRACE'),\n  20: chalk.blue('DEBUG'),\n  30: chalk.green(' INFO'),\n  40: chalk.magenta(' WARN'),\n  50: chalk.red('ERROR'),\n  60: chalk.bgRed('FATAL'),\n};\n\nexport function indent(str: string, leading = false): string {\n  const prefix = leading ? '       ' : '';\n  return prefix + str.split(/\\r?\\n/).join('\\n       '); // TODO #12874\n}\n\nexport function getMeta(rec: BunyanRecord): string {\n  if (!rec) {\n    return '';\n  }\n  let res = rec.module ? ` [${rec.module}]` : ``;\n  const filteredMeta = metaFields.filter((elem) => rec[elem]);\n  if (!filteredMeta.length) {\n    return res;\n  }\n  const metaStr = filteredMeta\n    .map((field) => `${field}=${String(rec[field])}`)\n    .join(', ');\n  res = ` (${metaStr})${res}`;\n  return chalk.gray(res);\n}\n\nexport function getDetails(rec: BunyanRecord): string {\n  if (!rec) {\n    return '';\n  }\n  const recFiltered = { ...rec };\n  delete recFiltered.module;\n  Object.keys(recFiltered).forEach((key) => {\n    if (\n      key === 'logContext' ||\n      bunyanFields.includes(key) ||\n      metaFields.includes(key)\n    ) {\n      delete recFiltered[key];\n    }\n  });\n  const remainingKeys = Object.keys(recFiltered);\n  if (remainingKeys.length === 0) {\n    return '';\n  }\n  return `${remainingKeys\n    .map((key) => `${indent(`\"${key}\": ${stringify(recFiltered[key])}`, true)}`)\n    .join(',\\n')}\\n`;\n}\n\nexport function formatRecord(rec: BunyanRecord): string {\n  const level = levels[rec.level];\n  const msg = `${indent(rec.msg)}`;\n  const meta = getMeta(rec);\n  const details = getDetails(rec);\n  return util.format('%s: %s%s\\n%s', level, msg, meta, details);\n}\n\nexport class RenovateStream extends Stream {\n  readable: boolean;\n\n  writable: boolean;\n\n  constructor() {\n    super();\n    this.readable = true;\n    this.writable = true;\n  }\n\n  write(data: BunyanRecord): boolean {\n    this.emit('data', formatRecord(data));\n    return true;\n  }\n}\n"]}