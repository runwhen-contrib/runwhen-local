{"version":3,"file":"err-serializer.js","sourceRoot":"","sources":["../../lib/logger/err-serializer.ts"],"names":[],"mappings":";;AAKA,gCAeC;;AApBD,kEAAkC;AAClC,4DAAmC;AAEnC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;AAE3B,SAAwB,aAAa,CAAC,GAAU;IAC9C,MAAM,QAAQ,GAA4B,IAAA,eAAY,EAAC,GAAG,CAAC,CAAC;IAE5D,oCAAoC;IACpC,MAAM,cAAc,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAChE,KAAK,MAAM,KAAK,IAAI,cAAc,EAAE,CAAC;QACnC,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,YAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;YACnB,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,OAAO,CAC3B,oBAAoB,EAAE,cAAc;YACpC,uBAAuB,CACxB,CAAC;QACJ,CAAC;IACH,CAAC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport prepareError from './utils';\n\nError.stackTraceLimit = 20;\n\nexport default function errSerializer(err: Error): any {\n  const response: Record<string, unknown> = prepareError(err);\n\n  // already done by `sanitizeValue` ?\n  const redactedFields = ['message', 'stack', 'stdout', 'stderr'];\n  for (const field of redactedFields) {\n    const val = response[field];\n    if (is.string(val)) {\n      response[field] = val.replace(\n        /https:\\/\\/[^@]*?@/g, // TODO #12874\n        'https://**redacted**@',\n      );\n    }\n  }\n  return response;\n}\n"]}