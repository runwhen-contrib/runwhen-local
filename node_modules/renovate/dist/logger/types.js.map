{"version":3,"file":"types.js","sourceRoot":"","sources":["../../lib/logger/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { Stream } from 'node:stream';\nimport type { LogLevel, LogLevelString } from 'bunyan';\n\nexport interface LogError {\n  level: LogLevel;\n  meta: any;\n  msg?: string;\n}\n\nexport interface Logger {\n  trace(msg: string): void;\n  trace(meta: Record<string, any>, msg?: string): void;\n  debug(msg: string): void;\n  debug(meta: Record<string, any>, msg?: string): void;\n  info(msg: string): void;\n  info(meta: Record<string, any>, msg?: string): void;\n  warn(msg: string): void;\n  warn(meta: Record<string, any>, msg?: string): void;\n  error(msg: string): void;\n  error(meta: Record<string, any>, msg?: string): void;\n  fatal(msg: string): void;\n  fatal(meta: Record<string, any>, msg?: string): void;\n\n  once: Logger & {\n    reset: () => void;\n  };\n}\n\nexport interface BunyanRecord extends Record<string, any> {\n  level: number;\n  msg: string;\n  module?: string;\n}\n\nexport type BunyanStream = (NodeJS.WritableStream | Stream) & {\n  writable?: boolean;\n  write: (\n    chunk: BunyanRecord,\n    enc: BufferEncoding,\n    cb: (err?: Error | null) => void,\n  ) => void;\n};\n\nexport interface LogLevelRemap {\n  matchMessage: string;\n  newLogLevel: LogLevelString;\n}\n"]}