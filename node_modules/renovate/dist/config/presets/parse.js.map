{"version":3,"file":"parse.js","sourceRoot":"","sources":["../../../lib/config/presets/parse.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { regEx } from '../../util/regex';\nimport { isHttpUrl } from '../../util/url';\nimport type { ParsedPreset } from './types';\nimport { PRESET_INVALID, PRESET_PROHIBITED_SUBPRESET } from './util';\n\nconst nonScopedPresetWithSubdirRegex = regEx(\n  /^(?<repo>~?[\\w\\-. /]+?)\\/\\/(?:(?<presetPath>[\\w\\-./]+)\\/)?(?<presetName>[\\w\\-.]+)(?:#(?<tag>[\\w\\-./]+?))?$/,\n);\nconst gitPresetRegex = regEx(\n  /^(?<repo>~?[\\w\\-. /]+)(?::(?<presetName>[\\w\\-.+/]+))?(?:#(?<tag>[\\w\\-./]+?))?$/,\n);\n\nexport function parsePreset(input: string): ParsedPreset {\n  let str = input;\n  let presetSource: string | undefined;\n  let presetPath: string | undefined;\n  let repo: string;\n  let presetName: string;\n  let tag: string | undefined;\n  let params: string[] | undefined;\n  if (str.startsWith('github>')) {\n    presetSource = 'github';\n    str = str.substring('github>'.length);\n  } else if (str.startsWith('gitlab>')) {\n    presetSource = 'gitlab';\n    str = str.substring('gitlab>'.length);\n  } else if (str.startsWith('gitea>')) {\n    presetSource = 'gitea';\n    str = str.substring('gitea>'.length);\n  } else if (str.startsWith('local>')) {\n    presetSource = 'local';\n    str = str.substring('local>'.length);\n  } else if (isHttpUrl(str)) {\n    presetSource = 'http';\n  } else if (\n    !str.startsWith('@') &&\n    !str.startsWith(':') &&\n    str.includes('/')\n  ) {\n    presetSource = 'local';\n  }\n  str = str.replace(regEx(/^npm>/), '');\n  presetSource = presetSource ?? 'npm';\n  if (str.includes('(')) {\n    params = str\n      .slice(str.indexOf('(') + 1, -1)\n      .split(',')\n      .map((elem) => elem.trim());\n    str = str.slice(0, str.indexOf('('));\n  }\n  if (presetSource === 'http') {\n    return { presetSource, repo: str, presetName: '', params };\n  }\n  const presetsPackages = [\n    'compatibility',\n    'config',\n    'customManagers',\n    'default',\n    'docker',\n    'global',\n    'group',\n    'helpers',\n    'mergeConfidence',\n    'monorepo',\n    'npm',\n    'packages',\n    'preview',\n    'replacements',\n    'schedule',\n    'security',\n    'workarounds',\n  ];\n  if (\n    presetsPackages.some((presetPackage) => str.startsWith(`${presetPackage}:`))\n  ) {\n    presetSource = 'internal';\n    [repo, presetName] = str.split(':');\n  } else if (str.startsWith(':')) {\n    // default namespace\n    presetSource = 'internal';\n    repo = 'default';\n    presetName = str.slice(1);\n  } else if (str.startsWith('@')) {\n    // scoped namespace\n    [, repo] = regEx(/(@.*?)(:|$)/).exec(str)!;\n    str = str.slice(repo.length);\n    if (!repo.includes('/')) {\n      repo += '/renovate-config';\n    }\n    if (str === '') {\n      presetName = 'default';\n    } else {\n      presetName = str.slice(1);\n    }\n  } else if (str.includes('//')) {\n    // non-scoped namespace with a subdirectory preset\n\n    // Validation\n    if (str.includes(':')) {\n      throw new Error(PRESET_PROHIBITED_SUBPRESET);\n    }\n    if (!nonScopedPresetWithSubdirRegex.test(str)) {\n      throw new Error(PRESET_INVALID);\n    }\n    ({ repo, presetPath, presetName, tag } =\n      nonScopedPresetWithSubdirRegex.exec(str)!.groups!);\n  } else {\n    ({ repo, presetName, tag } = gitPresetRegex.exec(str)!.groups!);\n\n    if (presetSource === 'npm' && !repo.startsWith('renovate-config-')) {\n      repo = `renovate-config-${repo}`;\n    }\n    if (!is.nonEmptyString(presetName)) {\n      presetName = 'default';\n    }\n  }\n\n  return {\n    presetSource,\n    presetPath,\n    repo,\n    presetName,\n    tag,\n    params,\n  };\n}\n"]}