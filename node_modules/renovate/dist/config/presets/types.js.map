{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../lib/config/presets/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { RenovateConfig } from '../types';\n\n// TODO: Proper typing\nexport type Preset = RenovateConfig & Record<string, unknown>;\n\nexport interface PresetConfig {\n  repo: string;\n  presetPath?: string | undefined;\n  presetName?: string;\n  tag?: string | undefined;\n}\n\nexport interface PresetApi {\n  getPreset(\n    config: PresetConfig,\n  ): Promise<Preset | null | undefined> | Preset | null | undefined;\n}\n\nexport interface ParsedPreset {\n  presetSource: string;\n  repo: string;\n  presetPath?: string | undefined;\n  presetName: string;\n  tag?: string | undefined;\n  params?: string[] | undefined;\n}\n\nexport type PresetFetcher = (\n  repo: string,\n  fileName: string,\n  endpoint: string,\n  tag?: string,\n) => Promise<Preset | null | undefined>;\n\nexport interface FetchPresetConfig {\n  repo: string;\n  filePreset: string;\n  presetPath?: string | undefined;\n  endpoint: string;\n  tag?: string | undefined;\n  fetch: PresetFetcher;\n}\n"]}