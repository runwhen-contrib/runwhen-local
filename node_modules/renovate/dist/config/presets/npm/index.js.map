{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/config/presets/npm/index.ts"],"names":[],"mappings":";;AAsBA,8BAmCC;AAzDD,4CAAyC;AACzC,iEAG+C;AAK/C,6CAA0C;AAC1C,oGAAuF;AAEvF,kCAIiB;AAEjB,MAAM,EAAE,GAAG,KAAK,CAAC;AAEjB,MAAM,IAAI,GAAG,IAAI,WAAI,CAAC,EAAE,CAAC,CAAC;AAEnB,KAAK,UAAU,SAAS,CAAC,EAC9B,IAAI,EAAE,GAAG,EACT,UAAU,GAAG,SAAS,GACT;IACb,IAAI,GAAmE,CAAC;IACxE,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,IAAA,0BAAkB,EAAC,GAAG,CAAC,CAAC;QAC5C,eAAM,CAAC,IAAI,CAAC,IAAI,CACd,EAAE,WAAW,EAAE,GAAG,EAAE,EACpB,gHAAgH,CACjH,CAAC;QACF,MAAM,UAAU,GAAG,IAAA,yBAAiB,EAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QACvD,MAAM,IAAI,GAAG,CACX,MAAM,IAAI,CAAC,gBAAgB,CAAc,UAAU,EAAE;YACnD,aAAa,EAAE,6CAAgB;SAChC,CAAC,CACH,CAAC,IAAI,CAAC;QACP,0BAA0B;QAC1B,GAAG,GAAG,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC,WAAW,CAAE,CAAC,MAAM,CAAC,CAAC;IAClD,CAAC;IAAC,MAAM,CAAC;QACP,MAAM,IAAI,KAAK,CAAC,2BAAoB,CAAC,CAAC;IACxC,CAAC;IACD,IAAI,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC;QAC9B,MAAM,IAAI,KAAK,CAAC,uCAAgC,CAAC,CAAC;IACpD,CAAC;IACD,MAAM,YAAY,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,CAAC;IACxD,IAAI,CAAC,YAAY,EAAE,CAAC;QAClB,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACxD,eAAM,CAAC,KAAK,CACV,EAAE,WAAW,EAAE,UAAU,EAAE,EAC3B,yCAAyC,CAC1C,CAAC;QACF,MAAM,IAAI,KAAK,CAAC,uBAAgB,CAAC,CAAC;IACpC,CAAC;IACD,OAAO,YAAY,CAAC;AACtB,CAAC","sourcesContent":["import { logger } from '../../../logger';\nimport {\n  resolvePackageUrl,\n  resolveRegistryUrl,\n} from '../../../modules/datasource/npm/npmrc';\nimport type {\n  NpmResponse,\n  NpmResponseVersion,\n} from '../../../modules/datasource/npm/types';\nimport { Http } from '../../../util/http';\nimport { memCacheProvider } from '../../../util/http/cache/memory-http-cache-provider';\nimport type { Preset, PresetConfig } from '../types';\nimport {\n  PRESET_DEP_NOT_FOUND,\n  PRESET_NOT_FOUND,\n  PRESET_RENOVATE_CONFIG_NOT_FOUND,\n} from '../util';\n\nconst id = 'npm';\n\nconst http = new Http(id);\n\nexport async function getPreset({\n  repo: pkg,\n  presetName = 'default',\n}: PresetConfig): Promise<Preset | undefined> {\n  let dep: (NpmResponseVersion & { 'renovate-config'?: any }) | undefined;\n  try {\n    const registryUrl = resolveRegistryUrl(pkg);\n    logger.once.warn(\n      { registryUrl, pkg },\n      'Using npm packages for Renovate presets is now deprecated. Please migrate to repository-based presets instead.',\n    );\n    const packageUrl = resolvePackageUrl(registryUrl, pkg);\n    const body = (\n      await http.getJsonUnchecked<NpmResponse>(packageUrl, {\n        cacheProvider: memCacheProvider,\n      })\n    ).body;\n    // TODO: check null #22198\n    dep = body.versions![body['dist-tags']!.latest];\n  } catch {\n    throw new Error(PRESET_DEP_NOT_FOUND);\n  }\n  if (!dep?.['renovate-config']) {\n    throw new Error(PRESET_RENOVATE_CONFIG_NOT_FOUND);\n  }\n  const presetConfig = dep['renovate-config'][presetName];\n  if (!presetConfig) {\n    const presetNames = Object.keys(dep['renovate-config']);\n    logger.debug(\n      { presetNames, presetName },\n      'Preset not found within renovate-config',\n    );\n    throw new Error(PRESET_NOT_FOUND);\n  }\n  return presetConfig;\n}\n"]}