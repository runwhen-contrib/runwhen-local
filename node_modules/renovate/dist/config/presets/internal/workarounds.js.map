{"version":3,"file":"workarounds.js","sourceRoot":"","sources":["../../../../lib/config/presets/internal/workarounds.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Preset } from '../types';\n\n/* eslint sort-keys: [\"error\", \"asc\", {caseSensitive: false, natural: true}] */\n\nexport const presets: Record<string, Preset> = {\n  all: {\n    description: [\n      'Apply crowd-sourced workarounds for known problems with packages.',\n    ],\n    extends: [\n      'workarounds:mavenCommonsAncientVersion',\n      'workarounds:ignoreSpringCloudNumeric',\n      'workarounds:ignoreWeb3jCoreWithOldReleaseTimestamp',\n      'workarounds:ignoreHttp4sDigestMilestones',\n      'workarounds:typesNodeVersioning',\n      'workarounds:nodeDockerVersioning',\n      'workarounds:doNotUpgradeFromAlpineStableToEdge',\n      'workarounds:supportRedHatImageVersion',\n      'workarounds:javaLTSVersions',\n      'workarounds:disableEclipseLifecycleMapping',\n      'workarounds:disableMavenParentRoot',\n      'workarounds:containerbase',\n      'workarounds:bitnamiDockerImageVersioning',\n      'workarounds:k3sKubernetesVersioning',\n      'workarounds:rke2KubernetesVersioning',\n      'workarounds:libericaJdkDockerVersioning',\n      'workarounds:ubuntuDockerVersioning',\n    ],\n    ignoreDeps: [], // Hack to improve onboarding PR description\n  },\n  bitnamiDockerImageVersioning: {\n    description: 'Use custom regex versioning for bitnami images',\n    packageRules: [\n      {\n        matchCurrentValue:\n          '/^(?<major>\\\\d+)(?:\\\\.(?<minor>\\\\d+)(?:\\\\.(?<patch>\\\\d+))?)?-(?<compatibility>.+)-(?<build>\\\\d+)(?:-r(?<revision>\\\\d+))?$/',\n        matchDatasources: ['docker'],\n        matchPackageNames: [\n          'bitnami/**',\n          'docker.io/bitnami/**',\n          'gcr.io/bitnami-containers/**',\n        ],\n        versioning:\n          'regex:^(?<major>\\\\d+)(?:\\\\.(?<minor>\\\\d+)(?:\\\\.(?<patch>\\\\d+))?)?(:?-(?<compatibility>.+)-(?<build>\\\\d+)(?:-r(?<revision>\\\\d+))?)?$',\n      },\n    ],\n  },\n  containerbase: {\n    description: 'Add some containerbase overrides.',\n    packageRules: [\n      {\n        description:\n          'Use node versioning for `(containerbase|renovate)/node` images',\n        matchDatasources: ['docker'],\n        matchPackageNames: [\n          '/^(?:(?:docker|ghcr)\\\\.io/)?(?:containerbase|renovate)/node$/',\n        ],\n        versioning: 'node',\n      },\n    ],\n  },\n  disableEclipseLifecycleMapping: {\n    description: 'Disable Eclipse m2e lifecycle-mapping placeholder package.',\n    packageRules: [\n      {\n        enabled: false,\n        matchDatasources: ['maven'],\n        matchPackageNames: ['org.eclipse.m2e:lifecycle-mapping'],\n      },\n    ],\n  },\n  disableMavenParentRoot: {\n    description:\n      'Avoid version fetching for Maven packages detected as project root.',\n    packageRules: [\n      {\n        enabled: false,\n        matchDepTypes: ['parent-root'],\n        matchManagers: ['maven'],\n      },\n    ],\n  },\n  doNotUpgradeFromAlpineStableToEdge: {\n    description: 'Do not upgrade from Alpine stable to edge.',\n    packageRules: [\n      {\n        allowedVersions: '<20000000',\n        matchCurrentVersion: '!/^\\\\d{8}$/',\n        matchDatasources: ['docker'],\n        matchDepNames: ['alpine'],\n      },\n      {\n        allowedVersions: '<20000000',\n        matchCurrentVersion: '!/^\\\\d{8}$/',\n        matchDatasources: ['docker'],\n        matchPackageNames: ['alpine'],\n      },\n    ],\n  },\n  ignoreHttp4sDigestMilestones: {\n    description: 'Ignore `http4s` digest-based `1.x` milestones.',\n    packageRules: [\n      {\n        allowedVersions: `!/^1\\\\.0-\\\\d+-[a-fA-F0-9]{7}$/`,\n        matchManagers: ['sbt'],\n        matchPackageNames: ['org.http4s:**'],\n      },\n    ],\n  },\n  ignoreSpringCloudNumeric: {\n    description: 'Ignore spring cloud `1.x` releases.',\n    packageRules: [\n      {\n        allowedVersions: '/^[A-Z]/',\n        matchDatasources: ['maven'],\n        matchPackageNames: [\n          'org.springframework.cloud:spring-cloud-starter-parent',\n        ],\n      },\n    ],\n  },\n  ignoreWeb3jCoreWithOldReleaseTimestamp: {\n    description: 'Ignore `web3j` `5.0.0` release.',\n    packageRules: [\n      {\n        allowedVersions: '!/^5\\\\.0\\\\.0/',\n        matchDatasources: ['maven'],\n        matchPackageNames: ['org.web3j:core'],\n      },\n    ],\n  },\n  javaLTSVersions: {\n    description: 'Limit Java runtime versions to LTS releases.',\n    packageRules: [\n      {\n        allowedVersions: '/^(?:8|11|17|21)(?:\\\\.|-|$)/',\n        description:\n          'Limit Java runtime versions to LTS releases. To receive all major releases add `workarounds:javaLTSVersions` to the `ignorePresets` array.',\n        matchDatasources: ['docker', 'java-version'],\n        matchPackageNames: [\n          'eclipse-temurin',\n          'amazoncorretto',\n          'adoptopenjdk',\n          'openjdk',\n          'java',\n          'java-jre',\n          'sapmachine',\n          '/^azul/zulu-openjdk/',\n          '/^bellsoft/liberica-openj(dk|re)-/',\n          '/^cimg/openjdk/',\n        ],\n        versioning:\n          'regex:^(?<major>\\\\d+)?(\\\\.(?<minor>\\\\d+))?(\\\\.(?<patch>\\\\d+))?([\\\\._+](?<build>(\\\\d\\\\.?)+)(LTS)?)?(-(?<compatibility>.*))?$',\n      },\n      {\n        allowedVersions: '/^(?:8|11|17|21)(?:\\\\.|-|$)/',\n        description:\n          'Limit Java runtime versions to LTS releases. To receive all major releases add `workarounds:javaLTSVersions` to the `ignorePresets` array.',\n        matchDatasources: ['docker', 'java-version'],\n        matchDepNames: [\n          'eclipse-temurin',\n          'amazoncorretto',\n          'adoptopenjdk',\n          'openjdk',\n          'java',\n          'java-jre',\n          'sapmachine',\n        ],\n        versioning:\n          'regex:^(?<major>\\\\d+)?(\\\\.(?<minor>\\\\d+))?(\\\\.(?<patch>\\\\d+))?([\\\\._+](?<build>(\\\\d\\\\.?)+)(LTS)?)?(-(?<compatibility>.*))?$',\n      },\n      {\n        allowedVersions: '/^(?:jdk|jdk-all|jre)-(?:8|11|17|21)(?:\\\\.|-|$)/',\n        description:\n          'Limit Java runtime versions to LTS releases. To receive all major releases add `workarounds:javaLTSVersions` to the `ignorePresets` array.',\n        matchDatasources: ['docker'],\n        matchPackageNames: ['bellsoft/liberica-runtime-container'],\n      },\n    ],\n  },\n  k3sKubernetesVersioning: {\n    description: 'Use custom regex versioning for k3s-io/k3s',\n    packageRules: [\n      {\n        matchDatasources: ['github-releases'],\n        matchPackageNames: ['k3s-io/k3s'],\n        versioning:\n          'regex:^v(?<major>\\\\d+)\\\\.(?<minor>\\\\d+)\\\\.(?<patch>\\\\d+)(?:-(?<prerelease>[a-z]+\\\\d+))?(?<compatibility>\\\\+k3s)(?<build>\\\\d+)$',\n      },\n    ],\n  },\n  libericaJdkDockerVersioning: {\n    description:\n      'Use custom regex versioning for bellsoft/liberica-runtime-container',\n    packageRules: [\n      {\n        description: 'Liberica JDK Lite version optimized for the Cloud',\n        matchCurrentValue: '/^jdk-[^a][^l]{2}/',\n        matchDatasources: ['docker'],\n        matchPackageNames: ['bellsoft/liberica-runtime-container'],\n        versioning:\n          'regex:^jdk-(?<major>\\\\d+)?(\\\\.(?<minor>\\\\d+))?(\\\\.(?<patch>\\\\d+))?([\\\\._+](?<build>(\\\\d\\\\.?)+))?(-(?<compatibility>.*))?$',\n      },\n      {\n        description:\n          'Liberica JDK that can be used to create a custom runtime with a help of jlink tool',\n        matchCurrentValue: '/^jdk-all/',\n        matchDatasources: ['docker'],\n        matchPackageNames: ['bellsoft/liberica-runtime-container'],\n        versioning:\n          'regex:^jdk-all-(?<major>\\\\d+)?(\\\\.(?<minor>\\\\d+))?(\\\\.(?<patch>\\\\d+))?([\\\\._+](?<build>(\\\\d\\\\.?)+))?(-(?<compatibility>.*))?$',\n      },\n      {\n        description:\n          'Liberica JRE (only the runtime without the rest of JDK tools) for running Java applications',\n        matchCurrentValue: '/^jre-/',\n        matchDatasources: ['docker'],\n        matchPackageNames: ['bellsoft/liberica-runtime-container'],\n        versioning:\n          'regex:^jre-(?<major>\\\\d+)?(\\\\.(?<minor>\\\\d+))?(\\\\.(?<patch>\\\\d+))?([\\\\._+](?<build>(\\\\d\\\\.?)+))?(-(?<compatibility>.*))?$',\n      },\n    ],\n  },\n  mavenCommonsAncientVersion: {\n    description: 'Fix some problems with very old Maven commons versions.',\n    packageRules: [\n      {\n        allowedVersions: '!/^200\\\\d{5}(\\\\.\\\\d+)?/',\n        matchDatasources: ['maven', 'sbt-package'],\n        matchPackageNames: ['commons-**'],\n      },\n    ],\n  },\n  nodeDockerVersioning: {\n    description: 'Use node versioning for `node` docker images.',\n    packageRules: [\n      {\n        matchDatasources: ['docker'],\n        // copied from https://github.com/renovatebot/renovate/blob/a471762e137619c06e73a678d6b63ca984da7dba/lib/config/presets/internal/group.ts#L351\n        matchPackageNames: [\n          '/(?:^|/)node$/', // node or ends with \"/node, except those below\"\n          '!calico/node',\n          '!docker.io/calico/node',\n          '!ghcr.io/devcontainers/features/node',\n          '!kindest/node',\n        ],\n        versionCompatibility: '^(?<version>[^-]+)(?<compatibility>-.*)?$',\n        versioning: 'node',\n      },\n    ],\n  },\n  rke2KubernetesVersioning: {\n    description: 'Use custom regex versioning for rancher/rke2',\n    packageRules: [\n      {\n        matchDatasources: ['github-releases'],\n        matchPackageNames: ['rancher/rke2'],\n        versioning:\n          'regex:^v(?<major>\\\\d+)\\\\.(?<minor>\\\\d+)\\\\.(?<patch>\\\\d+)(?:-(?<prerelease>[a-z]+\\\\d+))?(?<compatibility>\\\\+rke2r)(?<build>\\\\d+)$',\n      },\n    ],\n  },\n  supportRedHatImageVersion: {\n    description:\n      'Use specific versioning for Red Hat-maintained container images.',\n    packageRules: [\n      {\n        matchDatasources: ['docker'],\n        matchPackageNames: [\n          'registry.access.redhat.com/rhel',\n          'registry.access.redhat.com/rhel-atomic',\n          'registry.access.redhat.com/rhel-init',\n          'registry.access.redhat.com/rhel-minimal',\n          'registry.access.redhat.com/rhceph/**',\n          'registry.access.redhat.com/rhgs3/**',\n          'registry.access.redhat.com/rhel7**',\n          'registry.access.redhat.com/rhel8/**',\n          'registry.access.redhat.com/rhel9/**',\n          'registry.access.redhat.com/rhscl/**',\n          'registry.access.redhat.com/ubi*{,/}**',\n          'redhat/**',\n        ],\n        versioning: 'redhat',\n      },\n    ],\n  },\n  typesNodeVersioning: {\n    description: 'Use node versioning for `@types/node`.',\n    packageRules: [\n      {\n        matchManagers: ['npm'],\n        matchPackageNames: ['@types/node'],\n        versioning: `node`,\n      },\n    ],\n  },\n  ubuntuDockerVersioning: {\n    description: 'Use ubuntu versioning for `ubuntu` docker images.',\n    packageRules: [\n      {\n        matchDatasources: ['docker'],\n        matchDepNames: ['ubuntu'],\n        versioning: 'ubuntu',\n      },\n    ],\n  },\n};\n"]}