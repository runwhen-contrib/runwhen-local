{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../lib/config/presets/internal/config.ts"],"names":[],"mappings":";;;AAEA,+EAA+E;AAElE,QAAA,OAAO,GAA2B;IAC7C,gBAAgB,EAAE;QAChB,WAAW,EACT,kIAAkI;QACpI,OAAO,EAAE;YACP,oBAAoB;YACpB,mBAAmB;YACnB,gCAAgC;YAChC,kBAAkB;YAClB,qBAAqB;SACtB;KACF;IACD,QAAQ,EAAE;QACR,WAAW,EAAE,oCAAoC;QACjD,OAAO,EAAE,CAAC,oBAAoB,EAAE,+BAA+B,CAAC;KACjE;IACD,QAAQ,EAAE;QACR,WAAW,EAAE,sCAAsC;QACnD,OAAO,EAAE,CAAC,oBAAoB,EAAE,yBAAyB,CAAC;KAC3D;IACD,WAAW,EAAE;QACX,WAAW,EACT,iGAAiG;QACnG,OAAO,EAAE;YACP,sBAAsB;YACtB,mCAAmC;YACnC,wBAAwB;YACxB,iBAAiB;YACjB,mBAAmB;YACnB,kBAAkB;YAClB,iBAAiB;SAClB;KACF;IACD,gBAAgB,EAAE;QAChB,WAAW,EACT,qEAAqE;QACvE,OAAO,EAAE;YACP,uBAAuB;YACvB,WAAW;YACX,kBAAkB;YAClB,2BAA2B;SAC5B;QACD,mBAAmB,EAAE;YACnB,mBAAmB,EAAE,QAAQ;YAC7B,OAAO,EAAE,CAAC,WAAW,CAAC;SACvB;QACD,kBAAkB,EAAE,KAAK;KAC1B;CACF,CAAC","sourcesContent":["import type { Preset } from '../types';\n\n/* eslint sort-keys: [\"error\", \"asc\", {caseSensitive: false, natural: true}] */\n\nexport const presets: Record<string, Preset> = {\n  'best-practices': {\n    description:\n      'Preset with best practices from the Renovate maintainers. Recommended for advanced users, who want to follow our best practices.',\n    extends: [\n      'config:recommended',\n      'docker:pinDigests',\n      'helpers:pinGitHubActionDigests',\n      ':configMigration',\n      ':pinDevDependencies',\n    ],\n  },\n  'js-app': {\n    description: 'Default configuration for webapps.',\n    extends: ['config:recommended', ':pinAllExceptPeerDependencies'],\n  },\n  'js-lib': {\n    description: 'Default configuration for libraries.',\n    extends: ['config:recommended', ':pinOnlyDevDependencies'],\n  },\n  recommended: {\n    description:\n      'Recommended configuration for most users. It does not matter what programming language you use.',\n    extends: [\n      ':dependencyDashboard',\n      ':semanticPrefixFixDepsChoreOthers',\n      ':ignoreModulesAndTests',\n      'group:monorepos',\n      'group:recommended',\n      'replacements:all',\n      'workarounds:all',\n    ],\n  },\n  semverAllMonthly: {\n    description:\n      'Preserve SemVer ranges and update everything together once a month.',\n    extends: [\n      ':preserveSemverRanges',\n      'group:all',\n      'schedule:monthly',\n      ':maintainLockFilesMonthly',\n    ],\n    lockFileMaintenance: {\n      commitMessageAction: 'Update',\n      extends: ['group:all'],\n    },\n    separateMajorMinor: false,\n  },\n};\n"]}