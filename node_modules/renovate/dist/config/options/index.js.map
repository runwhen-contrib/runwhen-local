{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/config/options/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { getManagers } from '../../modules/manager';\nimport { getCustomManagers } from '../../modules/manager/custom';\nimport { getPlatformList } from '../../modules/platform';\nimport { getVersioningList } from '../../modules/versioning';\nimport { supportedDatasources } from '../presets/internal/merge-confidence';\nimport type { RenovateOptions } from '../types';\n\nconst options: RenovateOptions[] = [\n  {\n    name: 'mode',\n    description: 'Mode of operation.',\n    type: 'string',\n    default: 'full',\n    allowedValues: ['full', 'silent'],\n  },\n  {\n    name: 'allowedHeaders',\n    description:\n      'List of allowed patterns for header names in repository hostRules config.',\n    type: 'array',\n    default: ['X-*'],\n    subType: 'string',\n    globalOnly: true,\n    patternMatch: true,\n  },\n  {\n    name: 'autodiscoverRepoOrder',\n    description:\n      'The order method for autodiscover server side repository search.',\n    type: 'string',\n    default: null,\n    globalOnly: true,\n    allowedValues: ['asc', 'desc'],\n    supportedPlatforms: ['gitea'],\n  },\n  {\n    name: 'autodiscoverRepoSort',\n    description:\n      'The sort method for autodiscover server side repository search.',\n    type: 'string',\n    default: null,\n    globalOnly: true,\n    allowedValues: ['alpha', 'created', 'updated', 'size', 'id'],\n    supportedPlatforms: ['gitea'],\n  },\n  {\n    name: 'allowedEnv',\n    description:\n      'List of allowed patterns for environment variable names in repository env config.',\n    type: 'array',\n    default: [],\n    subType: 'string',\n    globalOnly: true,\n    patternMatch: true,\n    mergeable: true,\n  },\n  {\n    name: 'detectGlobalManagerConfig',\n    description:\n      'If `true`, Renovate tries to detect global manager configuration from the file system.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'detectHostRulesFromEnv',\n    description:\n      'If `true`, Renovate tries to detect host rules from environment variables.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'mergeConfidenceEndpoint',\n    description:\n      'If set, Renovate will query this API for Merge Confidence data.',\n    stage: 'global',\n    type: 'string',\n    default: 'https://developer.mend.io/',\n    advancedUse: true,\n    globalOnly: true,\n  },\n  {\n    name: 'mergeConfidenceDatasources',\n    description:\n      'If set, Renovate will query the merge-confidence JSON API only for datasources that are part of this list.',\n    stage: 'global',\n    allowedValues: supportedDatasources,\n    default: supportedDatasources,\n    type: 'array',\n    subType: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'useCloudMetadataServices',\n    description:\n      'If `false`, Renovate does not try to access cloud metadata services.',\n    type: 'boolean',\n    default: true,\n    globalOnly: true,\n  },\n  {\n    name: 'userAgent',\n    description:\n      'If set to any string, Renovate will use this as the `user-agent` it sends with HTTP requests.',\n    type: 'string',\n    default: null,\n    globalOnly: true,\n  },\n  {\n    name: 'allowCommandTemplating',\n    description:\n      'Set this to `false` to disable template compilation for post-upgrade commands.',\n    type: 'boolean',\n    default: true,\n    globalOnly: true,\n  },\n  {\n    name: 'allowedCommands',\n    description:\n      'A list of regular expressions that decide which commands are allowed in post-upgrade tasks.',\n    type: 'array',\n    subType: 'string',\n    default: [],\n    globalOnly: true,\n  },\n  {\n    name: 'postUpgradeTasks',\n    description:\n      'Post-upgrade tasks that are executed before a commit is made by Renovate.',\n    type: 'object',\n    default: {\n      commands: [],\n      fileFilters: [],\n      executionMode: 'update',\n    },\n  },\n  {\n    name: 'commands',\n    description:\n      'A list of post-upgrade commands that are executed before a commit is made by Renovate.',\n    type: 'array',\n    subType: 'string',\n    parents: ['postUpgradeTasks'],\n    default: [],\n    cli: false,\n  },\n  {\n    name: 'fileFilters',\n    description:\n      'Files that match the glob pattern will be committed after running a post-upgrade task.',\n    type: 'array',\n    subType: 'string',\n    parents: ['postUpgradeTasks'],\n    default: ['**/*'],\n    cli: false,\n  },\n  {\n    name: 'format',\n    description: 'Format of the custom datasource.',\n    type: 'string',\n    parents: ['customDatasources'],\n    default: 'json',\n    allowedValues: ['json', 'plain'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'executionMode',\n    description:\n      'Controls when the post upgrade tasks run: on every update, or once per upgrade branch.',\n    type: 'string',\n    parents: ['postUpgradeTasks'],\n    allowedValues: ['update', 'branch'],\n    default: 'update',\n    cli: false,\n  },\n  {\n    name: 'onboardingBranch',\n    description:\n      'Change this value to override the default onboarding branch name.',\n    type: 'string',\n    default: 'renovate/configure',\n    globalOnly: true,\n    inheritConfigSupport: true,\n    cli: false,\n  },\n  {\n    name: 'onboardingCommitMessage',\n    description:\n      'Change this value to override the default onboarding commit message.',\n    type: 'string',\n    default: null,\n    globalOnly: true,\n    inheritConfigSupport: true,\n    cli: false,\n  },\n  {\n    name: 'onboardingConfigFileName',\n    description:\n      'Change this value to override the default onboarding config file name.',\n    type: 'string',\n    default: 'renovate.json',\n    globalOnly: true,\n    inheritConfigSupport: true,\n    cli: false,\n  },\n  {\n    name: 'onboardingNoDeps',\n    description: 'Onboard the repository even if no dependencies are found.',\n    type: 'string',\n    default: 'auto',\n    allowedValues: ['auto', 'enabled', 'disabled'],\n    globalOnly: true,\n    inheritConfigSupport: true,\n  },\n  {\n    name: 'onboardingPrTitle',\n    description:\n      'Change this value to override the default onboarding PR title.',\n    type: 'string',\n    default: 'Configure Renovate',\n    globalOnly: true,\n    inheritConfigSupport: true,\n    cli: false,\n  },\n  {\n    name: 'configMigration',\n    description: 'Enable this to get config migration PRs when needed.',\n    stage: 'repository',\n    type: 'boolean',\n    default: false,\n    experimental: true,\n    experimentalDescription:\n      'Config migration PRs are still being improved, in particular to reduce the amount of reordering and whitespace changes.',\n    experimentalIssues: [16359],\n  },\n  {\n    name: 'productLinks',\n    description: 'Links which are used in PRs, issues and comments.',\n    type: 'object',\n    globalOnly: true,\n    mergeable: true,\n    default: {\n      documentation: 'https://docs.renovatebot.com/',\n      help: 'https://github.com/renovatebot/renovate/discussions',\n      homepage: 'https://github.com/renovatebot/renovate',\n    },\n    additionalProperties: {\n      type: 'string',\n      format: 'uri',\n    },\n  },\n  {\n    name: 'secrets',\n    description: 'Object which holds secret name/value pairs.',\n    type: 'object',\n    globalOnly: true,\n    mergeable: true,\n    default: {},\n    additionalProperties: {\n      type: 'string',\n    },\n  },\n  {\n    name: 'statusCheckNames',\n    description: 'Custom strings to use as status check names.',\n    type: 'object',\n    mergeable: true,\n    advancedUse: true,\n    default: {\n      artifactError: 'renovate/artifacts',\n      configValidation: 'renovate/config-validation',\n      mergeConfidence: 'renovate/merge-confidence',\n      minimumReleaseAge: 'renovate/stability-days',\n    },\n  },\n  {\n    name: 'extends',\n    description: 'Configuration presets to use or extend.',\n    stage: 'package',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    cli: false,\n  },\n  {\n    name: 'ignorePresets',\n    description:\n      'A list of presets to ignore, including any that are nested inside an `extends` array.',\n    stage: 'package',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    cli: false,\n  },\n  {\n    name: 'migratePresets',\n    description:\n      'Define presets here which have been removed or renamed and should be migrated automatically.',\n    type: 'object',\n    globalOnly: true,\n    default: {},\n    additionalProperties: {\n      type: 'string',\n    },\n  },\n  {\n    name: 'presetCachePersistence',\n    description: 'Cache resolved presets in package cache.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'globalExtends',\n    description:\n      'Configuration presets to use or extend for a self-hosted config.',\n    type: 'array',\n    subType: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'description',\n    description: 'Plain text description for a config or preset.',\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n    allowString: true,\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'enabled',\n    description: `Enable or disable Renovate bot.`,\n    stage: 'package',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'constraintsFiltering',\n    description: 'Perform release filtering based on language constraints.',\n    type: 'string',\n    allowedValues: ['none', 'strict'],\n    cli: false,\n    default: 'none',\n  },\n  {\n    name: 'repositoryCache',\n    description:\n      'This option decides if Renovate uses a JSON cache to speed up extractions.',\n    globalOnly: true,\n    type: 'string',\n    allowedValues: ['disabled', 'enabled', 'reset'],\n    stage: 'repository',\n    default: 'disabled',\n  },\n  {\n    name: 'repositoryCacheType',\n    description:\n      'Set the type of renovate repository cache if `repositoryCache` is enabled.',\n    globalOnly: true,\n    type: 'string',\n    stage: 'repository',\n    default: 'local',\n  },\n  {\n    name: 'reportType',\n    description: 'Set how, or if, reports should be generated.',\n    globalOnly: true,\n    type: 'string',\n    default: null,\n    experimental: true,\n    allowedValues: ['logging', 'file', 's3'],\n  },\n  {\n    name: 'reportPath',\n    description:\n      'Path to where the file should be written. In case of `s3` this has to be a full S3 URI.',\n    globalOnly: true,\n    type: 'string',\n    default: null,\n    experimental: true,\n  },\n  {\n    name: 'force',\n    description:\n      'Any configuration set in this object will force override existing settings.',\n    stage: 'package',\n    globalOnly: true,\n    type: 'object',\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'forceCli',\n    description:\n      'Decides if CLI configuration options are moved to the `force` config section.',\n    stage: 'global',\n    type: 'boolean',\n    default: true,\n    globalOnly: true,\n  },\n  {\n    name: 'draftPR',\n    description:\n      'If set to `true` then Renovate creates draft PRs, instead of normal status PRs.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['azure', 'gitea', 'github', 'gitlab'],\n  },\n  {\n    name: 'dryRun',\n    description:\n      'If enabled, perform a dry run by logging messages instead of creating/updating/deleting branches and PRs.',\n    type: 'string',\n    globalOnly: true,\n    allowedValues: ['extract', 'lookup', 'full'],\n    default: null,\n  },\n  {\n    name: 'printConfig',\n    description:\n      'If enabled, Renovate logs the fully resolved config for each repository, plus the fully resolved presets.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'binarySource',\n    description:\n      'Controls how third-party tools like npm or Gradle are called: directly, via Docker sidecar containers, or via dynamic install.',\n    globalOnly: true,\n    type: 'string',\n    allowedValues: ['global', 'docker', 'install', 'hermit'],\n    default: 'install',\n  },\n  {\n    name: 'redisUrl',\n    description:\n      'If set, this Redis URL will be used for caching instead of the file system.',\n    stage: 'global',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'redisPrefix',\n    description: 'Key prefix for redis cache entries.',\n    stage: 'global',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'baseDir',\n    description:\n      'The base directory for Renovate to store local files, including repository files and cache. If left empty, Renovate will create its own temporary directory to use.',\n    stage: 'global',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'cacheDir',\n    description:\n      'The directory where Renovate stores its cache. If left empty, Renovate creates a subdirectory within the `baseDir`.',\n    globalOnly: true,\n    type: 'string',\n  },\n  {\n    name: 'containerbaseDir',\n    description:\n      'The directory where Renovate stores its containerbase cache. If left empty, Renovate creates a subdirectory within the `cacheDir`.',\n    globalOnly: true,\n    type: 'string',\n  },\n  {\n    name: 'customEnvVariables',\n    description:\n      'Custom environment variables for child processes and sidecar Docker containers.',\n    globalOnly: true,\n    type: 'object',\n    default: {},\n  },\n  {\n    name: 'env',\n    description:\n      'Environment variables that Renovate uses when executing package manager commands.',\n    type: 'object',\n    default: {},\n  },\n  {\n    name: 'customDatasources',\n    description: 'Defines custom datasources for usage by managers.',\n    type: 'object',\n    experimental: true,\n    experimentalIssues: [23286],\n    default: {},\n    mergeable: true,\n  },\n  {\n    name: 'dockerChildPrefix',\n    description:\n      'Change this value to add a prefix to the Renovate Docker sidecar container names and labels.',\n    type: 'string',\n    globalOnly: true,\n    default: 'renovate_',\n  },\n  {\n    name: 'dockerCliOptions',\n    description:\n      'Pass CLI flags to `docker run` command when `binarySource=docker`.',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'dockerSidecarImage',\n    description:\n      'Change this value to override the default Renovate sidecar image.',\n    type: 'string',\n    default: 'ghcr.io/containerbase/sidecar:13.8.17',\n    globalOnly: true,\n  },\n  {\n    name: 'dockerUser',\n    description:\n      'Set the `UID` and `GID` for Docker-based binaries if you use `binarySource=docker`.',\n    globalOnly: true,\n    type: 'string',\n  },\n  {\n    name: 'composerIgnorePlatformReqs',\n    description:\n      'Configure use of `--ignore-platform-reqs` or `--ignore-platform-req` for the Composer package manager.',\n    type: 'array',\n    subType: 'string',\n    default: [],\n  },\n  {\n    name: 'goGetDirs',\n    description: 'Directory pattern to run `go get` on.',\n    type: 'array',\n    subType: 'string',\n    default: ['./...'],\n    supportedManagers: ['gomod'],\n  },\n  // Log options\n  {\n    name: 'logContext',\n    description: 'Add a global or per-repo log context to each log entry.',\n    globalOnly: true,\n    type: 'string',\n    default: null,\n    stage: 'global',\n  },\n  // Onboarding\n  {\n    name: 'onboarding',\n    description: 'Require a Configuration PR first.',\n    stage: 'repository',\n    type: 'boolean',\n    globalOnly: true,\n    inheritConfigSupport: true,\n  },\n  {\n    name: 'onboardingConfig',\n    description: 'Configuration to use for onboarding PRs.',\n    stage: 'repository',\n    type: 'object',\n    default: { $schema: 'https://docs.renovatebot.com/renovate-schema.json' },\n    globalOnly: true,\n    inheritConfigSupport: true,\n    mergeable: true,\n  },\n  {\n    name: 'onboardingRebaseCheckbox',\n    description:\n      'Set to enable rebase/retry markdown checkbox for onboarding PRs.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['gitea', 'github', 'gitlab'],\n    globalOnly: true,\n    experimental: true,\n    experimentalIssues: [17633],\n  },\n  {\n    name: 'forkProcessing',\n    description:\n      'Whether to process forked repositories. By default, all forked repositories are skipped when in `autodiscover` mode.',\n    stage: 'repository',\n    type: 'string',\n    allowedValues: ['auto', 'enabled', 'disabled'],\n    default: 'auto',\n  },\n  {\n    name: 'includeMirrors',\n    description:\n      'Whether to process repositories that are mirrors. By default, repositories that are mirrors are skipped.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['gitlab'],\n    globalOnly: true,\n  },\n  {\n    name: 'forkCreation',\n    description:\n      'Whether to create forks as needed at runtime when running in \"fork mode\".',\n    stage: 'repository',\n    type: 'boolean',\n    globalOnly: true,\n    supportedPlatforms: ['github'],\n    experimental: true,\n    default: true,\n  },\n  {\n    name: 'forkToken',\n    description: 'Set a personal access token here to enable \"fork mode\".',\n    stage: 'repository',\n    type: 'string',\n    globalOnly: true,\n    supportedPlatforms: ['github'],\n    experimental: true,\n  },\n  {\n    name: 'forkOrg',\n    description:\n      'The preferred organization to create or find forked repositories, when in fork mode.',\n    stage: 'repository',\n    type: 'string',\n    globalOnly: true,\n    supportedPlatforms: ['github'],\n    experimental: true,\n  },\n  {\n    name: 'githubTokenWarn',\n    description: 'Display warnings about GitHub token not being set.',\n    type: 'boolean',\n    default: true,\n    globalOnly: true,\n  },\n  {\n    name: 'encryptedWarning',\n    description: 'Warning text to use if encrypted config is found.',\n    type: 'string',\n    globalOnly: true,\n    advancedUse: true,\n  },\n  {\n    name: 'inheritConfig',\n    description:\n      'If `true`, Renovate will inherit configuration from the `inheritConfigFileName` file in `inheritConfigRepoName`.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'inheritConfigRepoName',\n    description:\n      'Renovate will look in this repo for the `inheritConfigFileName`.',\n    type: 'string',\n    default: '{{parentOrg}}/renovate-config',\n    globalOnly: true,\n  },\n  {\n    name: 'inheritConfigFileName',\n    description:\n      'Renovate will look for this config file name in the `inheritConfigRepoName`.',\n    type: 'string',\n    default: 'org-inherited-config.json',\n    globalOnly: true,\n  },\n  {\n    name: 'inheritConfigStrict',\n    description:\n      'If `true`, any `inheritedConfig` fetch error will result in an aborted run.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'requireConfig',\n    description:\n      \"Controls Renovate's behavior regarding repository config files such as `renovate.json`.\",\n    stage: 'repository',\n    type: 'string',\n    default: 'required',\n    allowedValues: ['required', 'optional', 'ignored'],\n    globalOnly: true,\n    inheritConfigSupport: true,\n  },\n  {\n    name: 'optimizeForDisabled',\n    description:\n      'Set to `true` to perform a check for disabled config prior to cloning.',\n    stage: 'repository',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  // Dependency Dashboard\n  {\n    name: 'dependencyDashboard',\n    description:\n      'Whether to create a \"Dependency Dashboard\" issue in the repository.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'dependencyDashboardApproval',\n    description:\n      'Controls if updates need manual approval from the Dependency Dashboard issue before PRs are created.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'dependencyDashboardAutoclose',\n    description:\n      'Set to `true` to let Renovate close the Dependency Dashboard issue if there are no more updates.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'dependencyDashboardTitle',\n    description: 'Title for the Dependency Dashboard issue.',\n    type: 'string',\n    default: `Dependency Dashboard`,\n  },\n  {\n    name: 'dependencyDashboardHeader',\n    description:\n      'Any text added here will be placed first in the Dependency Dashboard issue body.',\n    type: 'string',\n    default:\n      'This issue lists Renovate updates and detected dependencies. Read the [Dependency Dashboard](https://docs.renovatebot.com/key-concepts/dashboard/) docs to learn more.',\n  },\n  {\n    name: 'dependencyDashboardFooter',\n    description:\n      'Any text added here will be placed last in the Dependency Dashboard issue body, with a divider separator before it.',\n    type: 'string',\n  },\n  {\n    name: 'dependencyDashboardLabels',\n    description:\n      'These labels will always be applied on the Dependency Dashboard issue, even when they have been removed manually.',\n    type: 'array',\n    subType: 'string',\n    default: null,\n  },\n  {\n    name: 'dependencyDashboardOSVVulnerabilitySummary',\n    description:\n      'Control if the Dependency Dashboard issue lists CVEs supplied by [osv.dev](https://osv.dev).',\n    type: 'string',\n    allowedValues: ['none', 'all', 'unresolved'],\n    default: 'none',\n    experimental: true,\n  },\n  {\n    name: 'configWarningReuseIssue',\n    description:\n      'Set this to `false` to make Renovate create a new issue for each config warning, instead of reopening or reusing an existing issue.',\n    type: 'boolean',\n    default: true,\n  },\n\n  // encryption\n  {\n    name: 'privateKey',\n    description: 'Server-side private key.',\n    stage: 'repository',\n    type: 'string',\n    replaceLineReturns: true,\n    globalOnly: true,\n  },\n  {\n    name: 'privateKeyOld',\n    description: 'Secondary or old private key to try.',\n    stage: 'repository',\n    type: 'string',\n    replaceLineReturns: true,\n    globalOnly: true,\n  },\n  {\n    name: 'privateKeyPath',\n    description: 'Path to the Server-side private key.',\n    stage: 'repository',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'privateKeyPathOld',\n    description: 'Path to the Server-side old private key.',\n    stage: 'repository',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'encrypted',\n    description:\n      'An object containing configuration encrypted with project key.',\n    stage: 'repository',\n    type: 'object',\n    default: null,\n  },\n  // Scheduling\n  {\n    name: 'timezone',\n    description:\n      'Must conform to [IANA Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) format.',\n    type: 'string',\n  },\n  {\n    name: 'schedule',\n    description: 'Limit branch creation to these times of day or week.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    cli: true,\n    env: false,\n    default: ['at any time'],\n  },\n  {\n    name: 'automergeSchedule',\n    description: 'Limit automerge to these times of day or week.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    cli: true,\n    env: false,\n    default: ['at any time'],\n  },\n  {\n    name: 'updateNotScheduled',\n    description:\n      'Whether to update branches when not scheduled. Renovate will not create branches outside of the schedule.',\n    stage: 'branch',\n    type: 'boolean',\n    default: true,\n  },\n  // Bot administration\n  {\n    name: 'persistRepoData',\n    description:\n      'If set to `true`: keep repository data between runs instead of deleting the data.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'exposeAllEnv',\n    description:\n      'Set this to `true` to allow passing of all environment variables to package managers.',\n    globalOnly: true,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'allowPlugins',\n    description:\n      'Set this to `true` if repositories are allowed to run install plugins.',\n    globalOnly: true,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'allowScripts',\n    description:\n      'Set this to `true` if repositories are allowed to run install scripts.',\n    globalOnly: true,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'allowCustomCrateRegistries',\n    description: 'Set this to `true` to allow custom crate registries.',\n    globalOnly: true,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'ignorePlugins',\n    description:\n      'Set this to `true` if `allowPlugins=true` but you wish to skip running plugins when updating lock files.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'ignoreScripts',\n    description:\n      'Set this to `false` if `allowScripts=true` and you wish to run scripts when updating lock files.',\n    type: 'boolean',\n    default: true,\n    supportedManagers: ['npm', 'bun', 'composer', 'copier'],\n  },\n  {\n    name: 'platform',\n    description: 'Platform type of repository.',\n    type: 'string',\n    allowedValues: getPlatformList(),\n    default: 'github',\n    globalOnly: true,\n  },\n  {\n    name: 'endpoint',\n    description: 'Custom endpoint to use.',\n    type: 'string',\n    globalOnly: true,\n    default: null,\n  },\n  {\n    name: 'token',\n    description: 'Repository Auth Token.',\n    stage: 'repository',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'username',\n    description: 'Username for authentication.',\n    stage: 'repository',\n    type: 'string',\n    supportedPlatforms: ['azure', 'bitbucket', 'bitbucket-server'],\n    globalOnly: true,\n  },\n  {\n    name: 'password',\n    description: 'Password for authentication.',\n    stage: 'repository',\n    type: 'string',\n    supportedPlatforms: ['azure', 'bitbucket', 'bitbucket-server'],\n    globalOnly: true,\n  },\n  {\n    name: 'npmrc',\n    description:\n      'String copy of `.npmrc` file. Use `\\\\n` instead of line breaks.',\n    stage: 'branch',\n    type: 'string',\n  },\n  {\n    name: 'npmrcMerge',\n    description:\n      'Whether to merge `config.npmrc` with repo `.npmrc` content if both are found.',\n    stage: 'branch',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'npmToken',\n    description: 'npm token used to authenticate with the default registry.',\n    stage: 'branch',\n    type: 'string',\n  },\n  {\n    name: 'updateLockFiles',\n    description: 'Set to `false` to disable lock file updating.',\n    type: 'boolean',\n    default: true,\n    supportedManagers: ['npm'],\n  },\n  {\n    name: 'skipInstalls',\n    description:\n      'Skip installing modules/dependencies if lock file updating is possible without a full install.',\n    type: 'boolean',\n    default: null,\n  },\n  {\n    name: 'autodiscover',\n    description: 'Autodiscover all repositories.',\n    stage: 'global',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'autodiscoverFilter',\n    description: 'Filter the list of autodiscovered repositories.',\n    stage: 'global',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    default: null,\n    globalOnly: true,\n  },\n  {\n    name: 'autodiscoverNamespaces',\n    description:\n      'Filter the list of autodiscovered repositories by namespaces.',\n    stage: 'global',\n    type: 'array',\n    subType: 'string',\n    default: null,\n    globalOnly: true,\n    supportedPlatforms: ['gitea', 'gitlab'],\n  },\n  {\n    name: 'autodiscoverProjects',\n    description:\n      'Filter the list of autodiscovered repositories by project names.',\n    stage: 'global',\n    type: 'array',\n    subType: 'string',\n    default: null,\n    globalOnly: true,\n    supportedPlatforms: ['bitbucket'],\n    patternMatch: true,\n  },\n  {\n    name: 'autodiscoverTopics',\n    description: 'Filter the list of autodiscovered repositories by topics.',\n    stage: 'global',\n    type: 'array',\n    subType: 'string',\n    default: null,\n    globalOnly: true,\n    supportedPlatforms: ['gitea', 'github', 'gitlab'],\n  },\n  {\n    name: 'prCommitsPerRunLimit',\n    description:\n      'Set the maximum number of commits per Renovate run. By default there is no limit.',\n    stage: 'global',\n    type: 'integer',\n    default: 0,\n    globalOnly: true,\n  },\n  {\n    name: 'repositories',\n    description: 'List of Repositories.',\n    stage: 'global',\n    type: 'array',\n    subType: 'string',\n    cli: false,\n    globalOnly: true,\n  },\n  {\n    name: 'baseBranches',\n    description:\n      'List of one or more custom base branches defined as exact strings and/or via regex expressions.',\n    type: 'array',\n    subType: 'string',\n    stage: 'package',\n    cli: false,\n  },\n  {\n    name: 'useBaseBranchConfig',\n    description:\n      'Whether to read configuration from `baseBranches` instead of only the default branch.',\n    type: 'string',\n    allowedValues: ['merge', 'none'],\n    default: 'none',\n  },\n  {\n    name: 'gitAuthor',\n    description:\n      'Author to use for Git commits. Must conform to [RFC5322](https://datatracker.ietf.org/doc/html/rfc5322).',\n    type: 'string',\n  },\n  {\n    name: 'gitPrivateKey',\n    description: 'PGP key to use for signing Git commits.',\n    type: 'string',\n    cli: false,\n    globalOnly: true,\n    stage: 'global',\n  },\n  {\n    name: 'gitIgnoredAuthors',\n    description:\n      'Git authors which are ignored by Renovate. Must conform to [RFC5322](https://datatracker.ietf.org/doc/html/rfc5322).',\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n  },\n  {\n    name: 'gitTimeout',\n    description:\n      'Configure the timeout with a number of milliseconds to wait for a Git task.',\n    type: 'integer',\n    globalOnly: true,\n    default: 0,\n  },\n  {\n    name: 'enabledManagers',\n    description:\n      'A list of package managers to enable. Only managers on the list are enabled.',\n    type: 'array',\n    subType: 'string',\n    mergeable: false,\n    stage: 'repository',\n  },\n  {\n    name: 'includePaths',\n    description: 'Include package files only within these defined paths.',\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n    default: [],\n  },\n  {\n    name: 'ignorePaths',\n    description:\n      'Skip any package file whose path matches one of these. Can be a string or glob pattern.',\n    type: 'array',\n    mergeable: false,\n    subType: 'string',\n    stage: 'repository',\n    default: ['**/node_modules/**', '**/bower_components/**'],\n  },\n  {\n    name: 'excludeCommitPaths',\n    description:\n      'A file matching any of these glob patterns will not be committed, even if the file has been updated.',\n    type: 'array',\n    subType: 'string',\n    default: [],\n    advancedUse: true,\n  },\n  {\n    name: 'executionTimeout',\n    description:\n      'Default execution timeout in minutes for child processes Renovate creates.',\n    type: 'integer',\n    default: 15,\n    globalOnly: true,\n  },\n  {\n    name: 'registryAliases',\n    description: 'Aliases for registries.',\n    mergeable: true,\n    type: 'object',\n    default: {},\n    additionalProperties: {\n      type: 'string',\n    },\n    supportedManagers: [\n      'ansible',\n      'bitbucket-pipelines',\n      'buildpacks',\n      'crossplane',\n      'devcontainer',\n      'docker-compose',\n      'dockerfile',\n      'droneci',\n      'gitlabci',\n      'helm-requirements',\n      'helmfile',\n      'helmv3',\n      'kubernetes',\n      'kustomize',\n      'terraform',\n      'vendir',\n      'woodpecker',\n    ],\n  },\n  {\n    name: 'defaultRegistryUrls',\n    description:\n      'List of registry URLs to use as the default for a datasource.',\n    type: 'array',\n    subType: 'string',\n    default: null,\n    stage: 'branch',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'defaultRegistryUrlTemplate',\n    description:\n      'Template for generating a `defaultRegistryUrl` for custom datasource.',\n    type: 'string',\n    default: '',\n    parents: ['customDatasources'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'registryUrls',\n    description:\n      'List of URLs to try for dependency lookup. Package manager specific.',\n    type: 'array',\n    subType: 'string',\n    default: null,\n    stage: 'branch',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'extractVersion',\n    description:\n      \"A regex (`re2`) to extract a version from a datasource's raw version string.\",\n    type: 'string',\n    format: 'regex',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'versionCompatibility',\n    description:\n      'A regex (`re2`) with named capture groups to show how version and compatibility are split from a raw version string.',\n    type: 'string',\n    format: 'regex',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'versioning',\n    description: 'Versioning to use for filtering and comparisons.',\n    type: 'string',\n    allowedValues: getVersioningList(),\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'azureWorkItemId',\n    description:\n      'The id of an existing work item on Azure Boards to link to each PR.',\n    type: 'integer',\n    default: 0,\n    supportedPlatforms: ['azure'],\n  },\n  {\n    name: 'autoApprove',\n    description: 'Set to `true` to automatically approve PRs.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['azure', 'gerrit', 'gitlab'],\n  },\n  // depType\n  {\n    name: 'ignoreDeps',\n    description: 'Dependencies to ignore.',\n    type: 'array',\n    subType: 'string',\n    stage: 'package',\n    mergeable: true,\n  },\n  {\n    name: 'updateInternalDeps',\n    description:\n      'Whether to update internal dep versions in a monorepo. Works on Yarn Workspaces.',\n    type: 'boolean',\n    default: false,\n    stage: 'package',\n  },\n  {\n    name: 'packageRules',\n    description: 'Rules for matching packages.',\n    type: 'array',\n    stage: 'package',\n    mergeable: true,\n  },\n  {\n    name: 'matchCurrentAge',\n    description:\n      'Matches the current age of the package derived from its release timestamp. Valid only within a `packageRules` object.',\n    type: 'string',\n    parents: ['packageRules'],\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchCategories',\n    description:\n      'List of categories to match (for example: `[\"python\"]`). Valid only within a `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    parents: ['packageRules'],\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchRepositories',\n    description:\n      'List of repositories to match (e.g. `[\"**/*-archived\"]`). Valid only within a `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    stage: 'package',\n    parents: ['packageRules'],\n    mergeable: true,\n    cli: false,\n    env: false,\n    patternMatch: true,\n  },\n  {\n    name: 'matchBaseBranches',\n    description:\n      'List of strings containing exact matches (e.g. `[\"main\"]`) and/or regex expressions (e.g. `[\"/^release/.*/\"]`). Valid only within a `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    parents: ['packageRules'],\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchManagers',\n    description:\n      'List of package managers to match (e.g. `[\"pipenv\"]`). Valid only within a `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    parents: ['packageRules'],\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchDatasources',\n    description:\n      'List of datasources to match (e.g. `[\"orb\"]`). Valid only within a `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    parents: ['packageRules'],\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchDepTypes',\n    description:\n      'List of depTypes to match (e.g. [`peerDependencies`]). Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    parents: ['packageRules'],\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchPackageNames',\n    description:\n      'Package names to match. Valid only within a `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    stage: 'package',\n    parents: ['packageRules'],\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchDepNames',\n    description:\n      'Dep names to match. Valid only within a `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    stage: 'package',\n    parents: ['packageRules'],\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchCurrentValue',\n    description:\n      'A regex or glob pattern to match against the raw `currentValue` string of a dependency. Valid only within a `packageRules` object.',\n    type: 'string',\n    stage: 'package',\n    parents: ['packageRules'],\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchCurrentVersion',\n    description:\n      'A version, or range of versions, to match against the current version of a package. Valid only within a `packageRules` object.',\n    type: 'string',\n    stage: 'package',\n    parents: ['packageRules'],\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchNewValue',\n    description:\n      'A regex or glob pattern to match against the raw `newValue` string of a dependency. Valid only within a `packageRules` object.',\n    type: 'string',\n    stage: 'package',\n    parents: ['packageRules'],\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'sourceUrl',\n    description: 'The source URL of the package.',\n    type: 'string',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'sourceDirectory',\n    description:\n      'The source directory in which the package is present at its source.',\n    type: 'string',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchSourceUrls',\n    description: 'A list of source URLs to exact match against.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    stage: 'package',\n    parents: ['packageRules'],\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'autoReplaceGlobalMatch',\n    description:\n      'Control whether replacement regular expressions are global matches or only the first match.',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'replacementName',\n    description:\n      'The name of the new dependency that replaces the old deprecated dependency.',\n    type: 'string',\n    stage: 'package',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'replacementNameTemplate',\n    description: 'Controls what the replacement package name.',\n    type: 'string',\n    default: '{{{packageName}}}',\n    stage: 'package',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'replacementVersion',\n    description:\n      'The version of the new dependency that replaces the old deprecated dependency.',\n    type: 'string',\n    stage: 'package',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'replacementVersionTemplate',\n    description:\n      'Template field for the version of the new dependency that replaces the old deprecated dependency.',\n    type: 'string',\n    stage: 'package',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'replacementApproach',\n    description:\n      'Select whether to perform a direct replacement or alias replacement.',\n    type: 'string',\n    stage: 'branch',\n    allowedValues: ['replace', 'alias'],\n    supportedManagers: ['npm'],\n    default: 'replace',\n  },\n  {\n    name: 'matchConfidence',\n    description:\n      'Merge confidence levels to match against (`low`, `neutral`, `high`, `very high`). Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowedValues: ['low', 'neutral', 'high', 'very high'],\n    allowString: true,\n    stage: 'package',\n    parents: ['packageRules'],\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchUpdateTypes',\n    description:\n      'Update types to match against (`major`, `minor`, `pin`, `pinDigest`, etc). Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowedValues: [\n      'major',\n      'minor',\n      'patch',\n      'pin',\n      'pinDigest',\n      'digest',\n      'lockFileMaintenance',\n      'rollback',\n      'bump',\n      'replacement',\n    ],\n    allowString: true,\n    stage: 'package',\n    parents: ['packageRules'],\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchFileNames',\n    description:\n      'List of strings to do an exact match against package and lock files with full path. Only works inside a `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchJsonata',\n    description:\n      'A JSONata expression to match against the full config object. Valid only within a `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    stage: 'package',\n    parents: ['packageRules'],\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  // Version behavior\n  {\n    name: 'allowedVersions',\n    description:\n      'A version range or regex pattern capturing allowed versions for dependencies.',\n    type: 'string',\n    parents: ['packageRules'],\n    stage: 'package',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'changelogUrl',\n    description:\n      'Set a custom URL for the changelog. Renovate will put this URL in the PR body text.',\n    type: 'string',\n    stage: 'pr',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'pinDigests',\n    description: 'Whether to add digests to Dockerfile source images.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'separateMajorMinor',\n    description:\n      'If set to `false`, Renovate will upgrade dependencies to their latest release only. Renovate will not separate major or minor branches.',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'separateMultipleMajor',\n    description:\n      'If set to `true`, PRs will be raised separately for each available `major` upgrade version.',\n    stage: 'package',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'separateMultipleMinor',\n    description:\n      'If set to `true`, Renovate creates separate PRs for each `minor` stream.',\n    stage: 'package',\n    type: 'boolean',\n    default: false,\n    experimental: true,\n  },\n  {\n    name: 'separateMinorPatch',\n    description:\n      'If set to `true`, Renovate will separate `minor` and `patch` updates into separate branches.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'ignoreUnstable',\n    description: 'Ignore versions with unstable SemVer.',\n    stage: 'package',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'ignoreDeprecated',\n    description:\n      'Avoid upgrading from a non-deprecated version to a deprecated one.',\n    stage: 'package',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'followTag',\n    description: 'If defined, packages will follow this release tag exactly.',\n    stage: 'package',\n    type: 'string',\n    cli: false,\n    env: false,\n    advancedUse: true,\n  },\n  {\n    name: 'respectLatest',\n    description: 'Ignore versions newer than npm \"latest\" version.',\n    stage: 'package',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'rangeStrategy',\n    description: 'Determines how to modify or update existing ranges.',\n    type: 'string',\n    default: 'auto',\n    allowedValues: [\n      'auto',\n      'pin',\n      'bump',\n      'replace',\n      'widen',\n      'update-lockfile',\n      'in-range-only',\n    ],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'branchPrefix',\n    description: 'Prefix to use for all branch names.',\n    stage: 'branch',\n    type: 'string',\n    default: `renovate/`,\n  },\n  {\n    name: 'branchPrefixOld',\n    description: 'Old branchPrefix value to check for existing PRs.',\n    stage: 'branch',\n    type: 'string',\n    default: `renovate/`,\n  },\n  {\n    name: 'bumpVersion',\n    description: 'Bump the version in the package file being updated.',\n    type: 'string',\n    allowedValues: ['major', 'minor', 'patch', 'prerelease'],\n    supportedManagers: ['helmv3', 'npm', 'nuget', 'maven', 'sbt'],\n  },\n  // Major/Minor/Patch\n  {\n    name: 'major',\n    description: 'Configuration to apply when an update type is `major`.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'minor',\n    description: 'Configuration to apply when an update type is `minor`.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'patch',\n    description: 'Configuration to apply when an update type is `patch`.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'pin',\n    description: 'Configuration to apply when an update type is `pin`.',\n    stage: 'package',\n    type: 'object',\n    default: {\n      rebaseWhen: 'behind-base-branch',\n      groupName: 'Pin Dependencies',\n      groupSlug: 'pin-dependencies',\n      commitMessageAction: 'Pin',\n      group: {\n        commitMessageTopic: 'dependencies',\n        commitMessageExtra: '',\n      },\n    },\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'digest',\n    description:\n      'Configuration to apply when updating a digest (no change in tag/version).',\n    stage: 'package',\n    type: 'object',\n    default: {\n      branchTopic: '{{{depNameSanitized}}}-digest',\n      commitMessageExtra: 'to {{newDigestShort}}',\n      commitMessageTopic: '{{{depName}}} digest',\n    },\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'pinDigest',\n    description:\n      'Configuration to apply when pinning a digest (no change in tag/version).',\n    stage: 'package',\n    type: 'object',\n    default: {\n      groupName: 'Pin Dependencies',\n      groupSlug: 'pin-dependencies',\n      commitMessageAction: 'Pin',\n      group: {\n        commitMessageTopic: 'dependencies',\n        commitMessageExtra: '',\n      },\n    },\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'rollback',\n    description: 'Configuration to apply when rolling back a version.',\n    stage: 'package',\n    type: 'object',\n    default: {\n      branchTopic: '{{{depNameSanitized}}}-rollback',\n      commitMessageAction: 'Roll back',\n      semanticCommitType: 'fix',\n    },\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'replacement',\n    description: 'Configuration to apply when replacing a dependency.',\n    stage: 'package',\n    type: 'object',\n    default: {\n      branchTopic: '{{{depNameSanitized}}}-replacement',\n      commitMessageAction: 'Replace',\n      commitMessageExtra:\n        'with {{newName}} {{#if isMajor}}{{{prettyNewMajor}}}{{else}}{{#if isSingleVersion}}{{{prettyNewVersion}}}{{else}}{{{newValue}}}{{/if}}{{/if}}',\n      prBodyNotes: [\n        'This is a special PR that replaces `{{{depName}}}` with the community suggested minimal stable replacement version.',\n      ],\n    },\n    cli: false,\n    mergeable: true,\n  },\n  // Semantic commit / Semantic release\n  {\n    name: 'semanticCommits',\n    description: 'Enable Semantic Commit prefixes for commits and PR titles.',\n    type: 'string',\n    allowedValues: ['auto', 'enabled', 'disabled'],\n    default: 'auto',\n  },\n  {\n    name: 'semanticCommitType',\n    description: 'Commit type to use if Semantic Commits is enabled.',\n    type: 'string',\n    default: 'chore',\n  },\n  {\n    name: 'semanticCommitScope',\n    description: 'Commit scope to use if Semantic Commits are enabled.',\n    type: 'string',\n    default: 'deps',\n  },\n  {\n    name: 'commitMessageLowerCase',\n    description: 'Lowercase PR- and commit titles.',\n    type: 'string',\n    allowedValues: ['auto', 'never'],\n    default: 'auto',\n  },\n  // PR Behavior\n  {\n    name: 'keepUpdatedLabel',\n    description:\n      'If set, users can add this label to PRs to request they be kept updated with the base branch.',\n    type: 'string',\n    supportedPlatforms: ['azure', 'gitea', 'github', 'gitlab'],\n  },\n  {\n    name: 'rollbackPrs',\n    description:\n      'Create PRs to roll back versions if the current version is not found in the registry.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'recreateWhen',\n    description: 'Recreate PRs even if same ones were closed previously.',\n    type: 'string',\n    default: 'auto',\n    allowedValues: ['auto', 'always', 'never'],\n  },\n  {\n    name: 'rebaseWhen',\n    description: 'Controls when Renovate rebases an existing branch.',\n    type: 'string',\n    allowedValues: [\n      'auto',\n      'never',\n      'conflicted',\n      'behind-base-branch',\n      'automerging',\n    ],\n    default: 'auto',\n  },\n  {\n    name: 'rebaseLabel',\n    description: 'Label to request a rebase from Renovate bot.',\n    type: 'string',\n    default: 'rebase',\n  },\n  {\n    name: 'stopUpdatingLabel',\n    description: 'Label to make Renovate stop updating a PR.',\n    type: 'string',\n    default: 'stop-updating',\n    supportedPlatforms: ['azure', 'gitea', 'github', 'gitlab'],\n  },\n  {\n    name: 'minimumReleaseAge',\n    description: 'Time required before a new release is considered stable.',\n    type: 'string',\n    default: null,\n  },\n  {\n    name: 'internalChecksAsSuccess',\n    description:\n      'Whether to consider passing internal checks such as `minimumReleaseAge` when determining branch status.',\n    type: 'boolean',\n    default: false,\n  },\n  /*\n   * Undocumented experimental feature\n  {\n    name: 'minimumConfidence',\n    description:\n      'Minimum Merge confidence level to filter by. Requires authentication to work.',\n    type: 'string',\n    allowedValues: ['low', 'neutral', 'high', 'very high'],\n    default: 'low',\n  },\n  */\n  {\n    name: 'internalChecksFilter',\n    description: 'When and how to filter based on internal checks.',\n    type: 'string',\n    allowedValues: ['strict', 'flexible', 'none'],\n    default: 'strict',\n  },\n  {\n    name: 'processEnv',\n    description: 'Environment variables to be used in global config only.',\n    type: 'object',\n    default: {},\n    globalOnly: true,\n    stage: 'global',\n    additionalProperties: {\n      type: 'string',\n    },\n  },\n  {\n    name: 'prCreation',\n    description: 'When to create the PR for a branch.',\n    type: 'string',\n    allowedValues: ['immediate', 'not-pending', 'status-success', 'approval'],\n    default: 'immediate',\n  },\n  {\n    name: 'prNotPendingHours',\n    description: 'Timeout in hours for when `prCreation=not-pending`.',\n    type: 'integer',\n    default: 25,\n  },\n  {\n    name: 'prHourlyLimit',\n    description:\n      'Rate limit PRs to maximum x created per hour. 0 means no limit.',\n    type: 'integer',\n    default: 2,\n  },\n  {\n    name: 'prConcurrentLimit',\n    description:\n      'Limit to a maximum of x concurrent branches/PRs. 0 means no limit.',\n    type: 'integer',\n    default: 10,\n  },\n  {\n    name: 'branchConcurrentLimit',\n    description:\n      'Limit to a maximum of x concurrent branches. 0 means no limit, `null` (default) inherits value from `prConcurrentLimit`.',\n    type: 'integer',\n    default: null, // inherit prConcurrentLimit\n  },\n  {\n    name: 'prPriority',\n    description:\n      'Set sorting priority for PR creation. PRs with higher priority are created first, negative priority last.',\n    type: 'integer',\n    allowNegative: true,\n    default: 0,\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'overrideDatasource',\n    description: 'Override the datasource value.',\n    type: 'string',\n    stage: 'package',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n    advancedUse: true,\n  },\n  {\n    name: 'overrideDepName',\n    description: 'Override the depName value.',\n    type: 'string',\n    stage: 'package',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n    advancedUse: true,\n  },\n  {\n    name: 'overridePackageName',\n    description: 'Override the packageName value.',\n    type: 'string',\n    stage: 'package',\n    parents: ['packageRules'],\n    cli: false,\n    env: false,\n    advancedUse: true,\n  },\n  {\n    name: 'bbAutoResolvePrTasks',\n    description:\n      'The PR tasks will be automatically completed after the PR is raised.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['bitbucket'],\n  },\n  {\n    name: 'bbUseDefaultReviewers',\n    description: 'Use the default reviewers (Bitbucket only).',\n    type: 'boolean',\n    default: true,\n    supportedPlatforms: ['bitbucket', 'bitbucket-server'],\n  },\n  {\n    name: 'bbUseDevelopmentBranch',\n    description: `Use the repository's [development branch](https://support.atlassian.com/bitbucket-cloud/docs/branch-a-repository/#The-branching-model) as the repository's default branch.`,\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['bitbucket'],\n    globalOnly: true,\n    inheritConfigSupport: true,\n  },\n  // Automatic merging\n  {\n    name: 'automerge',\n    description:\n      'Whether to automerge branches/PRs automatically, without human intervention.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'automergeType',\n    description: 'How to automerge, if enabled.',\n    type: 'string',\n    allowedValues: ['branch', 'pr', 'pr-comment'],\n    default: 'pr',\n  },\n  {\n    name: 'automergeStrategy',\n    description:\n      'The merge strategy to use when automerging PRs. Used only if `automergeType=pr`.',\n    type: 'string',\n    allowedValues: ['auto', 'fast-forward', 'merge-commit', 'rebase', 'squash'],\n    default: 'auto',\n    supportedPlatforms: ['azure', 'bitbucket', 'gitea', 'github'],\n  },\n  {\n    name: 'automergeComment',\n    description:\n      'PR comment to add to trigger automerge. Only used if `automergeType=pr-comment`.',\n    type: 'string',\n    default: 'automergeComment',\n  },\n  {\n    name: 'ignoreTests',\n    description: 'Set to `true` to enable automerging without tests.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'transformTemplates',\n    description: 'List of jsonata transformation rules.',\n    type: 'array',\n    subType: 'string',\n    parents: ['customDatasources'],\n    default: [],\n  },\n  {\n    name: 'vulnerabilityAlerts',\n    description:\n      'Config to apply when a PR is needed due to a vulnerability in the existing package version.',\n    type: 'object',\n    default: {\n      groupName: null,\n      schedule: [],\n      dependencyDashboardApproval: false,\n      minimumReleaseAge: null,\n      rangeStrategy: 'update-lockfile',\n      commitMessageSuffix: '[SECURITY]',\n      branchTopic: `{{{datasource}}}-{{{depNameSanitized}}}-vulnerability`,\n      prCreation: 'immediate',\n      vulnerabilityFixStrategy: 'lowest',\n    },\n    mergeable: true,\n    cli: false,\n    env: false,\n    supportedPlatforms: ['github'],\n  },\n  {\n    name: 'vulnerabilityFixStrategy',\n    description:\n      'Strategy to use when fixing vulnerabilities. `lowest` will propose the earliest version with a fix, `highest` will always pick the latest version.',\n    type: 'string',\n    allowedValues: ['lowest', 'highest'],\n    default: 'lowest',\n    parents: ['vulnerabilityAlerts'],\n  },\n  {\n    name: 'osvVulnerabilityAlerts',\n    description: 'Use vulnerability alerts from `osv.dev`.',\n    type: 'boolean',\n    default: false,\n    experimental: true,\n    experimentalIssues: [20542],\n  },\n  {\n    name: 'pruneBranchAfterAutomerge',\n    description: 'Set to `true` to enable branch pruning after automerging.',\n    type: 'boolean',\n    default: true,\n  },\n  // Default templates\n  {\n    name: 'branchName',\n    description: 'Branch name template.',\n    type: 'string',\n    default: '{{{branchPrefix}}}{{{additionalBranchPrefix}}}{{{branchTopic}}}',\n    deprecationMsg:\n      'We strongly recommended that you avoid configuring this field directly. Please edit `branchPrefix`, `additionalBranchPrefix`, or `branchTopic` instead.',\n    cli: false,\n  },\n  {\n    name: 'additionalBranchPrefix',\n    description: 'Additional string value to be appended to `branchPrefix`.',\n    type: 'string',\n    default: '',\n    cli: false,\n  },\n  {\n    name: 'branchTopic',\n    description: 'Branch topic.',\n    type: 'string',\n    default:\n      '{{{depNameSanitized}}}-{{{newMajor}}}{{#if separateMinorPatch}}{{#if isPatch}}.{{{newMinor}}}{{/if}}{{/if}}.x{{#if isLockfileUpdate}}-lockfile{{/if}}',\n    cli: false,\n  },\n  {\n    name: 'commitMessage',\n    description: 'Message to use for commit messages and pull request titles.',\n    type: 'string',\n    default:\n      '{{{commitMessagePrefix}}} {{{commitMessageAction}}} {{{commitMessageTopic}}} {{{commitMessageExtra}}} {{{commitMessageSuffix}}}',\n    deprecationMsg:\n      'We deprecated editing the `commitMessage` directly, and we recommend you stop using this config option. Instead use config options like `commitMessageAction`, `commitMessageExtra`, and so on, to create the commit message you want.',\n    cli: false,\n  },\n  {\n    name: 'commitBody',\n    description:\n      'Commit message body template. Will be appended to commit message, separated by two line returns.',\n    type: 'string',\n    cli: false,\n  },\n  {\n    name: 'commitBodyTable',\n    description:\n      'If enabled, append a table in the commit message body describing all updates in the commit.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'commitMessagePrefix',\n    description:\n      'Prefix to add to start of commit messages and PR titles. Uses a semantic prefix if `semanticCommits` is enabled.',\n    type: 'string',\n    cli: false,\n    advancedUse: true,\n  },\n  {\n    name: 'commitMessageAction',\n    description: 'Action verb to use in commit messages and PR titles.',\n    type: 'string',\n    default: 'Update',\n    cli: false,\n    advancedUse: true,\n  },\n  {\n    name: 'commitMessageTopic',\n    description:\n      'The upgrade topic/noun used in commit messages and PR titles.',\n    type: 'string',\n    default: 'dependency {{depName}}',\n    cli: false,\n    advancedUse: true,\n  },\n  {\n    name: 'commitMessageExtra',\n    description:\n      'Extra description used after the commit message topic - typically the version.',\n    type: 'string',\n    default:\n      'to {{#if isPinDigest}}{{{newDigestShort}}}{{else}}{{#if isMajor}}{{prettyNewMajor}}{{else}}{{#if isSingleVersion}}{{prettyNewVersion}}{{else}}{{#if newValue}}{{{newValue}}}{{else}}{{{newDigestShort}}}{{/if}}{{/if}}{{/if}}{{/if}}',\n    cli: false,\n    advancedUse: true,\n  },\n  {\n    name: 'commitMessageSuffix',\n    description: 'Suffix to add to end of commit messages and PR titles.',\n    type: 'string',\n    cli: false,\n    advancedUse: true,\n  },\n  {\n    name: 'prBodyTemplate',\n    description:\n      'Pull Request body template. Controls which sections are rendered in the body of the pull request.',\n    type: 'string',\n    default:\n      '{{{header}}}{{{table}}}{{{warnings}}}{{{notes}}}{{{changelogs}}}{{{configDescription}}}{{{controls}}}{{{footer}}}',\n    cli: false,\n  },\n  {\n    name: 'prTitle',\n    description:\n      'Pull Request title template. Inherits from `commitMessage` if null.',\n    type: 'string',\n    default: null,\n    deprecationMsg:\n      'Direct editing of `prTitle` is now deprecated. Instead use config options like `commitMessageAction`, `commitMessageExtra`, and so on, as they will be passed through to `prTitle`.',\n    cli: false,\n  },\n  {\n    name: 'prTitleStrict',\n    description:\n      'Whether to bypass appending extra context to the Pull Request title.',\n    type: 'boolean',\n    default: false,\n    experimental: true,\n    cli: false,\n  },\n  {\n    name: 'prHeader',\n    description: 'Text added here will be placed first in the PR body.',\n    type: 'string',\n  },\n  {\n    name: 'prFooter',\n    description:\n      'Text added here will be placed last in the PR body, with a divider separator before it.',\n    type: 'string',\n    default: `This PR has been generated by [Renovate Bot](https://github.com/renovatebot/renovate).`,\n  },\n  {\n    name: 'customizeDashboard',\n    description: 'Customize sections in the Dependency Dashboard issue.',\n    type: 'object',\n    default: {},\n    freeChoice: true,\n    additionalProperties: {\n      type: 'string',\n    },\n  },\n  {\n    name: 'lockFileMaintenance',\n    description: 'Configuration for lock file maintenance.',\n    stage: 'branch',\n    type: 'object',\n    default: {\n      enabled: false,\n      recreateWhen: 'always',\n      rebaseStalePrs: true,\n      branchTopic: 'lock-file-maintenance',\n      commitMessageAction: 'Lock file maintenance',\n      commitMessageTopic: null,\n      commitMessageExtra: null,\n      schedule: ['before 4am on monday'],\n      groupName: null,\n      prBodyDefinitions: {\n        Change: 'All locks refreshed',\n      },\n    },\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'hashedBranchLength',\n    description:\n      'If enabled, branch names will use a hashing function to ensure each branch has that length.',\n    type: 'integer',\n    default: null,\n    cli: false,\n  },\n  // Dependency Groups\n  {\n    name: 'groupName',\n    description: 'Human understandable name for the dependency group.',\n    type: 'string',\n    default: null,\n  },\n  {\n    name: 'groupSlug',\n    description:\n      'Slug to use for group (e.g. in branch name). Slug is calculated from `groupName` if `null`.',\n    type: 'string',\n    default: null,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'group',\n    description: 'Config if `groupName` is enabled.',\n    type: 'object',\n    default: {\n      branchTopic: '{{{groupSlug}}}',\n      commitMessageTopic: '{{{groupName}}}',\n    },\n    cli: false,\n    env: false,\n    mergeable: true,\n    advancedUse: true,\n  },\n  // Pull Request options\n  {\n    name: 'labels',\n    description: 'Labels to set in Pull Request.',\n    type: 'array',\n    subType: 'string',\n  },\n  {\n    name: 'addLabels',\n    description: 'Labels to add to Pull Request.',\n    type: 'array',\n    subType: 'string',\n    mergeable: true,\n  },\n  {\n    name: 'assignees',\n    description:\n      'Assignees for Pull Request (either username or email address depending on the platform).',\n    type: 'array',\n    subType: 'string',\n  },\n  {\n    name: 'assigneesFromCodeOwners',\n    description:\n      'Determine assignees based on configured code owners and changes in PR.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'expandCodeOwnersGroups',\n    description:\n      'Expand the configured code owner groups into a full list of group members.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['gitlab'],\n  },\n  {\n    name: 'assigneesSampleSize',\n    description: 'Take a random sample of given size from `assignees`.',\n    type: 'integer',\n    default: null,\n  },\n  {\n    name: 'assignAutomerge',\n    description:\n      'Assign reviewers and assignees even if the PR is to be automerged.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'ignoreReviewers',\n    description:\n      'Reviewers to be ignored in PR reviewers presence (either username or email address depending on the platform).',\n    type: 'array',\n    subType: 'string',\n  },\n  {\n    name: 'reviewers',\n    description:\n      'Requested reviewers for Pull Requests (either username or email address depending on the platform).',\n    type: 'array',\n    subType: 'string',\n  },\n  {\n    name: 'reviewersFromCodeOwners',\n    description:\n      'Determine reviewers based on configured code owners and changes in PR.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'filterUnavailableUsers',\n    description: 'Filter reviewers and assignees based on their availability.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['gitlab'],\n  },\n  {\n    name: 'forkModeDisallowMaintainerEdits',\n    description:\n      'Disallow maintainers to push to Renovate pull requests when running in fork mode.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['github'],\n  },\n  {\n    name: 'confidential',\n    description:\n      'If enabled, issues created by Renovate are set as confidential.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['gitlab'],\n  },\n  {\n    name: 'reviewersSampleSize',\n    description: 'Take a random sample of given size from `reviewers`.',\n    type: 'integer',\n    default: null,\n  },\n  {\n    name: 'additionalReviewers',\n    description:\n      'Additional reviewers for Pull Requests (in contrast to `reviewers`, this option adds to the existing reviewer list, rather than replacing it).',\n    type: 'array',\n    subType: 'string',\n    mergeable: true,\n  },\n  {\n    name: 'fileMatch',\n    description: 'RegEx (`re2`) pattern for matching manager files.',\n    type: 'array',\n    subType: 'string',\n    format: 'regex',\n    stage: 'repository',\n    allowString: true,\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'postUpdateOptions',\n    description:\n      'Enable post-update options to be run after package/artifact updating.',\n    type: 'array',\n    default: [],\n    subType: 'string',\n    allowedValues: [\n      'bundlerConservative',\n      'gomodMassage',\n      'gomodTidy',\n      'gomodTidy1.17',\n      'gomodTidyE',\n      'gomodUpdateImportPaths',\n      'gomodSkipVendor',\n      'gomodVendor',\n      'helmUpdateSubChartArchives',\n      'kustomizeInflateHelmCharts',\n      'npmDedupe',\n      'pnpmDedupe',\n      'yarnDedupeFewer',\n      'yarnDedupeHighest',\n    ],\n    cli: false,\n    env: false,\n    mergeable: true,\n  },\n  {\n    name: 'constraints',\n    description:\n      'Configuration object to define language or manager version constraints.',\n    type: 'object',\n    default: {},\n    mergeable: true,\n    cli: false,\n    supportedManagers: [\n      'bundler',\n      'composer',\n      'gomod',\n      'npm',\n      'pep621',\n      'pipenv',\n      'poetry',\n    ],\n    freeChoice: true,\n    additionalProperties: {\n      type: 'string',\n    },\n  },\n  {\n    name: 'hostRules',\n    description: 'Host rules/configuration including credentials.',\n    type: 'array',\n    subType: 'object',\n    stage: 'repository',\n    cli: true,\n    mergeable: true,\n  },\n  {\n    name: 'hostType',\n    description:\n      'hostType for a package rule. Can be a platform name or a datasource name.',\n    type: 'string',\n    stage: 'repository',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchHost',\n    description: 'A domain name, host name or base URL to match against.',\n    type: 'string',\n    stage: 'repository',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'readOnly',\n    description:\n      'Match against requests that only read data and do not mutate anything.',\n    type: 'boolean',\n    stage: 'repository',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'timeout',\n    description: 'Timeout (in milliseconds) for queries to external endpoints.',\n    type: 'integer',\n    stage: 'repository',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'insecureRegistry',\n    description: 'Explicitly turn on insecure Docker registry access (HTTP).',\n    type: 'boolean',\n    default: false,\n    stage: 'repository',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n    advancedUse: true,\n  },\n  {\n    name: 'abortOnError',\n    description:\n      'If enabled, Renovate aborts its run when HTTP request errors occur.',\n    type: 'boolean',\n    default: false,\n    stage: 'repository',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'abortIgnoreStatusCodes',\n    description:\n      'A list of HTTP status codes safe to ignore even when `abortOnError=true`.',\n    type: 'array',\n    subType: 'number',\n    stage: 'repository',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'enableHttp2',\n    description: 'Enable got HTTP/2 support.',\n    type: 'boolean',\n    default: false,\n    stage: 'repository',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'concurrentRequestLimit',\n    description: 'Limit concurrent requests per host.',\n    type: 'integer',\n    stage: 'repository',\n    parents: ['hostRules'],\n    default: null,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'maxRequestsPerSecond',\n    description: 'Limit requests rate per host.',\n    type: 'integer',\n    stage: 'repository',\n    parents: ['hostRules'],\n    default: 0,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'authType',\n    description:\n      'Authentication type for HTTP header. e.g. `\"Bearer\"` or `\"Basic\"`. Use `\"Token-Only\"` to use only the token without an authorization type.',\n    type: 'string',\n    stage: 'repository',\n    parents: ['hostRules'],\n    default: 'Bearer',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'dnsCache',\n    description: 'Enable got DNS cache.',\n    type: 'boolean',\n    default: false,\n    stage: 'repository',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n    experimental: true,\n    deprecationMsg:\n      'This option is deprecated and will be removed in a future release.',\n  },\n  {\n    name: 'keepAlive',\n    description: 'Enable HTTP keep-alive for hosts.',\n    type: 'boolean',\n    default: false,\n    stage: 'repository',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n    advancedUse: true,\n  },\n  {\n    name: 'headers',\n    description:\n      'Put fields to be forwarded to the HTTP request headers in the headers config option.',\n    type: 'object',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n    advancedUse: true,\n  },\n  {\n    name: 'artifactAuth',\n    description:\n      'A list of package managers to enable artifact auth. Only managers on the list are enabled. All are enabled if `null`.',\n    experimental: true,\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n    parents: ['hostRules'],\n    allowedValues: ['composer'],\n    default: null,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'httpsCertificateAuthority',\n    description: 'The overriding trusted CA certificate.',\n    type: 'string',\n    stage: 'repository',\n    parents: ['hostRules'],\n    default: null,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'httpsPrivateKey',\n    description: 'The private key in PEM format.',\n    type: 'string',\n    stage: 'repository',\n    parents: ['hostRules'],\n    default: null,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'httpsCertificate',\n    description: 'The certificate chains in PEM format.',\n    type: 'string',\n    stage: 'repository',\n    parents: ['hostRules'],\n    default: null,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'cacheHardTtlMinutes',\n    description:\n      'Maximum duration in minutes to keep datasource cache entries.',\n    type: 'integer',\n    stage: 'repository',\n    default: 7 * 24 * 60,\n    globalOnly: true,\n  },\n  {\n    name: 'cacheTtlOverride',\n    description: 'An object that contains cache namespace TTL override values.',\n    type: 'object',\n    stage: 'repository',\n    default: {},\n    globalOnly: true,\n    experimental: true,\n    advancedUse: true,\n  },\n  {\n    name: 'prBodyDefinitions',\n    description: 'Table column definitions to use in PR tables.',\n    type: 'object',\n    freeChoice: true,\n    mergeable: true,\n    default: {\n      Package: '{{{depNameLinked}}}',\n      Type: '{{{depType}}}',\n      Update: '{{{updateType}}}',\n      'Current value': '{{{currentValue}}}',\n      'New value': '{{{newValue}}}',\n      Change: '`{{{displayFrom}}}` -> `{{{displayTo}}}`',\n      Pending: '{{{displayPending}}}',\n      References: '{{{references}}}',\n      'Package file': '{{{packageFile}}}',\n      Age: \"{{#if newVersion}}[![age](https://developer.mend.io/api/mc/badges/age/{{datasource}}/{{replace '/' '%2f' packageName}}/{{{newVersion}}}?slim=true)](https://docs.renovatebot.com/merge-confidence/){{/if}}\",\n      Adoption:\n        \"{{#if newVersion}}[![adoption](https://developer.mend.io/api/mc/badges/adoption/{{datasource}}/{{replace '/' '%2f' packageName}}/{{{newVersion}}}?slim=true)](https://docs.renovatebot.com/merge-confidence/){{/if}}\",\n      Passing:\n        \"{{#if newVersion}}[![passing](https://developer.mend.io/api/mc/badges/compatibility/{{datasource}}/{{replace '/' '%2f' packageName}}/{{{currentVersion}}}/{{{newVersion}}}?slim=true)](https://docs.renovatebot.com/merge-confidence/){{/if}}\",\n      Confidence:\n        \"{{#if newVersion}}[![confidence](https://developer.mend.io/api/mc/badges/confidence/{{datasource}}/{{replace '/' '%2f' packageName}}/{{{currentVersion}}}/{{{newVersion}}}?slim=true)](https://docs.renovatebot.com/merge-confidence/){{/if}}\",\n    },\n  },\n  {\n    name: 'prBodyColumns',\n    description: 'List of columns to use in PR bodies.',\n    type: 'array',\n    subType: 'string',\n    default: ['Package', 'Type', 'Update', 'Change', 'Pending'],\n  },\n  {\n    name: 'prBodyNotes',\n    description:\n      'List of extra notes or templates to include in the Pull Request body.',\n    type: 'array',\n    subType: 'string',\n    default: [],\n    allowString: true,\n    mergeable: true,\n  },\n  {\n    name: 'suppressNotifications',\n    description:\n      'Options to suppress various types of warnings and other notifications.',\n    type: 'array',\n    subType: 'string',\n    default: [],\n    allowedValues: [\n      'artifactErrors',\n      'branchAutomergeFailure',\n      'configErrorIssue',\n      'dependencyLookupWarnings',\n      'lockFileErrors',\n      'missingCredentialsError',\n      'onboardingClose',\n      'prEditedNotification',\n      'prIgnoreNotification',\n    ],\n    cli: false,\n    env: false,\n    mergeable: true,\n  },\n  {\n    name: 'pruneStaleBranches',\n    description: 'Set to `false` to disable pruning stale branches.',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'unicodeEmoji',\n    description: 'Enable or disable Unicode emoji.',\n    type: 'boolean',\n    default: true,\n    globalOnly: true,\n  },\n  {\n    name: 'gitLabIgnoreApprovals',\n    description: `Ignore approval rules for MRs created by Renovate, which is useful for automerge.`,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'customManagers',\n    description: 'Custom managers using regex matching.',\n    type: 'array',\n    subType: 'object',\n    default: [],\n    stage: 'package',\n    cli: true,\n    mergeable: true,\n  },\n  {\n    name: 'customType',\n    description:\n      'Custom manager to use. Valid only within a `customManagers` object.',\n    type: 'string',\n    allowedValues: ['jsonata', 'regex'],\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'fileFormat',\n    description:\n      'It specifies the syntax of the package file being managed by the custom JSONata manager.',\n    type: 'string',\n    allowedValues: ['json', 'toml', 'yaml'],\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchStrings',\n    description: 'Queries to use. Valid only within a `customManagers` object.',\n    type: 'array',\n    subType: 'string',\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchStringsStrategy',\n    description: 'Strategy how to interpret matchStrings.',\n    type: 'string',\n    default: 'any',\n    allowedValues: ['any', 'recursive', 'combination'],\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'depNameTemplate',\n    description:\n      'Optional depName for extracted dependencies. Valid only within a `customManagers` object.',\n    type: 'string',\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'packageNameTemplate',\n    description:\n      'Optional packageName for extracted dependencies, else defaults to `depName` value. Valid only within a `customManagers` object.',\n    type: 'string',\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'datasourceTemplate',\n    description:\n      'Optional datasource for extracted dependencies. Valid only within a `customManagers` object.',\n    type: 'string',\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'depTypeTemplate',\n    description:\n      'Optional `depType` for extracted dependencies. Valid only within a `customManagers` object.',\n    type: 'string',\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'currentValueTemplate',\n    description:\n      'Optional `currentValue` for extracted dependencies. Valid only within a `customManagers` object.',\n    type: 'string',\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'versioningTemplate',\n    description:\n      'Optional versioning for extracted dependencies. Valid only within a `customManagers` object.',\n    type: 'string',\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'registryUrlTemplate',\n    description:\n      'Optional registry URL for extracted dependencies. Valid only within a `customManagers` object.',\n    type: 'string',\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'extractVersionTemplate',\n    description:\n      'Optional `extractVersion` for extracted dependencies. Valid only within a `customManagers` object.',\n    type: 'string',\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'autoReplaceStringTemplate',\n    description:\n      'Optional `extractVersion` for extracted dependencies. Valid only within a `customManagers` object.',\n    type: 'string',\n    parents: ['customManagers'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'fetchChangeLogs',\n    description: 'Controls if and when changelogs/release notes are fetched.',\n    type: 'string',\n    allowedValues: ['off', 'branch', 'pr'],\n    default: 'pr',\n    cli: false,\n  },\n  {\n    name: 'cloneSubmodules',\n    description:\n      'Set to `true` to initialize submodules during repository clone.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'cloneSubmodulesFilter',\n    description:\n      'List of submodules names or patterns to clone when cloneSubmodules=true.',\n    type: 'array',\n    subType: 'string',\n    default: ['*'],\n  },\n  {\n    name: 'ignorePrAuthor',\n    description:\n      'Set to `true` to fetch the entire list of PRs instead of only those authored by the Renovate user.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'gitNoVerify',\n    description:\n      'Which Git commands will be run with the `--no-verify` option.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    allowedValues: ['commit', 'push'],\n    default: ['commit', 'push'],\n    stage: 'global',\n    globalOnly: true,\n  },\n  {\n    name: 'updatePinnedDependencies',\n    description:\n      'Whether to update pinned (single version) dependencies or not.',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'gitUrl',\n    description:\n      'Overrides the default resolution for Git remote, e.g. to switch GitLab from HTTPS to SSH-based.',\n    type: 'string',\n    supportedPlatforms: ['gitea', 'gitlab', 'bitbucket-server'],\n    allowedValues: ['default', 'ssh', 'endpoint'],\n    default: 'default',\n    stage: 'repository',\n    globalOnly: true,\n  },\n  {\n    name: 'writeDiscoveredRepos',\n    description: 'Writes discovered repositories to a JSON file and then exit.',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'platformAutomerge',\n    description: `Controls if platform-native auto-merge is used.`,\n    type: 'boolean',\n    default: true,\n    supportedPlatforms: ['azure', 'gitea', 'github', 'gitlab'],\n  },\n  {\n    name: 'userStrings',\n    description:\n      'User-facing strings for the Renovate comment when a PR is closed.',\n    type: 'object',\n    freeChoice: true,\n    default: {\n      ignoreTopic: 'Renovate Ignore Notification',\n      ignoreMajor:\n        'Because you closed this PR without merging, Renovate will ignore this update. You will not get PRs for *any* future `{{{newMajor}}}.x` releases. But if you manually upgrade to `{{{newMajor}}}.x` then Renovate will re-enable `minor` and `patch` updates automatically.',\n      ignoreDigest:\n        'Because you closed this PR without merging, Renovate will ignore this update. You will not get PRs for the `{{{depName}}}` `{{{newDigestShort}}}` update again.',\n      ignoreOther:\n        'Because you closed this PR without merging, Renovate will ignore this update (`{{{newValue}}}`). You will get a PR once a newer version is released. To ignore this dependency forever, add it to the `ignoreDeps` array of your Renovate config.',\n    },\n  },\n  {\n    name: 'platformCommit',\n    description:\n      'Use platform API to perform commits instead of using Git directly.',\n    type: 'string',\n    default: 'auto',\n    allowedValues: ['auto', 'disabled', 'enabled'],\n    supportedPlatforms: ['github'],\n  },\n  {\n    name: 'branchNameStrict',\n    description: `Whether to be strict about the use of special characters within the branch name.`,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'checkedBranches',\n    description:\n      'A list of branch names to mark for creation or rebasing as if it was selected in the Dependency Dashboard issue.',\n    type: 'array',\n    subType: 'string',\n    experimental: true,\n    globalOnly: true,\n    default: [],\n  },\n  {\n    name: 'maxRetryAfter',\n    description:\n      'Maximum retry-after header value to wait for before retrying a failed request.',\n    type: 'integer',\n    default: 60,\n    stage: 'package',\n    parents: ['hostRules'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'logLevelRemap',\n    description: 'Remap log levels to different levels.',\n    type: 'array',\n    subType: 'object',\n    stage: 'repository',\n    cli: false,\n    env: false,\n    mergeable: true,\n  },\n  {\n    name: 'matchMessage',\n    description: 'Regex/minimatch expression to match against log message.',\n    type: 'string',\n    parents: ['logLevelRemap'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'newLogLevel',\n    description: 'New log level to use if matchMessage matches.',\n    type: 'string',\n    allowedValues: ['trace', 'debug', 'info', 'warn', 'error', 'fatal'],\n    parents: ['logLevelRemap'],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'milestone',\n    description: `The number of a milestone. If set, the milestone will be set when Renovate creates the PR.`,\n    type: 'integer',\n    default: null,\n    supportedPlatforms: ['github'],\n  },\n  {\n    name: 'httpCacheTtlDays',\n    description: 'Maximum duration in days to keep HTTP cache entries.',\n    type: 'integer',\n    stage: 'repository',\n    default: 90,\n    globalOnly: true,\n  },\n  {\n    name: 'dockerMaxPages',\n    description:\n      'By default, Renovate fetches up to 20 pages of Docker tags from registries. But you can set your own limit with this config option.',\n    type: 'integer',\n    default: 20,\n    globalOnly: true,\n  },\n  {\n    name: 'deleteConfigFile',\n    description:\n      'If set to `true`, Renovate tries to delete the self-hosted config file after reading it.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 's3Endpoint',\n    description:\n      'If set, Renovate will use this string as the `endpoint` when creating the AWS S3 client instance.',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 's3PathStyle',\n    description:\n      'If set, Renovate will enable `forcePathStyle` when creating the AWS S3 client instance.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'cachePrivatePackages',\n    description:\n      'Cache private packages in the datasource cache. This is useful for self-hosted setups',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n];\n\nexport function getOptions(): RenovateOptions[] {\n  return options;\n}\n\nfunction loadManagerOptions(): void {\n  const allManagers = new Map([...getManagers(), ...getCustomManagers()]);\n  for (const [name, config] of allManagers.entries()) {\n    if (config.defaultConfig) {\n      const managerConfig: RenovateOptions = {\n        name,\n        description: `Configuration object for the ${name} manager`,\n        stage: 'package',\n        type: 'object',\n        default: config.defaultConfig,\n        mergeable: true,\n        cli: false,\n        autogenerated: true,\n      };\n      options.push(managerConfig);\n    }\n  }\n}\n\nloadManagerOptions();\n"]}