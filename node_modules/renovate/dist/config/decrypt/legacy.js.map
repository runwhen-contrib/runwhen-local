{"version":3,"file":"legacy.js","sourceRoot":"","sources":["../../../lib/config/decrypt/legacy.ts"],"names":[],"mappings":";;AAGA,4DAmBC;AAED,gEAcC;;AAtCD,sEAAiC;AACjC,yCAAsC;AAEtC,SAAgB,wBAAwB,CACtC,UAAkB,EAClB,YAAoB;IAEpB,IAAI,YAAY,GAAkB,IAAI,CAAC;IACvC,IAAI,CAAC;QACH,YAAY,GAAG,qBAAM;aAClB,cAAc,CACb;YACE,GAAG,EAAE,UAAU;YACf,OAAO,EAAE,qBAAM,CAAC,SAAS,CAAC,iBAAiB;SAC5C,EACD,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CACpC;aACA,QAAQ,EAAE,CAAC;IAChB,CAAC;IAAC,MAAM,CAAC;QACP,eAAM,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;IACxD,CAAC;IACD,OAAO,YAAY,CAAC;AACtB,CAAC;AAED,SAAgB,0BAA0B,CACxC,UAAkB,EAClB,YAAoB;IAEpB,IAAI,YAAY,GAAkB,IAAI,CAAC;IACvC,IAAI,CAAC;QACH,YAAY,GAAG,qBAAM;aAClB,cAAc,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;aAC/D,QAAQ,EAAE,CAAC;QACd,eAAM,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;IACzD,CAAC;IAAC,MAAM,CAAC;QACP,eAAM,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;IAC1D,CAAC;IACD,OAAO,YAAY,CAAC;AACtB,CAAC","sourcesContent":["import crypto from 'node:crypto';\nimport { logger } from '../../logger';\n\nexport function tryDecryptPublicKeyPKCS1(\n  privateKey: string,\n  encryptedStr: string,\n): string | null {\n  let decryptedStr: string | null = null;\n  try {\n    decryptedStr = crypto\n      .privateDecrypt(\n        {\n          key: privateKey,\n          padding: crypto.constants.RSA_PKCS1_PADDING,\n        },\n        Buffer.from(encryptedStr, 'base64'),\n      )\n      .toString();\n  } catch {\n    logger.debug('Could not decrypt using PKCS1 padding');\n  }\n  return decryptedStr;\n}\n\nexport function tryDecryptPublicKeyDefault(\n  privateKey: string,\n  encryptedStr: string,\n): string | null {\n  let decryptedStr: string | null = null;\n  try {\n    decryptedStr = crypto\n      .privateDecrypt(privateKey, Buffer.from(encryptedStr, 'base64'))\n      .toString();\n    logger.debug('Decrypted config using default padding');\n  } catch {\n    logger.debug('Could not decrypt using default padding');\n  }\n  return decryptedStr;\n}\n"]}