{"version":3,"file":"abstract-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/base/abstract-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAIlC,MAAsB,iBAAiB;IAC5B,UAAU,GAAY,KAAK,CAAC;IAEpB,cAAc,CAAiB;IAC/B,cAAc,CAAiB;IAEhD,YAAY,cAA8B,EAAE,cAA8B;QACxE,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAIS,GAAG,CACX,GAAQ;QAER,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IAC9D,CAAC;IAES,GAAG,CAAmC,GAAQ;QACtD,OAAO,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC;IACpC,CAAC;IAES,SAAS,CACjB,GAAQ,EACR,KAA0B;QAE1B,IACE,YAAE,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YAC5C,YAAE,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,EAC5C,CAAC;YACD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACnC,CAAC;IACH,CAAC;IAES,OAAO,CACf,GAAQ,EACR,KAA0B;QAE1B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACnC,CAAC;IAES,OAAO,CAAC,KAAc;QAC9B,IAAI,CAAC,YAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAClC,MAAM,IAAI,KAAK,EAAE,CAAC;QACpB,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;IAES,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY;QAC3C,IAAI,CAAC,YAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;YACzB,MAAM,IAAI,KAAK,EAAE,CAAC;QACpB,CAAC;QAED,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;CACF;AAzDD,8CAyDC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { RenovateConfig } from '../../types';\nimport type { Migration } from '../types';\n\nexport abstract class AbstractMigration implements Migration {\n  readonly deprecated: boolean = false;\n  abstract readonly propertyName: string | RegExp;\n  private readonly originalConfig: RenovateConfig;\n  private readonly migratedConfig: RenovateConfig;\n\n  constructor(originalConfig: RenovateConfig, migratedConfig: RenovateConfig) {\n    this.originalConfig = originalConfig;\n    this.migratedConfig = migratedConfig;\n  }\n\n  abstract run(value: unknown, key: string): void;\n\n  protected get<Key extends keyof RenovateConfig>(\n    key: Key,\n  ): RenovateConfig[Key] {\n    return this.migratedConfig[key] ?? this.originalConfig[key];\n  }\n\n  protected has<Key extends keyof RenovateConfig>(key: Key): boolean {\n    return key in this.originalConfig;\n  }\n\n  protected setSafely<Key extends keyof RenovateConfig>(\n    key: Key,\n    value: RenovateConfig[Key],\n  ): void {\n    if (\n      is.nullOrUndefined(this.originalConfig[key]) &&\n      is.nullOrUndefined(this.migratedConfig[key])\n    ) {\n      this.migratedConfig[key] = value;\n    }\n  }\n\n  protected setHard<Key extends keyof RenovateConfig>(\n    key: Key,\n    value: RenovateConfig[Key],\n  ): void {\n    this.migratedConfig[key] = value;\n  }\n\n  protected rewrite(value: unknown): void {\n    if (!is.string(this.propertyName)) {\n      throw new Error();\n    }\n\n    this.setHard(this.propertyName, value);\n  }\n\n  protected delete(property = this.propertyName): void {\n    if (!is.string(property)) {\n      throw new Error();\n    }\n\n    delete this.migratedConfig[property];\n  }\n}\n"]}