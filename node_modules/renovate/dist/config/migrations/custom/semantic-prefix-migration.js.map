{"version":3,"file":"semantic-prefix-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/semantic-prefix-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,mEAA+D;AAE/D,MAAa,uBAAwB,SAAQ,sCAAiB;IAC1C,UAAU,GAAG,IAAI,CAAC;IAClB,YAAY,GAAG,gBAAgB,CAAC;IAEzC,GAAG,CAAC,KAAc;QACzB,IAAI,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;YACrB,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;CACF;AAZD,0DAYC","sourcesContent":["import is from '@sindresorhus/is';\nimport { AbstractMigration } from '../base/abstract-migration';\n\nexport class SemanticPrefixMigration extends AbstractMigration {\n  override readonly deprecated = true;\n  override readonly propertyName = 'semanticPrefix';\n\n  override run(value: unknown): void {\n    if (is.string(value)) {\n      const [text] = value.split(':');\n      const [type, scope] = text.split('(');\n      this.setSafely('semanticCommitType', type);\n      this.setSafely('semanticCommitScope', scope ? scope.split(')')[0] : null);\n    }\n  }\n}\n"]}