{"version":3,"file":"match-strings-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/match-strings-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,+CAA4C;AAC5C,mEAA+D;AAE/D,MAAa,qBAAsB,SAAQ,sCAAiB;IACxC,YAAY,GAAG,cAAc,CAAC;IAEvC,GAAG,CAAC,KAAc;QACzB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YACzB,MAAM,QAAQ,GAAG,KAAK;iBACnB,MAAM,CAAC,YAAE,CAAC,cAAc,CAAC;iBACzB,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE,CACnB,WAAW,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,mBAAmB,CAAC,EAAE,iBAAiB,CAAC,CACnE,CAAC;YAEJ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;CACF;AAdD,sDAcC","sourcesContent":["import is from '@sindresorhus/is';\nimport { regEx } from '../../../util/regex';\nimport { AbstractMigration } from '../base/abstract-migration';\n\nexport class MatchStringsMigration extends AbstractMigration {\n  override readonly propertyName = 'matchStrings';\n\n  override run(value: unknown): void {\n    if (Array.isArray(value)) {\n      const newValue = value\n        .filter(is.nonEmptyString)\n        .map((matchString) =>\n          matchString.replace(regEx(/\\(\\?<lookupName>/g), '(?<packageName>'),\n        );\n\n      this.rewrite(newValue);\n    }\n  }\n}\n"]}