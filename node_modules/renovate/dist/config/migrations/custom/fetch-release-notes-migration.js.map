{"version":3,"file":"fetch-release-notes-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/fetch-release-notes-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,iFAA4E;AAE5E,MAAa,0BAA2B,SAAQ,mDAAuB;IACrE,YAAY,cAA8B,EAAE,cAA8B;QACxE,KAAK,CACH,mBAAmB,EACnB,iBAAiB,EACjB,cAAc,EACd,cAAc,CACf,CAAC;IACJ,CAAC;IAEQ,GAAG,CAAC,KAAc;QACzB,IAAI,QAAQ,GAAY,KAAK,CAAC;QAE9B,IAAI,YAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YACtB,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAClC,CAAC;QAED,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtB,CAAC;CACF;AAnBD,gEAmBC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { RenovateConfig } from '../../types';\nimport { RenamePropertyMigration } from '../base/rename-property-migration';\n\nexport class FetchReleaseNotesMigration extends RenamePropertyMigration {\n  constructor(originalConfig: RenovateConfig, migratedConfig: RenovateConfig) {\n    super(\n      'fetchReleaseNotes',\n      'fetchChangeLogs',\n      originalConfig,\n      migratedConfig,\n    );\n  }\n\n  override run(value: unknown): void {\n    let newValue: unknown = value;\n\n    if (is.boolean(value)) {\n      newValue = value ? 'pr' : 'off';\n    }\n\n    super.run(newValue);\n  }\n}\n"]}