{"version":3,"file":"custom-managers-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/custom-managers-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,mEAA+D;AAE/D,MAAa,uBAAwB,SAAQ,sCAAiB;IAC1C,YAAY,GAAG,gBAAgB,CAAC;IAEzC,GAAG,CAAC,KAAc;QACzB,IAAI,YAAE,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;YAC5B,MAAM,cAAc,GAAI,KAAyB,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC5D,IAAI,GAAG,CAAC,UAAU,EAAE,CAAC;oBACnB,OAAO,GAAG,CAAC;gBACb,CAAC;gBACD,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,6EAA6E;YACnI,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;CACF;AAfD,0DAeC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { CustomManager } from '../../../modules/manager/custom/types';\nimport { AbstractMigration } from '../base/abstract-migration';\n\nexport class CustomManagersMigration extends AbstractMigration {\n  override readonly propertyName = 'customManagers';\n\n  override run(value: unknown): void {\n    if (is.nonEmptyArray(value)) {\n      const customManagers = (value as CustomManager[]).map((mgr) => {\n        if (mgr.customType) {\n          return mgr;\n        }\n        return Object.assign({ customType: 'regex' }, mgr); // to make sure customType is at top, looks good when migration PR is created\n      });\n\n      this.rewrite(customManagers);\n    }\n  }\n}\n"]}