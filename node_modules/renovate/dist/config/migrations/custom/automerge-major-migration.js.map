{"version":3,"file":"automerge-major-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/automerge-major-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,mEAA+D;AAE/D,MAAa,uBAAwB,SAAQ,sCAAiB;IAC1C,UAAU,GAAG,IAAI,CAAC;IAClB,YAAY,GAAG,gBAAgB,CAAC;IAEzC,GAAG,CAAC,KAAc;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAEhC,MAAM,QAAQ,GAAG,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/C,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAClC,CAAC;CACF;AAXD,0DAWC","sourcesContent":["import is from '@sindresorhus/is';\nimport { AbstractMigration } from '../base/abstract-migration';\n\nexport class AutomergeMajorMigration extends AbstractMigration {\n  override readonly deprecated = true;\n  override readonly propertyName = 'automergeMajor';\n\n  override run(value: unknown): void {\n    const major = this.get('major');\n\n    const newMajor = is.object(major) ? major : {};\n    newMajor.automerge = Boolean(value);\n    this.setHard('major', newMajor);\n  }\n}\n"]}