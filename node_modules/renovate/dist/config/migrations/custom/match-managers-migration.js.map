{"version":3,"file":"match-managers-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/match-managers-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,mEAA+D;AAE/D,MAAa,sBAAuB,SAAQ,sCAAiB;IACzC,YAAY,GAAG,eAAe,CAAC;IAExC,GAAG,CAAC,KAAc;QACzB,IAAI,CAAC,YAAE,CAAC,KAAK,CAAS,KAAK,EAAE,YAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxC,OAAO;QACT,CAAC;QAED,uDAAuD;QACvD,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAC/C,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACzB,CAAC;CACF;AAdD,wDAcC","sourcesContent":["import is from '@sindresorhus/is';\nimport { AbstractMigration } from '../base/abstract-migration';\n\nexport class MatchManagersMigration extends AbstractMigration {\n  override readonly propertyName = 'matchManagers';\n\n  override run(value: unknown): void {\n    if (!is.array<string>(value, is.string)) {\n      return;\n    }\n\n    // prefix custom. before custom managers if not present\n    const newValue = value.map((manager) =>\n      manager === 'regex' ? 'custom.regex' : manager,\n    );\n    this.rewrite(newValue);\n  }\n}\n"]}