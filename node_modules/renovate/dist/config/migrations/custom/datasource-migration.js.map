{"version":3,"file":"datasource-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/datasource-migration.ts"],"names":[],"mappings":";;;AAcA,8CAUC;;AAxBD,kEAAkC;AAClC,mEAA+D;AAE/D,MAAa,mBAAoB,SAAQ,sCAAiB;IACtC,YAAY,GAAG,YAAY,CAAC;IAErC,GAAG,CAAC,KAAc;QACzB,IAAI,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;YACrB,MAAM,QAAQ,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;CACF;AATD,kDASC;AAED,SAAgB,iBAAiB,CAAC,KAAa;IAC7C,QAAQ,KAAK,EAAE,CAAC;QACd,KAAK,eAAe;YAClB,OAAO,cAAc,CAAC;QACxB,KAAK,QAAQ;YACX,OAAO,gBAAgB,CAAC;QAC1B,KAAK,MAAM;YACT,OAAO,cAAc,CAAC;IAC1B,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport { AbstractMigration } from '../base/abstract-migration';\n\nexport class DatasourceMigration extends AbstractMigration {\n  override readonly propertyName = 'datasource';\n\n  override run(value: unknown): void {\n    if (is.string(value)) {\n      const newValue = migrateDatasource(value);\n      this.rewrite(newValue);\n    }\n  }\n}\n\nexport function migrateDatasource(value: string): string {\n  switch (value) {\n    case 'adoptium-java':\n      return 'java-version';\n    case 'dotnet':\n      return 'dotnet-version';\n    case 'node':\n      return 'node-version';\n  }\n  return value;\n}\n"]}