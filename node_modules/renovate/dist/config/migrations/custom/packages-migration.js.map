{"version":3,"file":"packages-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/packages-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,mEAA+D;AAE/D,MAAa,iBAAkB,SAAQ,sCAAiB;IACpC,UAAU,GAAG,IAAI,CAAC;IAClB,YAAY,GAAG,UAAU,CAAC;IAEnC,GAAG,CAAC,KAAc;QACzB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE9C,IAAI,eAAe,GAAG,YAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;QACjE,IAAI,YAAE,CAAC,KAAK,CAAc,KAAK,CAAC,EAAE,CAAC;YACjC,eAAe,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;IAChD,CAAC;CACF;AAbD,8CAaC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { PackageRule } from '../../types';\nimport { AbstractMigration } from '../base/abstract-migration';\n\nexport class PackagesMigration extends AbstractMigration {\n  override readonly deprecated = true;\n  override readonly propertyName = 'packages';\n\n  override run(value: unknown): void {\n    const packageRules = this.get('packageRules');\n\n    let newPackageRules = is.array(packageRules) ? packageRules : [];\n    if (is.array<PackageRule>(value)) {\n      newPackageRules = newPackageRules.concat(value);\n    }\n    this.setHard('packageRules', newPackageRules);\n  }\n}\n"]}