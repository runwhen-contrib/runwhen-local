{"version":3,"file":"types.js","sourceRoot":"","sources":["../../lib/instrumentation/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { Attributes, SpanKind } from '@opentelemetry/api';\nimport type { BunyanRecord } from '../logger/types';\nimport type { PackageFile } from '../modules/manager/types';\nimport type { BranchCache } from '../util/cache/repository/types';\n\n/**\n * The instrumentation decorator parameters.\n */\nexport interface SpanParameters {\n  /**\n   * The name of the span\n   */\n  name: string;\n\n  /**\n   * Attributes which should be added to the span\n   */\n  attributes?: Attributes | undefined;\n\n  /**\n   * Should this span be added to the root span or to the current active span\n   */\n  ignoreParentSpan?: boolean;\n\n  /**\n   * Type of span this represents. Default: SpanKind.Internal\n   */\n  kind?: SpanKind;\n}\n\nexport interface Report {\n  problems: BunyanRecord[];\n  repositories: Record<string, RepoReport>;\n}\n\ninterface RepoReport {\n  problems: BunyanRecord[];\n  branches: Partial<BranchCache>[];\n  packageFiles: Record<string, PackageFile[]>;\n  libYears?: LibYears;\n}\n\nexport interface LibYears {\n  outdatedDepsCount: number;\n  totalDepsCount: number;\n  totalLibYears: number;\n  managerLibYears: Record<string, number>;\n}\n"]}