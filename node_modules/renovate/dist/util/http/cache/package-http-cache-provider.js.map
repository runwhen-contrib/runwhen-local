{"version":3,"file":"package-http-cache-provider.js","sourceRoot":"","sources":["../../../../lib/util/http/cache/package-http-cache-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { DateTime } from 'luxon';\nimport { GlobalConfig } from '../../../config/global';\nimport { get, set } from '../../cache/package'; // Import the package cache functions\nimport { resolveTtlValues } from '../../cache/package/ttl';\nimport type { PackageCacheNamespace } from '../../cache/package/types';\nimport { regEx } from '../../regex';\nimport { HttpCacheStats } from '../../stats';\nimport type { HttpResponse } from '../types';\nimport { AbstractHttpCacheProvider } from './abstract-http-cache-provider';\nimport type { HttpCache } from './schema';\n\nexport interface PackageHttpCacheProviderOptions {\n  namespace: PackageCacheNamespace;\n  ttlMinutes?: number;\n  checkCacheControlHeader?: boolean;\n  checkAuthorizationHeader?: boolean;\n}\n\nexport class PackageHttpCacheProvider extends AbstractHttpCacheProvider {\n  private namespace: PackageCacheNamespace;\n\n  private softTtlMinutes: number;\n  private hardTtlMinutes: number;\n\n  checkCacheControlHeader: boolean;\n  checkAuthorizationHeader: boolean;\n\n  constructor({\n    namespace,\n    ttlMinutes = 15,\n    checkCacheControlHeader = true,\n    checkAuthorizationHeader = true,\n  }: PackageHttpCacheProviderOptions) {\n    super();\n    this.namespace = namespace;\n    const { softTtlMinutes, hardTtlMinutes } = resolveTtlValues(\n      this.namespace,\n      ttlMinutes,\n    );\n    this.softTtlMinutes = softTtlMinutes;\n    this.hardTtlMinutes = hardTtlMinutes;\n    this.checkCacheControlHeader = checkCacheControlHeader;\n    this.checkAuthorizationHeader = checkAuthorizationHeader;\n  }\n\n  async load(url: string): Promise<unknown> {\n    return await get(this.namespace, url);\n  }\n\n  async persist(url: string, data: HttpCache): Promise<void> {\n    await set(this.namespace, url, data, this.hardTtlMinutes);\n  }\n\n  override async bypassServer<T>(\n    url: string,\n    ignoreSoftTtl = false,\n  ): Promise<HttpResponse<T> | null> {\n    const cached = await this.get(url);\n    if (!cached) {\n      return null;\n    }\n\n    if (ignoreSoftTtl) {\n      return cached.httpResponse as HttpResponse<T>;\n    }\n\n    const cachedAt = DateTime.fromISO(cached.timestamp);\n    const deadline = cachedAt.plus({ minutes: this.softTtlMinutes });\n    const now = DateTime.now();\n    if (now >= deadline) {\n      HttpCacheStats.incLocalMisses(url);\n      return null;\n    }\n\n    HttpCacheStats.incLocalHits(url);\n    return cached.httpResponse as HttpResponse<T>;\n  }\n\n  cacheAllowed<T>(resp: HttpResponse<T>): boolean {\n    const allowedViaGlobalConfig = GlobalConfig.get(\n      'cachePrivatePackages',\n      false,\n    );\n    if (allowedViaGlobalConfig) {\n      return true;\n    }\n\n    if (\n      this.checkCacheControlHeader &&\n      is.string(resp.headers['cache-control'])\n    ) {\n      const isPublic = resp.headers['cache-control']\n        .toLocaleLowerCase()\n        .split(regEx(/\\s*,\\s*/))\n        .includes('public');\n\n      if (!isPublic) {\n        return false;\n      }\n    }\n\n    if (this.checkAuthorizationHeader && resp.authorization) {\n      return false;\n    }\n\n    return true;\n  }\n\n  override async wrapServerResponse<T>(\n    url: string,\n    resp: HttpResponse<T>,\n  ): Promise<HttpResponse<T>> {\n    if (resp.statusCode === 200 && !this.cacheAllowed(resp)) {\n      return resp;\n    }\n\n    return await super.wrapServerResponse(url, resp);\n  }\n}\n"]}