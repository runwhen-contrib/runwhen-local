{"version":3,"file":"memory-http-cache-provider.js","sourceRoot":"","sources":["../../../../lib/util/http/cache/memory-http-cache-provider.ts"],"names":[],"mappings":";;;;AAAA,qEAA+C;AAE/C,iFAA2E;AAG3E,MAAa,uBAAwB,SAAQ,wDAAyB;IAC5D,QAAQ,CAAC,GAAW;QAC1B,OAAO,8BAA8B,GAAG,EAAE,CAAC;IAC7C,CAAC;IAEkB,IAAI,CAAC,GAAW;QACjC,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAY,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QACzD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEkB,OAAO,CAAC,GAAW,EAAE,IAAe;QACrD,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;QACvC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAEQ,KAAK,CAAC,YAAY,CAAI,GAAW;QACxC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,MAAM,CAAC,YAA+B,CAAC;IAChD,CAAC;CACF;AAvBD,0DAuBC;AAEY,QAAA,gBAAgB,GAAG,IAAI,uBAAuB,EAAE,CAAC","sourcesContent":["import * as memCache from '../../cache/memory';\nimport type { HttpResponse } from '../types';\nimport { AbstractHttpCacheProvider } from './abstract-http-cache-provider';\nimport type { HttpCache } from './schema';\n\nexport class MemoryHttpCacheProvider extends AbstractHttpCacheProvider {\n  private cacheKey(url: string): string {\n    return `memory-cache-http-provider:${url}`;\n  }\n\n  protected override load(url: string): Promise<unknown> {\n    const data = memCache.get<HttpCache>(this.cacheKey(url));\n    return Promise.resolve(data);\n  }\n\n  protected override persist(url: string, data: HttpCache): Promise<void> {\n    memCache.set(this.cacheKey(url), data);\n    return Promise.resolve();\n  }\n\n  override async bypassServer<T>(url: string): Promise<HttpResponse<T> | null> {\n    const cached = await this.get(url);\n    if (!cached) {\n      return null;\n    }\n\n    return cached.httpResponse as HttpResponse<T>;\n  }\n}\n\nexport const memCacheProvider = new MemoryHttpCacheProvider();\n"]}