{"version":3,"file":"github.js","sourceRoot":"","sources":["../../../lib/util/http/github.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { DateTime } from 'luxon';\nimport {\n  PLATFORM_BAD_CREDENTIALS,\n  PLATFORM_INTEGRATION_UNAUTHORIZED,\n  PLATFORM_RATE_LIMIT_EXCEEDED,\n  REPOSITORY_CHANGED,\n} from '../../constants/error-messages';\nimport { logger } from '../../logger';\nimport { ExternalHostError } from '../../types/errors/external-host-error';\nimport { getCache } from '../cache/repository';\nimport { maskToken } from '../mask';\nimport * as p from '../promises';\nimport { range } from '../range';\nimport { regEx } from '../regex';\nimport { joinUrlParts, parseLinkHeader } from '../url';\nimport { findMatchingRule } from './host-rules';\nimport {\n  HttpBase,\n  type InternalHttpOptions,\n  type InternalJsonUnsafeOptions,\n} from './http';\nimport type { GotLegacyError } from './legacy';\nimport type {\n  GraphqlOptions,\n  HttpMethod,\n  HttpOptions,\n  HttpResponse,\n} from './types';\n\nconst githubBaseUrl = 'https://api.github.com/';\nlet baseUrl = githubBaseUrl;\nexport const setBaseUrl = (url: string): void => {\n  baseUrl = url;\n};\n\nexport interface GithubBaseHttpOptions extends HttpOptions {\n  repository?: string;\n}\n\nexport interface GithubHttpOptions extends GithubBaseHttpOptions {\n  paginate?: boolean | string;\n  paginationField?: string;\n  pageLimit?: number;\n}\n\ninterface GithubGraphqlRepoData<T = unknown> {\n  repository?: T;\n}\n\nexport type GithubGraphqlResponse<T = unknown> =\n  | {\n      data: T;\n      errors?: never;\n    }\n  | {\n      data?: never;\n      errors: {\n        type?: string;\n        message: string;\n      }[];\n    };\n\nfunction handleGotError(\n  err: GotLegacyError,\n  url: string | URL,\n  opts: GithubBaseHttpOptions,\n): Error {\n  const path = url.toString();\n  let message = err.message || '';\n  const body = err.response?.body;\n  if (is.plainObject(body) && 'message' in body) {\n    message = String(body.message);\n  }\n  if (\n    err.code === 'ERR_HTTP2_STREAM_ERROR' ||\n    err.code === 'ENOTFOUND' ||\n    err.code === 'ETIMEDOUT' ||\n    err.code === 'EAI_AGAIN' ||\n    err.code === 'ECONNRESET'\n  ) {\n    logger.debug({ err }, 'GitHub failure: RequestError');\n    return new ExternalHostError(err, 'github');\n  }\n  if (err.name === 'ParseError') {\n    logger.debug({ err }, '');\n    return new ExternalHostError(err, 'github');\n  }\n  if (err.statusCode && err.statusCode >= 500 && err.statusCode < 600) {\n    logger.debug({ err }, 'GitHub failure: 5xx');\n    return new ExternalHostError(err, 'github');\n  }\n  if (\n    err.statusCode === 403 &&\n    message.startsWith('You have triggered an abuse detection mechanism')\n  ) {\n    logger.debug({ err }, 'GitHub failure: abuse detection');\n    return new Error(PLATFORM_RATE_LIMIT_EXCEEDED);\n  }\n  if (\n    err.statusCode === 403 &&\n    message.startsWith('You have exceeded a secondary rate limit')\n  ) {\n    logger.warn({ err }, 'GitHub failure: secondary rate limit');\n    return new Error(PLATFORM_RATE_LIMIT_EXCEEDED);\n  }\n  if (err.statusCode === 403 && message.includes('Upgrade to GitHub Pro')) {\n    logger.debug(`Endpoint: ${path}, needs paid GitHub plan`);\n    return err;\n  }\n  if (err.statusCode === 403 && message.includes('rate limit exceeded')) {\n    logger.debug({ err }, 'GitHub failure: rate limit');\n    return new Error(PLATFORM_RATE_LIMIT_EXCEEDED);\n  }\n  if (\n    err.statusCode === 403 &&\n    message.startsWith('Resource not accessible by integration')\n  ) {\n    logger.debug(\n      { err },\n      'GitHub failure: Resource not accessible by integration',\n    );\n    return new Error(PLATFORM_INTEGRATION_UNAUTHORIZED);\n  }\n  if (err.statusCode === 401 && message.includes('Bad credentials')) {\n    const rateLimit = err.headers?.['x-ratelimit-limit'] ?? -1;\n    logger.debug(\n      {\n        token: maskToken(opts.token),\n        err,\n      },\n      'GitHub failure: Bad credentials',\n    );\n    if (rateLimit === '60') {\n      return new ExternalHostError(err, 'github');\n    }\n    return new Error(PLATFORM_BAD_CREDENTIALS);\n  }\n  if (err.statusCode === 422) {\n    if (\n      message.includes('Review cannot be requested from pull request author')\n    ) {\n      return err;\n    } else if (err.body?.errors?.find((e: any) => e.field === 'milestone')) {\n      return err;\n    } else if (err.body?.errors?.find((e: any) => e.code === 'invalid')) {\n      logger.debug({ err }, 'Received invalid response - aborting');\n      return new Error(REPOSITORY_CHANGED);\n    } else if (\n      err.body?.errors?.find((e: any) =>\n        e.message?.startsWith('A pull request already exists'),\n      )\n    ) {\n      return err;\n    }\n    logger.debug({ err }, '422 Error thrown from GitHub');\n    return new ExternalHostError(err, 'github');\n  }\n  if (\n    err.statusCode === 410 &&\n    err.body?.message === 'Issues are disabled for this repo'\n  ) {\n    return err;\n  }\n  return err;\n}\n\ninterface GraphqlPaginatedContent<T = unknown> {\n  nodes: T[];\n  edges: T[];\n  pageInfo: { hasNextPage: boolean; endCursor: string };\n}\n\nfunction constructAcceptString(input?: any): string {\n  const defaultAccept = 'application/vnd.github.v3+json';\n  const acceptStrings =\n    typeof input === 'string' ? input.split(regEx(/\\s*,\\s*/)) : [];\n\n  // TODO: regression of #6736\n  if (\n    !acceptStrings.some((x) => x === defaultAccept) &&\n    (!acceptStrings.some((x) => x.startsWith('application/vnd.github.')) ||\n      acceptStrings.length < 2)\n  ) {\n    acceptStrings.push(defaultAccept);\n  }\n  return acceptStrings.join(', ');\n}\n\nconst MAX_GRAPHQL_PAGE_SIZE = 100;\n\ninterface GraphqlPageCacheItem {\n  pageLastResizedAt: string;\n  pageSize: number;\n}\n\nexport type GraphqlPageCache = Record<string, GraphqlPageCacheItem>;\n\nfunction getGraphqlPageSize(\n  fieldName: string,\n  defaultPageSize = MAX_GRAPHQL_PAGE_SIZE,\n): number {\n  const cache = getCache();\n  const graphqlPageCache = cache?.platform?.github\n    ?.graphqlPageCache as GraphqlPageCache;\n  const cachedRecord = graphqlPageCache?.[fieldName];\n\n  if (graphqlPageCache && cachedRecord) {\n    logger.debug(\n      { fieldName, ...cachedRecord },\n      'GraphQL page size: found cached value',\n    );\n\n    const oldPageSize = cachedRecord.pageSize;\n\n    const now = DateTime.local();\n    const then = DateTime.fromISO(cachedRecord.pageLastResizedAt);\n    const expiry = then.plus({ hours: 24 });\n    if (now > expiry) {\n      const newPageSize = Math.min(oldPageSize * 2, MAX_GRAPHQL_PAGE_SIZE);\n      if (newPageSize < MAX_GRAPHQL_PAGE_SIZE) {\n        const timestamp = now.toISO();\n\n        logger.debug(\n          { fieldName, oldPageSize, newPageSize, timestamp },\n          'GraphQL page size: expanding',\n        );\n\n        cachedRecord.pageLastResizedAt = timestamp;\n        cachedRecord.pageSize = newPageSize;\n      } else {\n        logger.debug(\n          { fieldName, oldPageSize, newPageSize },\n          'GraphQL page size: expanded to default page size',\n        );\n\n        delete graphqlPageCache[fieldName];\n      }\n\n      return newPageSize;\n    }\n\n    return oldPageSize;\n  }\n\n  return defaultPageSize;\n}\n\nfunction setGraphqlPageSize(fieldName: string, newPageSize: number): void {\n  const oldPageSize = getGraphqlPageSize(fieldName);\n  if (newPageSize !== oldPageSize) {\n    const now = DateTime.local();\n    const pageLastResizedAt = now.toISO();\n    logger.debug(\n      { fieldName, oldPageSize, newPageSize, timestamp: pageLastResizedAt },\n      'GraphQL page size: shrinking',\n    );\n    const cache = getCache();\n    cache.platform ??= {};\n    cache.platform.github ??= {};\n    cache.platform.github.graphqlPageCache ??= {};\n    const graphqlPageCache = cache.platform.github\n      .graphqlPageCache as GraphqlPageCache;\n    graphqlPageCache[fieldName] = {\n      pageLastResizedAt,\n      pageSize: newPageSize,\n    };\n  }\n}\n\nfunction replaceUrlBase(url: URL, baseUrl: string): URL {\n  const relativeUrl = `${url.pathname}${url.search}`;\n  return new URL(relativeUrl, baseUrl);\n}\n\nexport class GithubHttp extends HttpBase<GithubHttpOptions> {\n  protected override get baseUrl(): string | undefined {\n    return baseUrl;\n  }\n\n  constructor(hostType = 'github', options?: HttpOptions) {\n    super(hostType, options);\n  }\n\n  protected override processOptions(\n    url: URL,\n    opts: InternalHttpOptions & GithubBaseHttpOptions,\n  ): void {\n    if (!opts.token) {\n      const authUrl = new URL(url);\n\n      if (opts.repository) {\n        // set authUrl to https://api.github.com/repos/org/repo or https://gihub.domain.com/api/v3/repos/org/repo\n        authUrl.hash = '';\n        authUrl.search = '';\n        authUrl.pathname = joinUrlParts(\n          authUrl.pathname.startsWith('/api/v3') ? '/api/v3' : '',\n          'repos',\n          `${opts.repository}`,\n        );\n      }\n\n      let readOnly = opts.readOnly;\n      const { method = 'get' } = opts;\n      if (\n        readOnly === undefined &&\n        ['get', 'head'].includes(method.toLowerCase())\n      ) {\n        readOnly = true;\n      }\n      const { token } = findMatchingRule(authUrl.toString(), {\n        hostType: this.hostType,\n        readOnly,\n      });\n      opts.token = token;\n    }\n\n    const accept = constructAcceptString(opts.headers?.accept);\n\n    opts.headers = {\n      ...opts.headers,\n      accept,\n    };\n  }\n\n  protected override handleError(\n    url: string | URL,\n    opts: HttpOptions,\n    err: GotLegacyError,\n  ): never {\n    throw handleGotError(err, url, opts);\n  }\n\n  protected override async requestJsonUnsafe<T>(\n    method: HttpMethod,\n    options: InternalJsonUnsafeOptions<GithubHttpOptions>,\n  ): Promise<HttpResponse<T>> {\n    const httpOptions = options.httpOptions ?? {};\n    const resolvedUrl = this.resolveUrl(options.url, httpOptions);\n    const opts = {\n      ...options,\n      url: resolvedUrl,\n    };\n\n    const result = await super.requestJsonUnsafe<T>(method, opts);\n    if (httpOptions.paginate) {\n      delete httpOptions.cacheProvider;\n      httpOptions.memCache = false;\n      // Check if result is paginated\n      const pageLimit = httpOptions.pageLimit ?? 10;\n      const linkHeader = parseLinkHeader(result?.headers?.link);\n      const next = linkHeader?.next;\n      if (next?.url && linkHeader?.last?.page) {\n        let lastPage = parseInt(linkHeader.last.page, 10);\n        if (\n          !process.env.RENOVATE_PAGINATE_ALL &&\n          httpOptions.paginate !== 'all'\n        ) {\n          lastPage = Math.min(pageLimit, lastPage);\n        }\n        const baseUrl = httpOptions.baseUrl ?? this.baseUrl;\n        const parsedUrl = new URL(next.url, baseUrl);\n        const rebasePagination =\n          !!baseUrl &&\n          !!process.env.RENOVATE_X_REBASE_PAGINATION_LINKS &&\n          // Preserve github.com URLs for use cases like release notes\n          parsedUrl.origin !== 'https://api.github.com';\n        const firstPageUrl = rebasePagination\n          ? replaceUrlBase(parsedUrl, baseUrl)\n          : parsedUrl;\n        const queue = [...range(2, lastPage)].map(\n          (pageNumber) => (): Promise<HttpResponse<T>> => {\n            // copy before modifying searchParams\n            const nextUrl = new URL(firstPageUrl);\n            nextUrl.searchParams.set('page', String(pageNumber));\n            return super.requestJsonUnsafe<T>(method, {\n              ...opts,\n              url: nextUrl,\n            });\n          },\n        );\n        const pages = await p.all(queue);\n        if (httpOptions.paginationField && is.plainObject(result.body)) {\n          const paginatedResult = result.body[httpOptions.paginationField];\n          if (is.array<T>(paginatedResult)) {\n            for (const nextPage of pages) {\n              if (is.plainObject(nextPage.body)) {\n                const nextPageResults =\n                  nextPage.body[httpOptions.paginationField];\n                if (is.array<T>(nextPageResults)) {\n                  paginatedResult.push(...nextPageResults);\n                }\n              }\n            }\n          }\n        } else if (is.array<T>(result.body)) {\n          for (const nextPage of pages) {\n            if (is.array<T>(nextPage.body)) {\n              result.body.push(...nextPage.body);\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  public async requestGraphql<T = unknown>(\n    query: string,\n    options: GraphqlOptions = {},\n  ): Promise<GithubGraphqlResponse<T> | null> {\n    const path = 'graphql';\n\n    const { paginate, count = MAX_GRAPHQL_PAGE_SIZE, cursor = null } = options;\n    let { variables } = options;\n    if (paginate) {\n      variables = {\n        ...variables,\n        count,\n        cursor,\n      };\n    }\n    const body = variables ? { query, variables } : { query };\n\n    const opts: GithubBaseHttpOptions = {\n      baseUrl: baseUrl.replace('/v3/', '/'), // GHE uses unversioned graphql path\n      body,\n      headers: { accept: options?.acceptHeader },\n      readOnly: options.readOnly,\n    };\n    if (options.token) {\n      opts.token = options.token;\n    }\n    logger.trace(`Performing Github GraphQL request`);\n\n    try {\n      const res = await this.postJson<GithubGraphqlResponse<T>>(path, opts);\n      return res?.body;\n    } catch (err) {\n      logger.debug({ err, query, options }, 'Unexpected GraphQL Error');\n      if (err instanceof ExternalHostError && count && count > 10) {\n        logger.info('Reducing pagination count to workaround graphql errors');\n        return null;\n      }\n      throw handleGotError(err, path, opts);\n    }\n  }\n\n  async queryRepoField<T = Record<string, unknown>>(\n    query: string,\n    fieldName: string,\n    options: GraphqlOptions = {},\n  ): Promise<T[]> {\n    const result: T[] = [];\n\n    const { paginate = true } = options;\n\n    let optimalCount: null | number = null;\n    let count = getGraphqlPageSize(\n      fieldName,\n      options.count ?? MAX_GRAPHQL_PAGE_SIZE,\n    );\n    let limit = options.limit ?? 1000;\n    let cursor: string | null = null;\n\n    let isIterating = true;\n    while (isIterating) {\n      const res = await this.requestGraphql<GithubGraphqlRepoData<T>>(query, {\n        ...options,\n        count: Math.min(count, limit),\n        cursor,\n        paginate,\n      });\n      const repositoryData = res?.data?.repository;\n      if (\n        is.nonEmptyObject(repositoryData) &&\n        !is.nullOrUndefined(repositoryData[fieldName])\n      ) {\n        optimalCount = count;\n\n        const {\n          nodes = [],\n          edges = [],\n          pageInfo,\n        } = repositoryData[fieldName] as GraphqlPaginatedContent<T>;\n        result.push(...nodes);\n        result.push(...edges);\n\n        limit = Math.max(0, limit - nodes.length - edges.length);\n\n        if (limit === 0) {\n          isIterating = false;\n        } else if (paginate && pageInfo) {\n          const { hasNextPage, endCursor } = pageInfo;\n          if (hasNextPage && endCursor) {\n            cursor = endCursor;\n          } else {\n            isIterating = false;\n          }\n        }\n      } else {\n        count = Math.floor(count / 2);\n        if (count === 0) {\n          logger.warn({ query, options, res }, 'Error fetching GraphQL nodes');\n          isIterating = false;\n        }\n      }\n\n      if (!paginate) {\n        isIterating = false;\n      }\n    }\n\n    if (optimalCount && optimalCount < MAX_GRAPHQL_PAGE_SIZE) {\n      setGraphqlPageSize(fieldName, optimalCount);\n    }\n\n    return result;\n  }\n\n  /**\n   * Get the raw text file from a URL.\n   * Only use this method to fetch text files.\n   *\n   * @param url Full API URL, contents path or path inside the repository to the file\n   * @param options\n   *\n   * @example url = 'https://api.github.com/repos/renovatebot/renovate/contents/package.json'\n   * @example url = 'renovatebot/renovate/contents/package.json'\n   * @example url = 'package.json' & options.repository = 'renovatebot/renovate'\n   */\n  public async getRawTextFile(\n    url: string,\n    options: InternalHttpOptions & GithubBaseHttpOptions = {},\n  ): Promise<HttpResponse> {\n    const newOptions: InternalHttpOptions & GithubBaseHttpOptions = {\n      ...options,\n      headers: {\n        accept: 'application/vnd.github.raw+json',\n      },\n    };\n\n    let newURL = url;\n    const httpRegex = regEx(/^https?:\\/\\//);\n    if (options.repository && !httpRegex.test(options.repository)) {\n      newURL = joinUrlParts(options.repository, 'contents', url);\n    }\n\n    return await this.getText(newURL, newOptions);\n  }\n}\n"]}