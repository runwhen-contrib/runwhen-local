{"version":3,"file":"legacy.js","sourceRoot":"","sources":["../../../lib/util/http/legacy.ts"],"names":[],"mappings":";;AAAA,6BAAgD;AAChD,gCAAkC;AAElC,+CAA+C;AAE/C,MAAM,CAAC,cAAc,CAAC,kBAAS,CAAC,SAAS,EAAE,YAAY,EAAE;IACvD,GAAG,EAAE,SAAS,UAAU;QACtB,OAAO,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC;IACnC,CAAC;IACD,YAAY,EAAE,IAAI,EAAE,0BAA0B;CAC/C,CAAC,CAAC;AAEH,MAAM,CAAC,cAAc,CAAC,kBAAS,CAAC,SAAS,EAAE,MAAM,EAAE;IACjD,GAAG,EAAE,SAAS,IAAI;QAChB,OAAO,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;IAC7B,CAAC;IACD,GAAG,EAAE,SAAS,IAAI,CAAkB,KAAc;QAChD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC;QAC7B,CAAC;IACH,CAAC;IACD,YAAY,EAAE,IAAI;CACnB,CAAC,CAAC;AAEH,MAAM,CAAC,cAAc,CAAC,kBAAS,CAAC,SAAS,EAAE,SAAS,EAAE;IACpD,GAAG,EAAE,SAAS,OAAO;QACnB,OAAO,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;IAChC,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,cAAc,CAAC,kBAAS,CAAC,SAAS,EAAE,KAAK,EAAE;IAChD,GAAG,EAAE,SAAS,GAAG;QACf,OAAO,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC5B,CAAC;IACD,YAAY,EAAE,IAAI;CACnB,CAAC,CAAC;AAEH,MAAM,CAAC,cAAc,CAAC,kBAAS,CAAC,SAAS,EAAE,MAAM,EAAE;IACjD,GAAG,EAAE,SAAS,GAAG;QACf,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,IAAA,cAAQ,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7C,OAAO,GAAG,EAAE,IAAI,CAAC;IACnB,CAAC;IACD,YAAY,EAAE,IAAI;CACnB,CAAC,CAAC","sourcesContent":["import { RequestError as HttpError } from 'got';\nimport { parseUrl } from '../url';\n\n// TODO: remove when code is refactored (#9651)\n\nObject.defineProperty(HttpError.prototype, 'statusCode', {\n  get: function statusCode(this: HttpError) {\n    return this.response?.statusCode;\n  },\n  configurable: true, // required by azure tests\n});\n\nObject.defineProperty(HttpError.prototype, 'body', {\n  get: function body(this: HttpError): unknown {\n    return this.response?.body;\n  },\n  set: function body(this: HttpError, value: unknown): void {\n    if (this.response) {\n      this.response.body = value;\n    }\n  },\n  configurable: true,\n});\n\nObject.defineProperty(HttpError.prototype, 'headers', {\n  get: function headers(this: HttpError) {\n    return this.response?.headers;\n  },\n});\n\nObject.defineProperty(HttpError.prototype, 'url', {\n  get: function url(this: HttpError) {\n    return this.response?.url;\n  },\n  configurable: true,\n});\n\nObject.defineProperty(HttpError.prototype, 'host', {\n  get: function url(this: HttpError) {\n    const urlStr = this.response?.url;\n    const url = urlStr ? parseUrl(urlStr) : null;\n    return url?.host;\n  },\n  configurable: true,\n});\n\nexport type GotLegacyError<E = unknown, T = unknown> = HttpError & {\n  statusCode?: number;\n  body: {\n    message?: string;\n    errors?: E[];\n  };\n  headers?: Record<string, T>;\n};\n"]}