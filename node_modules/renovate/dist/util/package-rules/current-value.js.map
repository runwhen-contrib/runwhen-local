{"version":3,"file":"current-value.js","sourceRoot":"","sources":["../../../lib/util/package-rules/current-value.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,kDAA0D;AAC1D,iCAAiC;AAEjC,MAAa,mBAAoB,SAAQ,cAAO;IACrC,OAAO,CACd,EAAE,YAAY,EAA0B,EACxC,EAAE,iBAAiB,EAAe;QAElC,IAAI,YAAE,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,CAAC;YACpC,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,qBAAqB,GAAG,IAAA,sCAAuB,EAAC,iBAAiB,CAAC,CAAC;QAEzE,IAAI,CAAC,YAAY,EAAE,CAAC;YAClB,OAAO,KAAK,CAAC;QACf,CAAC;QAED,OAAO,qBAAqB,CAAC,YAAY,CAAC,CAAC;IAC7C,CAAC;CACF;AAhBD,kDAgBC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { PackageRule, PackageRuleInputConfig } from '../../config/types';\nimport { getRegexOrGlobPredicate } from '../string-match';\nimport { Matcher } from './base';\n\nexport class CurrentValueMatcher extends Matcher {\n  override matches(\n    { currentValue }: PackageRuleInputConfig,\n    { matchCurrentValue }: PackageRule,\n  ): boolean | null {\n    if (is.undefined(matchCurrentValue)) {\n      return null;\n    }\n    const matchCurrentValuePred = getRegexOrGlobPredicate(matchCurrentValue);\n\n    if (!currentValue) {\n      return false;\n    }\n\n    return matchCurrentValuePred(currentValue);\n  }\n}\n"]}