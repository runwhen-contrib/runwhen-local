{"version":3,"file":"matchers.js","sourceRoot":"","sources":["../../../lib/util/package-rules/matchers.ts"],"names":[],"mappings":";;AAAA,mDAAsD;AACtD,6CAAiD;AACjD,+CAAkD;AAClD,mDAAsD;AACtD,uDAA0D;AAC1D,+CAAmD;AACnD,2CAA6C;AAC7C,2CAA8C;AAC9C,mCAA2C;AAC3C,uCAA2C;AAC3C,yCAA6C;AAC7C,yDAA4D;AAC5D,2CAA8C;AAC9C,mDAAqD;AACrD,iDAAqD;AACrD,6CAAiD;AAEjD,iDAAoD;AAEpD,MAAM,QAAQ,GAAiB,EAAE,CAAC;AAClC,kBAAe,QAAQ,CAAC;AAExB,6GAA6G;AAE7G,+FAA+F;AAC/F,8FAA8F;AAC9F,4GAA4G;AAC5G,QAAQ,CAAC,IAAI,CAAC,IAAI,yCAAsB,EAAE,CAAC,CAAC;AAC5C,QAAQ,CAAC,IAAI,CAAC,IAAI,kCAAmB,EAAE,CAAC,CAAC;AACzC,QAAQ,CAAC,IAAI,CAAC,IAAI,mCAAmB,EAAE,CAAC,CAAC;AACzC,QAAQ,CAAC,IAAI,CAAC,IAAI,8BAAiB,EAAE,CAAC,CAAC;AACvC,QAAQ,CAAC,IAAI,CAAC,IAAI,0BAAe,EAAE,CAAC,CAAC;AACrC,QAAQ,CAAC,IAAI,CAAC,IAAI,wBAAgB,EAAE,CAAC,CAAC;AACtC,QAAQ,CAAC,IAAI,CAAC,IAAI,gCAAkB,EAAE,CAAC,CAAC;AACxC,QAAQ,CAAC,IAAI,CAAC,IAAI,kCAAkB,EAAE,CAAC,CAAC;AACxC,QAAQ,CAAC,IAAI,CAAC,IAAI,0BAAc,EAAE,CAAC,CAAC;AACpC,QAAQ,CAAC,IAAI,CAAC,IAAI,2BAAe,EAAE,CAAC,CAAC;AACrC,QAAQ,CAAC,IAAI,CAAC,IAAI,mCAAmB,EAAE,CAAC,CAAC;AACzC,QAAQ,CAAC,IAAI,CAAC,IAAI,uCAAqB,EAAE,CAAC,CAAC;AAC3C,QAAQ,CAAC,IAAI,CAAC,IAAI,iCAAkB,EAAE,CAAC,CAAC;AACxC,QAAQ,CAAC,IAAI,CAAC,IAAI,8BAAiB,EAAE,CAAC,CAAC;AACvC,QAAQ,CAAC,IAAI,CAAC,IAAI,2BAAe,EAAE,CAAC,CAAC;AACrC,QAAQ,CAAC,IAAI,CAAC,IAAI,+BAAiB,EAAE,CAAC,CAAC;AACvC,QAAQ,CAAC,IAAI,CAAC,IAAI,wBAAc,EAAE,CAAC,CAAC","sourcesContent":["import { BaseBranchesMatcher } from './base-branches';\nimport { CategoriesMatcher } from './categories';\nimport { CurrentAgeMatcher } from './current-age';\nimport { CurrentValueMatcher } from './current-value';\nimport { CurrentVersionMatcher } from './current-version';\nimport { DatasourcesMatcher } from './datasources';\nimport { DepNameMatcher } from './dep-names';\nimport { DepTypesMatcher } from './dep-types';\nimport { FileNamesMatcher } from './files';\nimport { JsonataMatcher } from './jsonata';\nimport { ManagersMatcher } from './managers';\nimport { MergeConfidenceMatcher } from './merge-confidence';\nimport { NewValueMatcher } from './new-value';\nimport { PackageNameMatcher } from './package-names';\nimport { RepositoriesMatcher } from './repositories';\nimport { SourceUrlsMatcher } from './sourceurls';\nimport type { MatcherApi } from './types';\nimport { UpdateTypesMatcher } from './update-types';\n\nconst matchers: MatcherApi[] = [];\nexport default matchers;\n\n// Each matcher under the same index will use a logical OR, if multiple matchers are applied AND will be used\n\n// applyPackageRules evaluates matchers in the order of insertion and returns early on failure.\n// Therefore, when multiple matchers are set in a single packageRule, some may not be checked.\n// Since matchConfidence matcher can abort the run due to unauthenticated use, it should be evaluated first.\nmatchers.push(new MergeConfidenceMatcher());\nmatchers.push(new RepositoriesMatcher());\nmatchers.push(new BaseBranchesMatcher());\nmatchers.push(new CategoriesMatcher());\nmatchers.push(new ManagersMatcher());\nmatchers.push(new FileNamesMatcher());\nmatchers.push(new DatasourcesMatcher());\nmatchers.push(new PackageNameMatcher());\nmatchers.push(new DepNameMatcher());\nmatchers.push(new DepTypesMatcher());\nmatchers.push(new CurrentValueMatcher());\nmatchers.push(new CurrentVersionMatcher());\nmatchers.push(new UpdateTypesMatcher());\nmatchers.push(new SourceUrlsMatcher());\nmatchers.push(new NewValueMatcher());\nmatchers.push(new CurrentAgeMatcher());\nmatchers.push(new JsonataMatcher());\n"]}