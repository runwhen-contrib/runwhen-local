{"version":3,"file":"files.js","sourceRoot":"","sources":["../../../lib/util/package-rules/files.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,kDAAgF;AAChF,iCAAiC;AAEjC,MAAa,gBAAiB,SAAQ,cAAO;IAClC,OAAO,CACd,EAAE,WAAW,EAAE,SAAS,EAA0B,EAClD,EAAE,cAAc,EAAe;QAE/B,IAAI,YAAE,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,CAAC;YACjC,OAAO,IAAI,CAAC;QACd,CAAC;QACD,IAAI,YAAE,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,IAAA,mCAAoB,EAAC,WAAW,EAAE,cAAc,CAAC,EAAE,CAAC;YACtD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,YAAE,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;YACxB,OAAO,IAAA,sCAAuB,EAAC,SAAS,EAAE,cAAc,CAAC,CAAC;QAC5D,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAtBD,4CAsBC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { PackageRule, PackageRuleInputConfig } from '../../config/types';\nimport { anyMatchRegexOrGlobList, matchRegexOrGlobList } from '../string-match';\nimport { Matcher } from './base';\n\nexport class FileNamesMatcher extends Matcher {\n  override matches(\n    { packageFile, lockFiles }: PackageRuleInputConfig,\n    { matchFileNames }: PackageRule,\n  ): boolean | null {\n    if (is.undefined(matchFileNames)) {\n      return null;\n    }\n    if (is.undefined(packageFile)) {\n      return false;\n    }\n\n    if (matchRegexOrGlobList(packageFile, matchFileNames)) {\n      return true;\n    }\n\n    if (is.array(lockFiles)) {\n      return anyMatchRegexOrGlobList(lockFiles, matchFileNames);\n    }\n\n    return false;\n  }\n}\n"]}