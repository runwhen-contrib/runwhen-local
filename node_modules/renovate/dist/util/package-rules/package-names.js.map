{"version":3,"file":"package-names.js","sourceRoot":"","sources":["../../../lib/util/package-rules/package-names.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,kDAAuD;AACvD,iCAAiC;AAEjC,MAAa,kBAAmB,SAAQ,cAAO;IACpC,OAAO,CACd,EAAE,WAAW,EAA0B,EACvC,WAAwB;QAExB,MAAM,EAAE,iBAAiB,EAAE,GAAG,WAAW,CAAC;QAC1C,IAAI,YAAE,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,CAAC;YACpC,OAAO,IAAI,CAAC;QACd,CAAC;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,IAAA,mCAAoB,EAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;IAC9D,CAAC;CACF;AAdD,gDAcC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { PackageRule, PackageRuleInputConfig } from '../../config/types';\nimport { matchRegexOrGlobList } from '../string-match';\nimport { Matcher } from './base';\n\nexport class PackageNameMatcher extends Matcher {\n  override matches(\n    { packageName }: PackageRuleInputConfig,\n    packageRule: PackageRule,\n  ): boolean | null {\n    const { matchPackageNames } = packageRule;\n    if (is.undefined(matchPackageNames)) {\n      return null;\n    }\n    if (!packageName) {\n      return false;\n    }\n    return matchRegexOrGlobList(packageName, matchPackageNames);\n  }\n}\n"]}