{"version":3,"file":"dep-types.js","sourceRoot":"","sources":["../../../lib/util/package-rules/dep-types.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,kDAAgF;AAChF,iCAAiC;AAEjC,MAAa,eAAgB,SAAQ,cAAO;IACjC,OAAO,CACd,EAAE,QAAQ,EAAE,OAAO,EAA0B,EAC7C,EAAE,aAAa,EAAe;QAE9B,IAAI,YAAE,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC;YAChC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,OAAO,EAAE,CAAC;YACZ,OAAO,IAAA,mCAAoB,EAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QACtD,CAAC;QAED,IAAI,QAAQ,EAAE,CAAC;YACb,OAAO,IAAA,sCAAuB,EAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QAC1D,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAnBD,0CAmBC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { PackageRule, PackageRuleInputConfig } from '../../config/types';\nimport { anyMatchRegexOrGlobList, matchRegexOrGlobList } from '../string-match';\nimport { Matcher } from './base';\n\nexport class DepTypesMatcher extends Matcher {\n  override matches(\n    { depTypes, depType }: PackageRuleInputConfig,\n    { matchDepTypes }: PackageRule,\n  ): boolean | null {\n    if (is.undefined(matchDepTypes)) {\n      return null;\n    }\n\n    if (depType) {\n      return matchRegexOrGlobList(depType, matchDepTypes);\n    }\n\n    if (depTypes) {\n      return anyMatchRegexOrGlobList(depTypes, matchDepTypes);\n    }\n\n    return false;\n  }\n}\n"]}