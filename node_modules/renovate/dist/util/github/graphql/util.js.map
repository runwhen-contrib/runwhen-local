{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../lib/util/github/graphql/util.ts"],"names":[],"mappings":";;AAGA,oCASC;AAMD,sCAOC;AAxBD,iCAAiC;AAEjC,SAAgB,YAAY,CAAC,YAAoB;IAC/C,OAAO;;;;mBAIU,YAAY;;;GAG5B,CAAC;AACJ,CAAC;AAED;;;GAGG;AACH,SAAgB,aAAa,CAC3B,WAAqB,EACrB,gBAAwB,EACxB,QAA4B;IAE5B,MAAM,UAAU,GAAG,gBAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7E,OAAO,WAAW,IAAI,UAAU,CAAC;AACnC,CAAC","sourcesContent":["import type { DurationLikeObject } from 'luxon';\nimport { DateTime } from 'luxon';\n\nexport function prepareQuery(payloadQuery: string): string {\n  return `\n    query($owner: String!, $name: String!, $cursor: String, $count: Int!) {\n      repository(owner: $owner, name: $name) {\n        isRepoPrivate: isPrivate\n        payload: ${payloadQuery}\n      }\n    }\n  `;\n}\n\n/**\n * Tells whether the time `duration` is expired starting\n * from the `date` (ISO date format) at the moment of `now`.\n */\nexport function isDateExpired(\n  currentTime: DateTime,\n  initialTimestamp: string,\n  duration: DurationLikeObject,\n): boolean {\n  const expiryTime = DateTime.fromISO(initialTimestamp).plus(duration).toUTC();\n  return currentTime >= expiryTime;\n}\n"]}