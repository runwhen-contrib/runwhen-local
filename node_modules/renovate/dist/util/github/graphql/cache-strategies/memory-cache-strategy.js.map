{"version":3,"file":"memory-cache-strategy.js","sourceRoot":"","sources":["../../../../../lib/util/github/graphql/cache-strategies/memory-cache-strategy.ts"],"names":[],"mappings":";;;;AAAA,wEAAkD;AAElD,uEAA+E;AAE/E;;;GAGG;AACH,MAAa,gCAEX,SAAQ,4DAA8C;IAC9C,OAAO;QACb,OAAO,wBAAwB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjE,CAAC;IAED,IAAI;QACF,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC9B,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,OAAO,CAAC,WAAiD;QACvD,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;QAC/B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;CACF;AAlBD,4EAkBC","sourcesContent":["import * as memCache from '../../../cache/memory';\nimport type { GithubDatasourceItem, GithubGraphqlCacheRecord } from '../types';\nimport { AbstractGithubGraphqlCacheStrategy } from './abstract-cache-strategy';\n\n/**\n * In-memory strategy meant to be used for private packages\n * and for testing purposes.\n */\nexport class GithubGraphqlMemoryCacheStrategy<\n  GithubItem extends GithubDatasourceItem,\n> extends AbstractGithubGraphqlCacheStrategy<GithubItem> {\n  private fullKey(): string {\n    return `github-graphql-cache:${this.cacheNs}:${this.cacheKey}`;\n  }\n\n  load(): Promise<GithubGraphqlCacheRecord<GithubItem> | undefined> {\n    const key = this.fullKey();\n    const res = memCache.get(key);\n    return Promise.resolve(res);\n  }\n\n  persist(cacheRecord: GithubGraphqlCacheRecord<GithubItem>): Promise<void> {\n    const key = this.fullKey();\n    memCache.set(key, cacheRecord);\n    return Promise.resolve();\n  }\n}\n"]}