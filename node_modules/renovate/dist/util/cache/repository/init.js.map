{"version":3,"file":"init.js","sourceRoot":"","sources":["../../../../lib/util/cache/repository/init.ts"],"names":[],"mappings":";;AAQA,sCA4BC;AApCD,wDAAoD;AACpD,sCAA4C;AAE5C,wBAAyC;AAEzC;;GAEG;AACI,KAAK,UAAU,aAAa,CAAC,MAAuB;IACzD,IAAA,aAAU,GAAE,CAAC;IAEb,MAAM,EACJ,UAAU,EACV,eAAe,EACf,mBAAmB,EAAE,IAAI,GAAG,OAAO,EACnC,eAAe,GAChB,GAAG,MAAM,CAAC;IAEX,IAAI,eAAe,KAAK,UAAU,EAAE,CAAC;QACnC,IAAA,WAAQ,EAAC,IAAI,oBAAa,EAAE,CAAC,CAAC;QAC9B,OAAO;IACT,CAAC;IAED,IAAI,eAAe,KAAK,SAAS,EAAE,CAAC;QAClC,MAAM,KAAK,GAAG,4BAAY,CAAC,GAAG,CAAC,UAAW,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;QACnE,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC;QACnB,IAAA,WAAQ,EAAC,KAAK,CAAC,CAAC;QAChB,OAAO;IACT,CAAC;IAED,IAAI,eAAe,KAAK,OAAO,EAAE,CAAC;QAChC,MAAM,KAAK,GAAG,4BAAY,CAAC,GAAG,CAAC,UAAW,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;QACnE,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC;QACnB,IAAA,WAAQ,EAAC,KAAK,CAAC,CAAC;QAChB,OAAO;IACT,CAAC;AACH,CAAC","sourcesContent":["import { CacheFactory } from './impl/cache-factory';\nimport { RepoCacheNull } from './impl/null';\nimport type { RepoCacheConfig } from './types';\nimport { resetCache, setCache } from '.';\n\n/**\n * Extracted to separate file in order to avoid circular module dependencies.\n */\nexport async function initRepoCache(config: RepoCacheConfig): Promise<void> {\n  resetCache();\n\n  const {\n    repository,\n    repositoryCache,\n    repositoryCacheType: type = 'local',\n    repoFingerprint,\n  } = config;\n\n  if (repositoryCache === 'disabled') {\n    setCache(new RepoCacheNull());\n    return;\n  }\n\n  if (repositoryCache === 'enabled') {\n    const cache = CacheFactory.get(repository!, repoFingerprint, type);\n    await cache.load();\n    setCache(cache);\n    return;\n  }\n\n  if (repositoryCache === 'reset') {\n    const cache = CacheFactory.get(repository!, repoFingerprint, type);\n    await cache.save();\n    setCache(cache);\n    return;\n  }\n}\n"]}