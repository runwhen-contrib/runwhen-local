{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../lib/util/cache/repository/schema.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AACxB,qDAA0C;AAE7B,QAAA,YAAY,GAAG,mBAAI,CAAC,IAAI,CACnC,OAAC;KACE,MAAM,CAAC;IACN,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;IAC5C,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACvB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;CAC/B,CAAC;KACD,MAAM,EAAE,CACZ,CAAC","sourcesContent":["import { z } from 'zod';\nimport { Json } from '../../schema-utils';\n\nexport const RepoCacheV13 = Json.pipe(\n  z\n    .object({\n      repository: z.string().min(1),\n      revision: z.number().refine((v) => v === 13),\n      payload: z.string().min(1),\n      hash: z.string().min(1),\n      fingerprint: z.string().min(1),\n    })\n    .strict(),\n);\n\nexport type RepoCacheRecord = z.infer<typeof RepoCacheV13>;\n"]}