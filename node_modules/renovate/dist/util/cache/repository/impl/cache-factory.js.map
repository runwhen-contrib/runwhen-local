{"version":3,"file":"cache-factory.js","sourceRoot":"","sources":["../../../../../lib/util/cache/repository/impl/cache-factory.ts"],"names":[],"mappings":";;;AACA,+CAA4C;AAE5C,mCAAyC;AACzC,6BAAmC;AAEnC,MAAa,YAAY;IACvB,MAAM,CAAC,GAAG,CACR,UAAkB,EAClB,eAAuB,EACvB,SAA8B;QAE9B,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC5D,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,OAAO;gBACV,OAAO,IAAI,sBAAc,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;YACzD,KAAK,IAAI;gBACP,OAAO,IAAI,gBAAW,CAAC,UAAU,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;YACjE;gBACE,eAAM,CAAC,IAAI,CACT,EAAE,SAAS,EAAE,EACb,gEAAgE,CACjE,CAAC;gBACF,OAAO,IAAI,sBAAc,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;CACF;AApBD,oCAoBC","sourcesContent":["import type { RepositoryCacheType } from '../../../../config/types';\nimport { logger } from '../../../../logger';\nimport type { RepoCache } from '../types';\nimport { RepoCacheLocal } from './local';\nimport { RepoCacheS3 } from './s3';\n\nexport class CacheFactory {\n  static get(\n    repository: string,\n    repoFingerprint: string,\n    cacheType: RepositoryCacheType,\n  ): RepoCache {\n    const type = cacheType.split('://')[0].trim().toLowerCase();\n    switch (type) {\n      case 'local':\n        return new RepoCacheLocal(repository, repoFingerprint);\n      case 's3':\n        return new RepoCacheS3(repository, repoFingerprint, cacheType);\n      default:\n        logger.warn(\n          { cacheType },\n          `Repository cache type not supported using type \"local\" instead`,\n        );\n        return new RepoCacheLocal(repository, repoFingerprint);\n    }\n  }\n}\n"]}