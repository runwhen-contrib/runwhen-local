{"version":3,"file":"containerbase.js","sourceRoot":"","sources":["../../../lib/util/exec/containerbase.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport { GlobalConfig } from '../../config/global';\nimport { logger } from '../../logger';\nimport type { ReleaseResult } from '../../modules/datasource';\nimport * as allVersioning from '../../modules/versioning';\nimport { id as composerVersioningId } from '../../modules/versioning/composer';\nimport { id as condaVersioningId } from '../../modules/versioning/conda';\nimport { id as gradleVersioningId } from '../../modules/versioning/gradle';\nimport { id as mavenVersioningId } from '../../modules/versioning/maven';\nimport { id as nodeVersioningId } from '../../modules/versioning/node';\nimport { id as npmVersioningId } from '../../modules/versioning/npm';\nimport { id as pep440VersioningId } from '../../modules/versioning/pep440';\nimport { id as pythonVersioningId } from '../../modules/versioning/python';\nimport { id as rubyVersioningId } from '../../modules/versioning/ruby';\nimport { id as semverVersioningId } from '../../modules/versioning/semver';\nimport { id as semverCoercedVersioningId } from '../../modules/versioning/semver-coerced';\nimport type { Opt, ToolConfig, ToolConstraint } from './types';\n\nconst allToolConfig: Record<string, ToolConfig> = {\n  bun: {\n    datasource: 'github-releases',\n    packageName: 'oven-sh/bun',\n    extractVersion: '^bun-v(?<version>.*)$',\n    versioning: npmVersioningId,\n  },\n  bundler: {\n    datasource: 'rubygems',\n    packageName: 'bundler',\n    versioning: rubyVersioningId,\n  },\n  cocoapods: {\n    datasource: 'rubygems',\n    packageName: 'cocoapods',\n    versioning: rubyVersioningId,\n  },\n  composer: {\n    datasource: 'github-releases',\n    packageName: 'containerbase/composer-prebuild',\n    versioning: composerVersioningId,\n  },\n  copier: {\n    datasource: 'pypi',\n    packageName: 'copier',\n    versioning: pep440VersioningId,\n  },\n  corepack: {\n    datasource: 'npm',\n    packageName: 'corepack',\n    versioning: npmVersioningId,\n  },\n  devbox: {\n    datasource: 'github-releases',\n    packageName: 'jetify-com/devbox',\n    versioning: semverVersioningId,\n  },\n  dotnet: {\n    datasource: 'dotnet-version',\n    packageName: 'dotnet-sdk',\n    versioning: semverVersioningId,\n  },\n  erlang: {\n    datasource: 'github-releases',\n    packageName: 'containerbase/erlang-prebuild',\n    versioning: semverCoercedVersioningId,\n  },\n  elixir: {\n    datasource: 'github-releases',\n    packageName: 'elixir-lang/elixir',\n    versioning: semverVersioningId,\n  },\n  flux: {\n    datasource: 'github-releases',\n    packageName: 'fluxcd/flux2',\n    versioning: semverVersioningId,\n  },\n  gleam: {\n    datasource: 'github-releases',\n    packageName: 'gleam-lang/gleam',\n    versioning: semverVersioningId,\n  },\n  golang: {\n    datasource: 'github-releases',\n    packageName: 'containerbase/golang-prebuild',\n    versioning: npmVersioningId,\n  },\n  gradle: {\n    datasource: 'gradle-version',\n    packageName: 'gradle',\n    versioning: gradleVersioningId,\n  },\n  hashin: {\n    datasource: 'pypi',\n    packageName: 'hashin',\n    versioning: pep440VersioningId,\n  },\n  helm: {\n    datasource: 'github-releases',\n    packageName: 'helm/helm',\n    versioning: semverVersioningId,\n  },\n  helmfile: {\n    datasource: 'github-releases',\n    packageName: 'helmfile/helmfile',\n    versioning: semverVersioningId,\n  },\n  java: {\n    datasource: 'java-version',\n    packageName: 'java',\n    versioning: npmVersioningId,\n  },\n  /* not used in Renovate */\n  'java-maven': {\n    datasource: 'java-version',\n    packageName: 'java',\n    versioning: mavenVersioningId,\n  },\n  jb: {\n    datasource: 'github-releases',\n    packageName: 'jsonnet-bundler/jsonnet-bundler',\n    versioning: semverVersioningId,\n  },\n  kustomize: {\n    datasource: 'github-releases',\n    packageName: 'kubernetes-sigs/kustomize',\n    extractVersion: '^kustomize/v(?<version>.*)$',\n    versioning: semverVersioningId,\n  },\n  maven: {\n    datasource: 'github-releases',\n    packageName: 'containerbase/maven-prebuild',\n    versioning: mavenVersioningId,\n  },\n  nix: {\n    datasource: 'github-releases',\n    packageName: 'containerbase/nix-prebuild',\n    versioning: semverVersioningId,\n  },\n  node: {\n    datasource: 'github-releases',\n    packageName: 'containerbase/node-prebuild',\n    versioning: nodeVersioningId,\n  },\n  npm: {\n    datasource: 'npm',\n    packageName: 'npm',\n    hash: true,\n    versioning: npmVersioningId,\n  },\n  pdm: {\n    datasource: 'github-releases',\n    packageName: 'pdm-project/pdm',\n    versioning: semverVersioningId,\n  },\n  php: {\n    datasource: 'github-releases',\n    packageName: 'containerbase/php-prebuild',\n    versioning: composerVersioningId,\n  },\n  'pip-tools': {\n    datasource: 'pypi',\n    packageName: 'pip-tools',\n    versioning: pep440VersioningId,\n  },\n  pipenv: {\n    datasource: 'pypi',\n    packageName: 'pipenv',\n    versioning: pep440VersioningId,\n  },\n  pnpm: {\n    datasource: 'npm',\n    packageName: 'pnpm',\n    versioning: npmVersioningId,\n  },\n  pixi: {\n    datasource: 'github-releases',\n    packageName: 'prefix-dev/pixi',\n    versioning: condaVersioningId,\n    extractVersion: '^v(?<version>.*)$',\n  },\n  poetry: {\n    datasource: 'pypi',\n    packageName: 'poetry',\n    versioning: pep440VersioningId,\n  },\n  python: {\n    datasource: 'github-releases',\n    packageName: 'containerbase/python-prebuild',\n    versioning: pythonVersioningId,\n  },\n  ruby: {\n    datasource: 'github-releases',\n    packageName: 'containerbase/ruby-prebuild',\n    versioning: rubyVersioningId,\n  },\n  rust: {\n    datasource: 'docker',\n    packageName: 'rust',\n    versioning: semverVersioningId,\n  },\n  uv: {\n    datasource: 'pypi',\n    packageName: 'uv',\n    versioning: pep440VersioningId,\n  },\n  yarn: {\n    datasource: 'npm',\n    packageName: 'yarn',\n    versioning: npmVersioningId,\n  },\n  'yarn-slim': {\n    datasource: 'npm',\n    packageName: 'yarn',\n    versioning: npmVersioningId,\n  },\n  dart: {\n    datasource: 'dart-version',\n    packageName: 'dart',\n    versioning: npmVersioningId,\n  },\n  flutter: {\n    datasource: 'github-releases',\n    packageName: 'containerbase/flutter-prebuild',\n    versioning: npmVersioningId,\n  },\n  vendir: {\n    datasource: 'github-releases',\n    packageName: 'carvel-dev/vendir',\n    versioning: semverVersioningId,\n  },\n};\n\nlet _getPkgReleases: Promise<typeof import('../../modules/datasource')> | null =\n  null;\n\nasync function getPkgReleases(\n  toolConfig: ToolConfig,\n): Promise<ReleaseResult | null> {\n  _getPkgReleases ??= import('../../modules/datasource/index.js');\n  const { getPkgReleases } = await _getPkgReleases;\n  return getPkgReleases(toolConfig);\n}\n\nexport function supportsDynamicInstall(toolName: string): boolean {\n  return !!allToolConfig[toolName];\n}\n\nexport function isContainerbase(): boolean {\n  return !!process.env.CONTAINERBASE;\n}\n\nexport function isDynamicInstall(\n  toolConstraints?: Opt<ToolConstraint[]>,\n): boolean {\n  if (GlobalConfig.get('binarySource') !== 'install') {\n    return false;\n  }\n  if (!isContainerbase()) {\n    logger.debug('Falling back to binarySource=global');\n    return false;\n  }\n  return (\n    !toolConstraints ||\n    toolConstraints.every((toolConstraint) =>\n      supportsDynamicInstall(toolConstraint.toolName),\n    )\n  );\n}\n\nfunction isStable(\n  version: string,\n  versioningApi: allVersioning.VersioningApi,\n  latest?: string,\n): boolean {\n  if (!versioningApi.isStable(version)) {\n    return false;\n  }\n  if (is.string(latest)) {\n    if (versioningApi.isGreaterThan(version, latest)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport async function resolveConstraint(\n  toolConstraint: ToolConstraint,\n): Promise<string> {\n  const { toolName } = toolConstraint;\n  const toolConfig = allToolConfig[toolName];\n  if (!toolConfig) {\n    throw new Error(`Invalid tool to install: ${toolName}`);\n  }\n\n  const versioning = allVersioning.get(toolConfig.versioning);\n  let constraint = toolConstraint.constraint;\n  if (constraint) {\n    if (versioning.isValid(constraint)) {\n      if (versioning.isSingleVersion(constraint)) {\n        return constraint.replace(/^=+/, '').trim();\n      }\n    } else {\n      logger.warn(\n        { toolName, constraint, versioning: toolConfig.versioning },\n        'Invalid tool constraint',\n      );\n      constraint = undefined;\n    }\n  }\n\n  const pkgReleases = await getPkgReleases(toolConfig);\n  const releases = pkgReleases?.releases ?? [];\n\n  if (!releases?.length) {\n    logger.warn({ toolConfig }, 'No tool releases found.');\n    throw new Error('No tool releases found.');\n  }\n\n  const matchingReleases = releases.filter(\n    (r) => !constraint || versioning.matches(r.version, constraint),\n  );\n\n  const stableMatchingVersion = matchingReleases\n    .filter((r) => isStable(r.version, versioning, pkgReleases?.tags?.latest))\n    .pop()?.version;\n  if (stableMatchingVersion) {\n    logger.debug(\n      { toolName, constraint, resolvedVersion: stableMatchingVersion },\n      'Resolved stable matching version',\n    );\n    return stableMatchingVersion;\n  }\n\n  const unstableMatchingVersion = matchingReleases.pop()?.version;\n  if (unstableMatchingVersion) {\n    logger.debug(\n      { toolName, constraint, resolvedVersion: unstableMatchingVersion },\n      'Resolved unstable matching version',\n    );\n    return unstableMatchingVersion;\n  }\n\n  const stableVersion = releases\n    .filter((r) => isStable(r.version, versioning, pkgReleases?.tags?.latest))\n    .pop()?.version;\n  if (stableVersion) {\n    logger.warn(\n      { toolName, constraint, stableVersion },\n      'No matching tool versions found for constraint - using latest stable version',\n    );\n  }\n\n  const highestVersion = releases.pop()!.version;\n  logger.warn(\n    { toolName, constraint, highestVersion },\n    'No matching or stable tool versions found - using an unstable version',\n  );\n  return highestVersion;\n}\n\nexport async function generateInstallCommands(\n  toolConstraints: Opt<ToolConstraint[]>,\n): Promise<string[]> {\n  const installCommands: string[] = [];\n  if (toolConstraints?.length) {\n    for (const toolConstraint of toolConstraints) {\n      const toolVersion = await resolveConstraint(toolConstraint);\n      const { toolName } = toolConstraint;\n      const installCommand = `install-tool ${toolName} ${quote(toolVersion)}`;\n      installCommands.push(installCommand);\n      if (allToolConfig[toolName].hash) {\n        installCommands.push(`hash -d ${toolName} 2>/dev/null || true`);\n      }\n    }\n  }\n  return installCommands;\n}\n"]}