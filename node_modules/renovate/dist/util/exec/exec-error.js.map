{"version":3,"file":"exec-error.js","sourceRoot":"","sources":["../../../lib/util/exec/exec-error.ts"],"names":[],"mappings":";;;AAWA,MAAa,SAAU,SAAQ,KAAK;IAClC,GAAG,CAAS;IACZ,MAAM,CAAS;IACf,MAAM,CAAS;IACf,OAAO,CAAiB;IACxB,QAAQ,CAAU;IAClB,MAAM,CAAkB;IACxB,GAAG,CAAS;IAEZ,YAAY,OAAe,EAAE,IAAmB,EAAE,GAAW;QAC3D,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QAEhE,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC;QAED,IAAI,MAAM,EAAE,CAAC;YACX,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QAED,IAAI,GAAG,EAAE,CAAC;YACR,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACjB,CAAC;IACH,CAAC;CACF;AAhCD,8BAgCC","sourcesContent":["import type { RawExecOptions } from './types';\n\nexport interface ExecErrorData {\n  cmd: string;\n  stderr: string;\n  stdout: string;\n  options: RawExecOptions;\n  exitCode?: number;\n  signal?: NodeJS.Signals;\n}\n\nexport class ExecError extends Error {\n  cmd: string;\n  stderr: string;\n  stdout: string;\n  options: RawExecOptions;\n  exitCode?: number;\n  signal?: NodeJS.Signals;\n  err?: Error;\n\n  constructor(message: string, data: ExecErrorData, err?: Error) {\n    const { cmd, exitCode, stderr, stdout, options, signal } = data;\n\n    super(message);\n\n    this.name = this.constructor.name;\n    this.cmd = cmd;\n    this.stderr = stderr;\n    this.stdout = stdout;\n    this.options = options;\n\n    if (exitCode) {\n      this.exitCode = exitCode;\n    }\n\n    if (signal) {\n      this.signal = signal;\n    }\n\n    if (err) {\n      this.err = err;\n    }\n  }\n}\n"]}