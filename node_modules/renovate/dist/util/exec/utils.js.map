{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../lib/util/exec/utils.ts"],"names":[],"mappings":";;AAKA,kCA+BC;;AApCD,kEAAkC;AAClC,gCAAkD;AAClD,+BAA2C;AAG3C,SAAgB,WAAW,CAAC,EAC1B,QAAQ,EACR,GAAG,EAAE,SAAS,GAAG,EAAE,GACP;IACZ,MAAM,eAAe,GAAG,IAAA,kBAAY,GAAE,CAAC;IACvC,MAAM,iBAAiB,GAAG,IAAA,gBAAU,GAAE,CAAC;IAEvC,MAAM,aAAa,GAAa,EAAE,CAAC;IACnC,KAAK,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,CAAC;QACxD,IAAI,YAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;YACnB,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,MAAM,SAAS,GAAG,IAAA,wBAAkB,EAAC,aAAa,CAAC,CAAC;IACpD,MAAM,WAAW,GAAG;QAClB,GAAG,QAAQ;QACX,GAAG,SAAS;QACZ,GAAG,eAAe;QAClB,GAAG,iBAAiB;QACpB,GAAG,SAAS;KACb,CAAC;IAEF,MAAM,MAAM,GAA2B,EAAE,CAAC;IAC1C,KAAK,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;QACrD,IAAI,YAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;YACnB,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport { getCustomEnv, getUserEnv } from '../env';\nimport { getChildProcessEnv } from './env';\nimport type { ExecOptions } from './types';\n\nexport function getChildEnv({\n  extraEnv,\n  env: forcedEnv = {},\n}: ExecOptions): Record<string, string> {\n  const globalConfigEnv = getCustomEnv();\n  const userConfiguredEnv = getUserEnv();\n\n  const inheritedKeys: string[] = [];\n  for (const [key, val] of Object.entries(extraEnv ?? {})) {\n    if (is.string(val)) {\n      inheritedKeys.push(key);\n    }\n  }\n\n  const parentEnv = getChildProcessEnv(inheritedKeys);\n  const combinedEnv = {\n    ...extraEnv,\n    ...parentEnv,\n    ...globalConfigEnv,\n    ...userConfiguredEnv,\n    ...forcedEnv,\n  };\n\n  const result: Record<string, string> = {};\n  for (const [key, val] of Object.entries(combinedEnv)) {\n    if (is.string(val)) {\n      result[key] = `${val}`;\n    }\n  }\n\n  return result;\n}\n"]}