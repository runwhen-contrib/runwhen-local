{"version":3,"file":"semantic.js","sourceRoot":"","sources":["../../../lib/util/git/semantic.ts"],"names":[],"mappings":";;AAOA,sDAqBC;;AA5BD,0GAAwE;AACxE,yCAAsC;AACtC,4DAAuD;AACvD,wBAAsC;AAI/B,KAAK,UAAU,qBAAqB;IACzC,eAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;IACxC,MAAM,KAAK,GAAG,IAAA,qBAAQ,GAAE,CAAC;IACzB,IAAI,KAAK,CAAC,eAAe,EAAE,CAAC;QAC1B,eAAM,CAAC,KAAK,CACV,+BAA+B,KAAK,CAAC,eAAe,cAAc,CACnE,CAAC;QACF,OAAO,KAAK,CAAC,eAAe,CAAC;IAC/B,CAAC;IACD,MAAM,cAAc,GAAG,MAAM,IAAA,oBAAiB,GAAE,CAAC;IACjD,eAAM,CAAC,KAAK,CAAC,kBAAkB,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IACjE,MAAM,IAAI,GAAG,IAAA,uCAA2B,EAAC,cAAc,CAAC,CAAC;IACzD,eAAM,CAAC,KAAK,CAAC,8BAA8B,IAAI,GAAG,CAAC,CAAC;IACpD,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;QACvB,eAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;QACzC,KAAK,CAAC,eAAe,GAAG,SAAS,CAAC;IACpC,CAAC;SAAM,CAAC;QACN,eAAM,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC1C,KAAK,CAAC,eAAe,GAAG,UAAU,CAAC;IACrC,CAAC;IACD,OAAO,KAAK,CAAC,eAAe,CAAC;AAC/B,CAAC","sourcesContent":["import conventionalCommitsDetector from 'conventional-commits-detector';\nimport { logger } from '../../logger';\nimport { getCache } from '../../util/cache/repository';\nimport { getCommitMessages } from '.';\n\ntype DetectedSemanticCommit = 'enabled' | 'disabled';\n\nexport async function detectSemanticCommits(): Promise<DetectedSemanticCommit> {\n  logger.debug('detectSemanticCommits()');\n  const cache = getCache();\n  if (cache.semanticCommits) {\n    logger.debug(\n      `semanticCommits: returning \"${cache.semanticCommits}\" from cache`,\n    );\n    return cache.semanticCommits;\n  }\n  const commitMessages = await getCommitMessages();\n  logger.trace(`commitMessages=${JSON.stringify(commitMessages)}`);\n  const type = conventionalCommitsDetector(commitMessages);\n  logger.debug(`semanticCommits: detected \"${type}\"`);\n  if (type === 'angular') {\n    logger.debug(`semanticCommits: enabled`);\n    cache.semanticCommits = 'enabled';\n  } else {\n    logger.debug(`semanticCommits: disabled`);\n    cache.semanticCommits = 'disabled';\n  }\n  return cache.semanticCommits;\n}\n"]}