{"version":3,"file":"set-branch-commit.js","sourceRoot":"","sources":["../../../lib/util/git/set-branch-commit.ts"],"names":[],"mappings":";;AAUA,gDA0BC;AApCD,yCAAsC;AACtC,oDAA+C;AAE/C,wBAAoC;AAEpC;;;;GAIG;AACH,SAAgB,kBAAkB,CAChC,UAAkB,EAClB,UAAkB,EAClB,SAAiB;IAEjB,eAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAClC,MAAM,KAAK,GAAG,IAAA,qBAAQ,GAAE,CAAC;IACzB,KAAK,CAAC,QAAQ,KAAK,EAAE,CAAC;IACtB,IAAI,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;IACvE,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,eAAM,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC,CAAC,yBAAyB;QACtF,MAAM,GAAG;YACP,UAAU;YACV,UAAU;SACI,CAAC;QACjB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,MAAM,aAAa,GAAG,IAAA,kBAAe,EAAC,UAAU,CAAC,CAAC;IAElD,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;AACzB,CAAC","sourcesContent":["import { logger } from '../../logger';\nimport { getCache } from '../cache/repository';\nimport type { BranchCache } from '../cache/repository/types';\nimport { getBranchCommit } from '.';\n\n/**\n * Called when a new commit is added to branch\n *\n * ie. when branch is created/updated\n */\nexport function setBranchNewCommit(\n  branchName: string,\n  baseBranch: string,\n  commitSha: string,\n): void {\n  logger.debug('setBranchCommit()');\n  const cache = getCache();\n  cache.branches ??= [];\n  let branch = cache.branches.find((br) => br.branchName === branchName);\n  if (!branch) {\n    logger.debug(`setBranchCommit(): Branch cache not present`); // should never be called\n    branch = {\n      branchName,\n      baseBranch,\n    } as BranchCache;\n    cache.branches.push(branch);\n  }\n\n  const baseBranchSha = getBranchCommit(baseBranch);\n\n  branch.baseBranchSha = baseBranchSha;\n  branch.isBehindBase = false;\n  branch.isConflicted = false;\n  branch.isModified = false;\n  branch.pristine = true;\n  branch.sha = commitSha;\n}\n"]}