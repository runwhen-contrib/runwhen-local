{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../lib/util/git/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { PlatformCommitOptions } from '../../config/types';\nimport type { GitOptions } from '../../types/git';\n\nexport type { DiffResult, StatusResult } from 'simple-git';\n\nexport interface GitAuthor {\n  name?: string | null;\n  address?: string;\n}\n\nexport type GitNoVerifyOption = 'commit' | 'push';\n\n/**\n * We want to make sure this is a long sha of 40 characters and not just any string\n */\nexport type LongCommitSha = string & { __longCommitSha: never };\n\nexport interface StorageConfig {\n  currentBranch?: string;\n  defaultBranch?: string;\n  url: string;\n  extraCloneOpts?: GitOptions;\n  cloneSubmodules?: boolean;\n  cloneSubmodulesFilter?: string[];\n  fullClone?: boolean;\n}\n\nexport interface LocalConfig extends StorageConfig {\n  additionalBranches: string[];\n  currentBranch: string;\n  currentBranchSha: LongCommitSha;\n  branchCommits: Record<string, LongCommitSha>;\n  branchIsModified: Record<string, boolean>;\n  commitBranches: Record<string, string[]>;\n  ignoredAuthors: string[];\n  gitAuthorName?: string | null;\n  gitAuthorEmail?: string;\n\n  writeGitDone?: boolean;\n}\n\nexport interface FileAddition {\n  /**\n   * Addition creates new file or modifies existing one\n   */\n  type: 'addition';\n\n  /**\n   * Relative file path\n   */\n  path: string;\n\n  /**\n   * File contents\n   */\n  contents: string | Buffer | null;\n\n  /**\n   * The executable bit\n   */\n  isExecutable?: boolean;\n\n  isSymlink?: boolean;\n}\n\nexport interface FileDeletion {\n  /**\n   * Deletion removes the file\n   */\n  type: 'deletion';\n\n  /**\n   * Relative file path\n   */\n  path: string;\n}\n\nexport type FileChange = FileAddition | FileDeletion;\n\nexport interface CommitFilesConfig {\n  baseBranch?: string;\n  branchName: string;\n  files: FileChange[];\n  message: string | string[];\n  force?: boolean;\n  platformCommit?: PlatformCommitOptions;\n  /** Only needed by Gerrit platform */\n  prTitle?: string;\n  /** Only needed by Gerrit platform */\n  autoApprove?: boolean;\n}\n\nexport interface PushFilesConfig {\n  sourceRef: string;\n  targetRef?: string;\n  files: FileChange[];\n}\n\nexport type BranchName = string;\n\nexport interface CommitResult {\n  parentCommitSha: LongCommitSha;\n  commitSha: LongCommitSha;\n  files: FileChange[];\n}\n\nexport interface TreeItem {\n  path: string;\n  mode: string;\n  type: string;\n  sha: LongCommitSha;\n}\n\n/**\n * Represents a git authentication rule in the form of e.g.:\n * git config --global url.\"https://api@github.com/\".insteadOf \"https://github.com/\"\n */\nexport interface AuthenticationRule {\n  url: string;\n  insteadOf: string;\n}\n"]}