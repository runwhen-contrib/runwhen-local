{"version":3,"file":"filter-map.js","sourceRoot":"","sources":["../../lib/util/filter-map.ts"],"names":[],"mappings":";;AAOA,8BAkBC;;AAzBD,kEAAkC;AAIlC;;GAEG;AACH,SAAgB,SAAS,CAAO,KAAU,EAAE,EAA0B;IACpE,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5B,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,IAAI,CAAC,EAAE,CAAC;QAClD,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QAC3B,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,YAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;YACnB,KAAK,CAAC,MAAM,CAAC,GAAG,GAAY,CAAC;YAC7B,MAAM,IAAI,CAAC,CAAC;QACd,CAAC;IACH,CAAC;IAED,MAAM,YAAY,GAAG,MAAM,GAAG,MAAM,CAAC;IACrC,IAAI,YAAY,EAAE,CAAC;QACjB,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,YAAY,CAAC;IACvC,CAAC;IAED,OAAO,KAAc,CAAC;AACxB,CAAC","sourcesContent":["import is from '@sindresorhus/is';\n\ntype Falsy = false | '' | 0 | 0n | null | undefined;\n\n/**\n * Filter and map an array *in place* with single iteration.\n */\nexport function filterMap<T, U>(array: T[], fn: (item: T) => Falsy | U): U[] {\n  const length = array.length;\n  let newIdx = 0;\n  for (let oldIdx = 0; oldIdx < length; oldIdx += 1) {\n    const item = array[oldIdx];\n    const res = fn(item);\n    if (is.truthy(res)) {\n      array[newIdx] = res as never;\n      newIdx += 1;\n    }\n  }\n\n  const deletedCount = length - newIdx;\n  if (deletedCount) {\n    array.length = length - deletedCount;\n  }\n\n  return array as never;\n}\n"]}