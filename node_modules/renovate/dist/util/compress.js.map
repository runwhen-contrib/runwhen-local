{"version":3,"file":"compress.js","sourceRoot":"","sources":["../../lib/util/compress.ts"],"names":[],"mappings":";;AAMA,4CAQC;AAED,oDAIC;;AApBD,yCAAsC;AACtC,+DAA4C;AAE5C,MAAM,cAAc,GAAG,IAAA,qBAAS,EAAC,mBAAI,CAAC,cAAc,CAAC,CAAC;AACtD,MAAM,gBAAgB,GAAG,IAAA,qBAAS,EAAC,mBAAI,CAAC,gBAAgB,CAAC,CAAC;AAEnD,KAAK,UAAU,gBAAgB,CAAC,KAAa;IAClD,MAAM,GAAG,GAAG,MAAM,cAAc,CAAC,KAAK,EAAE;QACtC,MAAM,EAAE;YACN,CAAC,qBAAS,CAAC,iBAAiB,CAAC,EAAE,qBAAS,CAAC,gBAAgB;YACzD,CAAC,qBAAS,CAAC,oBAAoB,CAAC,EAAE,CAAC;SACpC;KACF,CAAC,CAAC;IACH,OAAO,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAChC,CAAC;AAEM,KAAK,UAAU,oBAAoB,CAAC,KAAa;IACtD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACzC,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACxC,OAAO,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC9B,CAAC","sourcesContent":["import { promisify } from 'node:util';\nimport zlib, { constants } from 'node:zlib';\n\nconst brotliCompress = promisify(zlib.brotliCompress);\nconst brotliDecompress = promisify(zlib.brotliDecompress);\n\nexport async function compressToBase64(input: string): Promise<string> {\n  const buf = await brotliCompress(input, {\n    params: {\n      [constants.BROTLI_PARAM_MODE]: constants.BROTLI_MODE_TEXT,\n      [constants.BROTLI_PARAM_QUALITY]: 8,\n    },\n  });\n  return buf.toString('base64');\n}\n\nexport async function decompressFromBase64(input: string): Promise<string> {\n  const buf = Buffer.from(input, 'base64');\n  const str = await brotliDecompress(buf);\n  return str.toString('utf8');\n}\n"]}