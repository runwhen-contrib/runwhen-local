{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/util/template/index.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport handlebars, { type HelperOptions } from 'handlebars';\nimport { GlobalConfig } from '../../config/global';\nimport { logger } from '../../logger';\nimport { toArray } from '../array';\nimport { getChildEnv } from '../exec/utils';\nimport { regEx } from '../regex';\n\n// Missing in handlebars\ntype Options = HelperOptions & {\n  lookupProperty: (element: unknown, key: unknown) => unknown;\n};\n\nhandlebars.registerHelper('encodeURIComponent', encodeURIComponent);\nhandlebars.registerHelper('decodeURIComponent', decodeURIComponent);\n\nhandlebars.registerHelper('encodeBase64', (str: string) =>\n  Buffer.from(str ?? '').toString('base64'),\n);\n\nhandlebars.registerHelper('stringToPrettyJSON', (input: string): string =>\n  JSON.stringify(JSON.parse(input), null, 2),\n);\n\nhandlebars.registerHelper('toJSON', (input: unknown): string =>\n  JSON.stringify(input),\n);\n\nhandlebars.registerHelper('toArray', (...args: unknown[]): unknown[] => {\n  // Need to remove the 'options', as last parameter\n  // https://handlebarsjs.com/api-reference/helpers.html\n  args.pop();\n  return args;\n});\n\nhandlebars.registerHelper('toObject', (...args: unknown[]): unknown => {\n  // Need to remove the 'options', as last parameter\n  // https://handlebarsjs.com/api-reference/helpers.html\n  args.pop();\n\n  if (args.length % 2 !== 0) {\n    throw new Error(`Must contain an even number of elements`);\n  }\n\n  const keys = args.filter((_, index) => index % 2 === 0);\n  const values = args.filter((_, index) => index % 2 === 1);\n\n  return Object.fromEntries(keys.map((key, index) => [key, values[index]]));\n});\n\nhandlebars.registerHelper('replace', (find, replace, context) =>\n  (context ?? '').replace(regEx(find, 'g'), replace),\n);\n\nhandlebars.registerHelper('lowercase', (str: string) => str?.toLowerCase());\n\nhandlebars.registerHelper('containsString', (str, subStr) =>\n  str?.includes(subStr),\n);\n\nhandlebars.registerHelper('equals', (arg1, arg2) => arg1 === arg2);\n\nhandlebars.registerHelper('includes', (arg1: string[], arg2: string) => {\n  if (is.array(arg1, is.string) && is.string(arg2)) {\n    return arg1.includes(arg2);\n  }\n\n  return false;\n});\n\nhandlebars.registerHelper(\n  'split',\n  (str: unknown, separator: unknown): string[] => {\n    if (is.string(str) && is.string(separator)) {\n      return str.split(separator);\n    }\n    return [];\n  },\n);\n\nhandlebars.registerHelper({\n  and(...args) {\n    // Need to remove the 'options', as last parameter\n    // https://handlebarsjs.com/api-reference/helpers.html\n    args.pop();\n    return args.every(Boolean);\n  },\n  or(...args) {\n    // Need to remove the 'options', as last parameter\n    // https://handlebarsjs.com/api-reference/helpers.html\n    args.pop();\n    return args.some(Boolean);\n  },\n});\n\nhandlebars.registerHelper(\n  'lookupArray',\n  (obj: unknown, key: unknown, options: Options): unknown[] => {\n    return (\n      toArray(obj)\n        // skip elements like #with does\n        .filter((element) => !handlebars.Utils.isEmpty(element))\n        .map((element) => options.lookupProperty(element, key))\n        .filter((value) => value !== undefined)\n    );\n  },\n);\n\nhandlebars.registerHelper('distinct', (obj: unknown): unknown[] => {\n  const seen = new Set<string>();\n\n  return toArray(obj).filter((value) => {\n    const str = JSON.stringify(value);\n\n    if (seen.has(str)) {\n      return false;\n    }\n\n    seen.add(str);\n    return true;\n  });\n});\n\nexport const exposedConfigOptions = [\n  'additionalBranchPrefix',\n  'addLabels',\n  'branchName',\n  'branchPrefix',\n  'branchTopic',\n  'commitBody',\n  'commitMessage',\n  'commitMessageAction',\n  'commitMessageExtra',\n  'commitMessagePrefix',\n  'commitMessageSuffix',\n  'commitMessageTopic',\n  'gitAuthor',\n  'group',\n  'groupName',\n  'groupSlug',\n  'labels',\n  'prBodyColumns',\n  'prBodyDefinitions',\n  'prBodyNotes',\n  'prTitle',\n  'semanticCommitScope',\n  'semanticCommitType',\n  'separateMajorMinor',\n  'separateMinorPatch',\n  'sourceDirectory',\n];\n\nexport const allowedFields = {\n  baseBranch: 'The baseBranch for this branch/PR',\n  body: 'The body of the release notes',\n  categories: 'The categories of the manager of the dependency being updated',\n  currentValue: 'The extracted current value of the dependency being updated',\n  currentVersion:\n    'The version that would be currently installed. For example, if currentValue is ^3.0.0 then currentVersion might be 3.1.0.',\n  currentVersionAgeInDays: 'The age of the current version in days',\n  currentVersionTimestamp: 'The timestamp of the current version',\n  currentDigest: 'The extracted current digest of the dependency being updated',\n  currentDigestShort:\n    'The extracted current short digest of the dependency being updated',\n  datasource: 'The datasource used to look up the upgrade',\n  depName: 'The name of the dependency being updated',\n  depNameLinked:\n    'The dependency name already linked to its home page using markdown',\n  depNameSanitized:\n    'The depName field sanitized for use in branches after removing spaces and special characters',\n  depType: 'The dependency type (if extracted - manager-dependent)',\n  depTypes:\n    'A deduplicated array of dependency types (if extracted - manager-dependent) in a branch',\n  displayFrom: 'The current value, formatted for display',\n  displayPending: 'Latest pending update, if internalChecksFilter is in use',\n  displayTo: 'The to value, formatted for display',\n  hasReleaseNotes: 'true if the upgrade has release notes',\n  indentation: 'The indentation of the dependency being updated',\n  isGroup: 'true if the upgrade is part of a group',\n  isLockfileUpdate: 'true if the branch is a lock file update',\n  isMajor: 'true if the upgrade is major',\n  isMinor: 'true if the upgrade is minor',\n  isPatch: 'true if the upgrade is a patch upgrade',\n  isPin: 'true if the upgrade is pinning dependencies',\n  isPinDigest: 'true if the upgrade is pinning digests',\n  isRollback: 'true if the upgrade is a rollback PR',\n  isReplacement: 'true if the upgrade is a replacement',\n  isRange: 'true if the new value is a range',\n  isSingleVersion:\n    'true if the upgrade is to a single version rather than a range',\n  isVulnerabilityAlert: 'true if the upgrade is a vulnerability alert',\n  logJSON: 'ChangeLogResult object for the upgrade',\n  manager: 'The (package) manager which detected the dependency',\n  newDigest: 'The new digest value',\n  newDigestShort:\n    'A shorted version of newDigest, for use when the full digest is too long to be conveniently displayed',\n  newMajor:\n    'The major version of the new version. e.g. \"3\" if the new version is \"3.1.0\"',\n  newMinor:\n    'The minor version of the new version. e.g. \"1\" if the new version is \"3.1.0\"',\n  newPatch:\n    'The patch version of the new version. e.g. \"0\" if the new version is \"3.1.0\"',\n  newName:\n    'The name of the new dependency that replaces the current deprecated dependency',\n  newValue:\n    'The new value in the upgrade. Can be a range or version e.g. \"^3.0.0\" or \"3.1.0\"',\n  newVersion: 'The new version in the upgrade, e.g. \"3.1.0\"',\n  newVersionAgeInDays: 'The age of the new version in days',\n  packageFile: 'The filename that the dependency was found in',\n  packageFileDir:\n    'The directory with full path where the packageFile was found',\n  packageName: 'The full name that was used to look up the dependency',\n  packageScope: 'The scope of the package name. Supports Maven group ID only',\n  parentDir:\n    'The name of the directory that the dependency was found in, without full path',\n  parentOrg: 'The name of the parent organization for the current repository',\n  platform: 'VCS platform in use, e.g. \"github\", \"gitlab\", etc.',\n  prettyDepType: 'Massaged depType',\n  prettyNewMajor: 'The new major value with v prepended to it.',\n  prettyNewVersion: 'The new version value with v prepended to it.',\n  project: 'ChangeLogProject object',\n  recreateClosed: 'If true, this PR will be recreated if closed',\n  references: 'A list of references for the upgrade',\n  releases: 'An array of releases for an upgrade',\n  releaseNotes: 'A ChangeLogNotes object for the release',\n  releaseTimestamp: 'The timestamp of the release',\n  repository: 'The current repository',\n  semanticPrefix: 'The fully generated semantic prefix for commit messages',\n  sourceRepo: 'The repository in the sourceUrl, if present',\n  sourceRepoName: 'The repository name in the sourceUrl, if present',\n  sourceRepoOrg: 'The repository organization in the sourceUrl, if present',\n  sourceRepoSlug: 'The slugified pathname of the sourceUrl, if present',\n  sourceUrl: 'The source URL for the package',\n  topLevelOrg:\n    'The name of the top-level organization for the current repository',\n  updateType:\n    'One of digest, pin, rollback, patch, minor, major, replacement, pinDigest',\n  upgrades: 'An array of upgrade objects in the branch',\n  url: 'The url of the release notes',\n  version: 'The version number of the changelog',\n  versioning: 'The versioning scheme in use',\n  versions: 'An array of ChangeLogRelease objects in the upgrade',\n  vulnerabilitySeverity:\n    'The severity for a vulnerability alert upgrade (LOW, MEDIUM, MODERATE, HIGH, CRITICAL, UNKNOWN)',\n};\n\ntype CompileInput = Record<string, unknown>;\n\nconst allowedTemplateFields = new Set([\n  ...Object.keys(allowedFields),\n  ...exposedConfigOptions,\n]);\n\nclass CompileInputProxyHandler implements ProxyHandler<CompileInput> {\n  constructor(private warnVariables: Set<string>) {}\n\n  get(target: CompileInput, prop: keyof CompileInput): unknown {\n    if (prop === 'env') {\n      return target[prop];\n    }\n\n    if (!allowedTemplateFields.has(prop)) {\n      this.warnVariables.add(prop);\n      return undefined;\n    }\n\n    const value = target[prop];\n\n    if (prop === 'prBodyDefinitions') {\n      // Expose all prBodyDefinitions.*\n      return value;\n    }\n\n    if (is.array(value)) {\n      return value.map((element) =>\n        is.primitive(element)\n          ? element\n          : proxyCompileInput(element as CompileInput, this.warnVariables),\n      );\n    }\n\n    if (is.plainObject(value)) {\n      return proxyCompileInput(value, this.warnVariables);\n    }\n\n    return value;\n  }\n}\n\nexport function proxyCompileInput(\n  input: CompileInput,\n  warnVariables: Set<string>,\n): CompileInput {\n  return new Proxy<CompileInput>(\n    input,\n    new CompileInputProxyHandler(warnVariables),\n  );\n}\n\nexport function compile(\n  template: string,\n  input: CompileInput,\n  filterFields = true,\n): string {\n  const env = getChildEnv({});\n  const data = { ...GlobalConfig.get(), ...input, env };\n  const warnVariables = new Set<string>();\n  const filteredInput = filterFields\n    ? proxyCompileInput(data, warnVariables)\n    : data;\n\n  logger.trace({ template, filteredInput }, 'Compiling template');\n  const result = handlebars.compile(template)(filteredInput);\n\n  if (warnVariables.size > 0) {\n    logger.info(\n      { varNames: Array.from(warnVariables), template },\n      'Disallowed variable names in template',\n    );\n  }\n\n  return result;\n}\n\nexport function safeCompile(\n  template: string,\n  input: CompileInput,\n  filterFields = true,\n): string {\n  try {\n    return compile(template, input, filterFields);\n  } catch (err) {\n    logger.warn({ err, template }, 'Error compiling template');\n    return '';\n  }\n}\n"]}