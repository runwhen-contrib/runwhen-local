{"version":3,"file":"fetch.js","sourceRoot":"","sources":["../../../../lib/workers/repository/process/fetch.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO #22198\nimport is from '@sindresorhus/is';\nimport { getManagerConfig, mergeChildConfig } from '../../../config';\nimport type { RenovateConfig } from '../../../config/types';\nimport { logger } from '../../../logger';\nimport { getDefaultConfig } from '../../../modules/datasource';\nimport { getDefaultVersioning } from '../../../modules/datasource/common';\nimport type {\n  PackageDependency,\n  PackageFile,\n} from '../../../modules/manager/types';\nimport { ExternalHostError } from '../../../types/errors/external-host-error';\nimport { clone } from '../../../util/clone';\nimport { applyPackageRules } from '../../../util/package-rules';\nimport * as p from '../../../util/promises';\nimport { Result } from '../../../util/result';\nimport { LookupStats } from '../../../util/stats';\nimport { PackageFiles } from '../package-files';\nimport { lookupUpdates } from './lookup';\nimport type { LookupUpdateConfig, UpdateResult } from './lookup/types';\n\ntype LookupResult = Result<PackageDependency, Error>;\n\nasync function lookup(\n  packageFileConfig: RenovateConfig & PackageFile,\n  indep: PackageDependency,\n): Promise<LookupResult> {\n  const dep = clone(indep);\n\n  dep.updates = [];\n\n  if (is.string(dep.depName)) {\n    dep.depName = dep.depName.trim();\n  }\n\n  dep.packageName ??= dep.depName;\n\n  if (dep.skipReason) {\n    return Result.ok(dep);\n  }\n\n  if (!is.nonEmptyString(dep.packageName)) {\n    dep.skipReason = 'invalid-name';\n    return Result.ok(dep);\n  }\n\n  if (dep.isInternal && !packageFileConfig.updateInternalDeps) {\n    dep.skipReason = 'internal-package';\n    return Result.ok(dep);\n  }\n\n  const { depName } = dep;\n  // TODO: fix types\n  let depConfig = mergeChildConfig(packageFileConfig, dep);\n  const datasourceDefaultConfig = await getDefaultConfig(depConfig.datasource!);\n  depConfig = mergeChildConfig(depConfig, datasourceDefaultConfig);\n  depConfig.versioning ??= getDefaultVersioning(depConfig.datasource);\n  depConfig = await applyPackageRules(depConfig, 'pre-lookup');\n  depConfig.packageName ??= depConfig.depName;\n\n  if (depConfig.ignoreDeps!.includes(depName!)) {\n    // TODO: fix types (#22198)\n    logger.debug(`Dependency: ${depName!}, is ignored`);\n    dep.skipReason = 'ignored';\n    return Result.ok(dep);\n  }\n\n  if (depConfig.enabled === false) {\n    logger.debug(`Dependency: ${depName!}, is disabled`);\n    dep.skipReason = 'disabled';\n    return Result.ok(dep);\n  }\n\n  if (!depConfig.datasource) {\n    return Result.ok(dep);\n  }\n\n  return LookupStats.wrap(depConfig.datasource, async () => {\n    return await Result.wrap(lookupUpdates(depConfig as LookupUpdateConfig))\n      .onValue((dep) => {\n        logger.trace({ dep }, 'Dependency lookup success');\n      })\n      .onError((err) => {\n        logger.trace({ err, depName }, 'Dependency lookup error');\n      })\n      .catch((err): Result<UpdateResult, Error> => {\n        if (\n          packageFileConfig.repoIsOnboarded === true ||\n          !(err instanceof ExternalHostError)\n        ) {\n          return Result.err(err);\n        }\n\n        const cause = err.err;\n        return Result.ok({\n          updates: [],\n          warnings: [\n            {\n              topic: 'Lookup Error',\n              message: `${depName}: ${cause.message}`,\n            },\n          ],\n        });\n      })\n      .transform((upd): PackageDependency => Object.assign(dep, upd));\n  });\n}\n\nasync function fetchManagerPackagerFileUpdates(\n  config: RenovateConfig,\n  managerConfig: RenovateConfig,\n  pFile: PackageFile,\n): Promise<void> {\n  const { packageFile } = pFile;\n  const packageFileConfig = mergeChildConfig(managerConfig, pFile);\n  if (pFile.extractedConstraints) {\n    packageFileConfig.constraints = {\n      ...pFile.extractedConstraints,\n      ...config.constraints,\n    };\n  }\n  const { manager } = packageFileConfig;\n  const queue = pFile.deps.map(\n    (dep) => async (): Promise<PackageDependency> => {\n      const updates = await lookup(packageFileConfig, dep);\n      return updates.unwrapOrThrow();\n    },\n  );\n  logger.trace(\n    { manager, packageFile, queueLength: queue.length },\n    'fetchManagerPackagerFileUpdates starting with concurrency',\n  );\n\n  pFile.deps = await p.all(queue);\n  logger.trace({ packageFile }, 'fetchManagerPackagerFileUpdates finished');\n}\n\nasync function fetchManagerUpdates(\n  config: RenovateConfig,\n  packageFiles: Record<string, PackageFile[]>,\n  manager: string,\n): Promise<void> {\n  const managerConfig = getManagerConfig(config, manager);\n  const queue = packageFiles[manager].map(\n    (pFile) => (): Promise<void> =>\n      fetchManagerPackagerFileUpdates(config, managerConfig, pFile),\n  );\n  logger.trace(\n    { manager, queueLength: queue.length },\n    'fetchManagerUpdates starting',\n  );\n  await p.all(queue);\n  logger.trace({ manager }, 'fetchManagerUpdates finished');\n}\n\nexport async function fetchUpdates(\n  config: RenovateConfig,\n  packageFiles: Record<string, PackageFile[]>,\n): Promise<void> {\n  const managers = Object.keys(packageFiles);\n  const allManagerJobs = managers.map((manager) =>\n    fetchManagerUpdates(config, packageFiles, manager),\n  );\n  await Promise.all(allManagerJobs);\n  PackageFiles.add(config.baseBranch!, { ...packageFiles });\n  logger.debug(\n    { baseBranch: config.baseBranch },\n    'Package releases lookups complete',\n  );\n}\n"]}