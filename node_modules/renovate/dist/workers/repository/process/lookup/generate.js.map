{"version":3,"file":"generate.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/process/lookup/generate.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { logger } from '../../../../logger';\nimport type { Release } from '../../../../modules/datasource';\nimport type { LookupUpdate } from '../../../../modules/manager/types';\nimport type { VersioningApi } from '../../../../modules/versioning';\nimport type { RangeStrategy } from '../../../../types';\nimport { getElapsedDays } from '../../../../util/date';\nimport { getMergeConfidenceLevel } from '../../../../util/merge-confidence';\nimport type { LookupUpdateConfig } from './types';\nimport { getUpdateType } from './update-type';\n\nexport async function generateUpdate(\n  config: LookupUpdateConfig,\n  currentValue: string | undefined,\n  versioningApi: VersioningApi,\n  rangeStrategy: RangeStrategy,\n  currentVersion: string,\n  bucket: string,\n  release: Release,\n): Promise<LookupUpdate> {\n  const newVersion = release.version;\n  const update: LookupUpdate = {\n    bucket,\n    newVersion,\n    newValue: null!,\n  };\n\n  // istanbul ignore if\n  if (release.checksumUrl !== undefined) {\n    update.checksumUrl = release.checksumUrl;\n  }\n  // istanbul ignore if\n  if (release.downloadUrl !== undefined) {\n    update.downloadUrl = release.downloadUrl;\n  }\n  // istanbul ignore if\n  if (release.newDigest !== undefined) {\n    update.newDigest = release.newDigest;\n  }\n  // istanbul ignore if\n  if (release.releaseTimestamp) {\n    update.releaseTimestamp = release.releaseTimestamp;\n    update.newVersionAgeInDays = getElapsedDays(release.releaseTimestamp);\n  }\n  // istanbul ignore if\n  if (release.registryUrl !== undefined) {\n    /**\n     * This means:\n     *  - registry strategy is set to merge\n     *  - releases were fetched from multiple registry urls\n     */\n    update.registryUrl = release.registryUrl;\n  }\n\n  if (currentValue) {\n    try {\n      update.newValue = versioningApi.getNewValue({\n        currentValue,\n        rangeStrategy,\n        currentVersion,\n        newVersion,\n      })!;\n    } catch (err) /* istanbul ignore next */ {\n      logger.warn(\n        { err, currentValue, rangeStrategy, currentVersion, newVersion },\n        'getNewValue error',\n      );\n      update.newValue = currentValue;\n    }\n  } else {\n    update.newValue = currentValue;\n  }\n  update.newMajor = versioningApi.getMajor(newVersion)!;\n  update.newMinor = versioningApi.getMinor(newVersion)!;\n  update.newPatch = versioningApi.getPatch(newVersion)!;\n  // istanbul ignore if\n  if (!update.updateType && !currentVersion) {\n    logger.debug({ update }, 'Update has no currentVersion');\n    update.newValue = currentValue!;\n    return update;\n  }\n  update.updateType =\n    update.updateType ??\n    getUpdateType(config, versioningApi, currentVersion, newVersion);\n  const { datasource, packageName, packageRules } = config;\n  if (packageRules?.some((pr) => is.nonEmptyArray(pr.matchConfidence))) {\n    update.mergeConfidenceLevel = await getMergeConfidenceLevel(\n      datasource,\n      packageName,\n      currentVersion,\n      newVersion,\n      update.updateType,\n    );\n  }\n  if (!versioningApi.isVersion(update.newValue)) {\n    update.isRange = true;\n  }\n  if (rangeStrategy === 'update-lockfile' && currentValue === update.newValue) {\n    update.isLockfileUpdate = true;\n  }\n  if (\n    rangeStrategy === 'bump' &&\n    // TODO #22198\n    versioningApi.matches(newVersion, currentValue!)\n  ) {\n    update.isBump = true;\n  }\n  return update;\n}\n"]}