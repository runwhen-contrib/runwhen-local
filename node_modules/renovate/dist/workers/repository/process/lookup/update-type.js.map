{"version":3,"file":"update-type.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/process/lookup/update-type.ts"],"names":[],"mappings":";;AAUA,sCAyBC;AAzBD,SAAgB,aAAa,CAC3B,MAAwB,EACxB,aAA0C,EAC1C,cAAsB,EACtB,UAAkB;IAElB,IACE,aAAa,CAAC,MAAM;QACpB,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE,UAAU,EAAE,cAAc,CAAC,EAC1D,CAAC;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,IACE,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAE;QACnC,aAAa,CAAC,QAAQ,CAAC,cAAc,CAAE,EACvC,CAAC;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,IACE,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAE;QACnC,aAAa,CAAC,QAAQ,CAAC,cAAc,CAAE,EACvC,CAAC;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["import type { UpdateType } from '../../../../config/types';\nimport type * as allVersioning from '../../../../modules/versioning';\n\nexport interface UpdateTypeConfig {\n  separateMajorMinor?: boolean;\n  separateMultipleMajor?: boolean;\n  separateMultipleMinor?: boolean;\n  separateMinorPatch?: boolean;\n}\n\nexport function getUpdateType(\n  config: UpdateTypeConfig,\n  versioningApi: allVersioning.VersioningApi,\n  currentVersion: string,\n  newVersion: string,\n): UpdateType {\n  if (\n    versioningApi.isSame &&\n    !versioningApi.isSame('major', newVersion, currentVersion)\n  ) {\n    return 'major';\n  }\n  if (\n    versioningApi.getMajor(newVersion)! >\n    versioningApi.getMajor(currentVersion)!\n  ) {\n    return 'major';\n  }\n  if (\n    versioningApi.getMinor(newVersion)! >\n    versioningApi.getMinor(currentVersion)!\n  ) {\n    return 'minor';\n  }\n  return 'patch';\n}\n"]}