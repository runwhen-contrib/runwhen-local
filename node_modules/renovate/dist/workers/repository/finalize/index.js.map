{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/workers/repository/finalize/index.ts"],"names":[],"mappings":";;AAcA,oCAyBC;;AAtCD,4CAAyC;AACzC,wDAAqD;AACrD,wFAAkE;AAClE,2CAAsD;AACtD,oDAAgD;AAChD,gDAAwD;AACxD,mCAA6C;AAC7C,mEAGiC;AAEjC,uBAAuB;AAChB,KAAK,UAAU,YAAY,CAChC,MAAsB,EACtB,UAAoB;IAEpB,MAAM,IAAA,oCAAsB,EAAC,MAAM,CAAC,CAAC;IACrC,MAAM,eAAe,CAAC,SAAS,EAAE,CAAC;IAClC,MAAM,IAAA,0BAAkB,EAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IAC7C,MAAM,mBAAmB,EAAE,CAAC;IAC5B,MAAM,IAAA,uBAAiB,GAAE,CAAC;IAC1B,4BAAY,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,MAAM,GAAG,MAAM,mBAAQ,CAAC,SAAS,EAAE,CAAC;IAC1C,IACE,MAAM,EAAE,IAAI,CACV,CAAC,EAAE,EAAE,EAAE,CACL,EAAE,CAAC,KAAK,KAAK,QAAQ;QACrB,EAAE,CAAC,KAAK,KAAK,oBAAoB;QACjC,EAAE,CAAC,KAAK,KAAK,MAAM,CAAC,iBAAiB;QACrC,EAAE,CAAC,YAAY,KAAK,MAAM,CAAC,gBAAgB,CAC9C,EACD,CAAC;QACD,eAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAClC,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC;IACD,IAAA,wCAAgB,EAAC,MAAM,CAAC,CAAC;IACzB,IAAA,4CAAoB,EAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACvC,CAAC;AAED,uBAAuB;AACvB,SAAS,mBAAmB;IAC1B,OAAO,OAAO,CAAC,GAAG,CAAC;QACjB,mBAAQ,CAAC,kBAAkB,CAAC,6CAA6C,CAAC;QAC1E,mBAAQ,CAAC,kBAAkB,CAAC,0CAA0C,CAAC;KACxE,CAAC,CAAC;AACL,CAAC","sourcesContent":["import type { RenovateConfig } from '../../../config/types';\nimport { logger } from '../../../logger';\nimport { platform } from '../../../modules/platform';\nimport * as repositoryCache from '../../../util/cache/repository';\nimport { clearRenovateRefs } from '../../../util/git';\nimport { PackageFiles } from '../package-files';\nimport { checkReconfigureBranch } from '../reconfigure';\nimport { pruneStaleBranches } from './prune';\nimport {\n  runBranchSummary,\n  runRenovateRepoStats,\n} from './repository-statistics';\n\n// istanbul ignore next\nexport async function finalizeRepo(\n  config: RenovateConfig,\n  branchList: string[],\n): Promise<void> {\n  await checkReconfigureBranch(config);\n  await repositoryCache.saveCache();\n  await pruneStaleBranches(config, branchList);\n  await ensureIssuesClosing();\n  await clearRenovateRefs();\n  PackageFiles.clear();\n  const prList = await platform.getPrList();\n  if (\n    prList?.some(\n      (pr) =>\n        pr.state === 'merged' &&\n        pr.title !== 'Configure Renovate' &&\n        pr.title !== config.onboardingPrTitle &&\n        pr.sourceBranch !== config.onboardingBranch,\n    )\n  ) {\n    logger.debug('Repo is activated');\n    config.repoIsActivated = true;\n  }\n  runBranchSummary(config);\n  runRenovateRepoStats(config, prList);\n}\n\n// istanbul ignore next\nfunction ensureIssuesClosing(): Promise<Awaited<void>[]> {\n  return Promise.all([\n    platform.ensureIssueClosing(`Action Required: Fix Renovate Configuration`),\n    platform.ensureIssueClosing(`Action Required: Add missing credentials`),\n  ]);\n}\n"]}