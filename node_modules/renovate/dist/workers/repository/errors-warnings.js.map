{"version":3,"file":"errors-warnings.js","sourceRoot":"","sources":["../../../lib/workers/repository/errors-warnings.ts"],"names":[],"mappings":";;AASA,kCAWC;AAED,8BAWC;AA+BD,gEAsBC;AAED,4CAqBC;AAED,0DA2BC;AAxID,yCAAsC;AAEtC,4CAA+C;AAC/C,4CAA2C;AAC3C,4CAAyC;AAGzC,SAAgB,WAAW,CAAC,MAAsB;IAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC;QAC7B,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,IAAI,WAAW,GAAG,iBAAiB,MAAM,CAAC,QAAQ,CAAC,MAAM,OAAO,CAAC;IACjE,WAAW,IAAI,sGAAsG,CAAC;IACtH,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;QAChC,WAAW,IAAI,SAAS,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC;IACtD,CAAC;IACD,WAAW,IAAI,SAAS,CAAC;IACzB,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,SAAgB,SAAS,CAAC,MAAsB;IAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC;QAC3B,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,IAAI,SAAS,GAAG,eAAe,MAAM,CAAC,MAAM,CAAC,MAAM,OAAO,CAAC;IAC3D,SAAS,IAAI,8FAA8F,CAAC;IAC5G,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;QAC9B,SAAS,IAAI,SAAS,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC;IACpD,CAAC;IACD,SAAS,IAAI,SAAS,CAAC;IACvB,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,cAAc,CACrB,YAA2C;IAE3C,MAAM,QAAQ,GAAa,EAAE,CAAC;IAC9B,MAAM,YAAY,GAAa,EAAE,CAAC;IAClC,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE,CAAC,EAAE,CAAC;QACtD,KAAK,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE,EAAE,CAAC;YAC/B,qDAAqD;YACrD,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,KAAK,MAAM,GAAG,IAAI,IAAA,mBAAW,EAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBACzC,KAAK,MAAM,CAAC,IAAI,IAAA,mBAAW,EAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAC1C,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;wBAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;4BAChC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzB,CAAC;wBACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;4BAC7C,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;wBACtC,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IACD,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpB,eAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,yBAAyB,CAAC,CAAC;IAC5E,CAAC;IACD,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;AACpC,CAAC;AAED,SAAgB,0BAA0B,CACxC,YAA2C,EAC3C,MAAsB;IAEtB,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;IAChE,IAAI,MAAM,CAAC,qBAAqB,EAAE,QAAQ,CAAC,0BAA0B,CAAC,EAAE,CAAC;QACvE,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,IAAI,WAAW,GAAG,EAAE,CAAC;IACrB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,WAAW,GAAG,IAAA,eAAO,EAAC,0CAA0C,CAAC,CAAC;IAClE,WAAW,IAAI,4HAA4H,CAAC;IAC5I,KAAK,MAAM,CAAC,IAAI,QAAQ,EAAE,CAAC;QACzB,WAAW,IAAI,WAAW,CAAC,MAAM,CAAC;IACpC,CAAC;IACD,WAAW;QACT,wBAAwB;YACxB,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACjD,MAAM,CAAC;IACT,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,SAAgB,gBAAgB,CAC9B,YAA2C,EAC3C,MAAsB,EACtB,mBAA6B;IAE7B,MAAM,EAAE,QAAQ,EAAE,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;IAClD,IAAI,MAAM,CAAC,qBAAqB,EAAE,QAAQ,CAAC,0BAA0B,CAAC,EAAE,CAAC;QACvE,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,IAAI,WAAW,GAAG,EAAE,CAAC;IACrB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,WAAW,GAAG,IAAA,eAAO,EAAC,wCAAwC,CAAC,CAAC;IAChE,WAAW,IAAI,8CAA8C,CAAC;IAC9D,IAAI,mBAAmB,EAAE,CAAC;QACxB,WAAW,IAAI,0DAA0D,CAAC;IAC5E,CAAC;SAAM,CAAC;QACN,WAAW,IAAI,kDAAkD,CAAC;IACpE,CAAC;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,SAAgB,uBAAuB,CACrC,YAA2C,EAC3C,MAAsB;IAEtB,IAAI,MAAM,CAAC,qBAAqB,EAAE,QAAQ,CAAC,0BAA0B,CAAC,EAAE,CAAC;QACvE,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;IAChE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,MAAM,WAAW,GAAG,QAAQ;SACzB,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CACT,CAAC,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,4CAA4C,CAAC,EAAE,EAAE,CAAC,CACnE;SACA,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SAC7B,IAAI,CAAC,IAAI,CAAC,CAAC;IAEd,IAAI,WAAW,GAAG,IAAA,eAAO,EACvB,iGAAiG,CAClG,CAAC;IACF,WAAW,IAAI,WAAW,CAAC;IAC3B,WAAW,IAAI,2BAA2B,CAAC;IAC3C,WAAW,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjE,WAAW,IAAI,aAAa,CAAC;IAC7B,OAAO,WAAW,CAAC;AACrB,CAAC","sourcesContent":["// TODO #22198\nimport type { RenovateConfig } from '../../config/types';\nimport { logger } from '../../logger';\nimport type { PackageFile } from '../../modules/manager/types';\nimport { coerceArray } from '../../util/array';\nimport { emojify } from '../../util/emoji';\nimport { regEx } from '../../util/regex';\nimport type { DepWarnings } from '../types';\n\nexport function getWarnings(config: RenovateConfig): string {\n  if (!config.warnings?.length) {\n    return '';\n  }\n  let warningText = `\\n# Warnings (${config.warnings.length})\\n\\n`;\n  warningText += `Please correct - or verify that you can safely ignore - these warnings before you merge this PR.\\n\\n`;\n  for (const w of config.warnings) {\n    warningText += `-   \\`${w.topic}\\`: ${w.message}\\n`;\n  }\n  warningText += '\\n---\\n';\n  return warningText;\n}\n\nexport function getErrors(config: RenovateConfig): string {\n  if (!config.errors?.length) {\n    return '';\n  }\n  let errorText = `\\n# Errors (${config.errors.length})\\n\\n`;\n  errorText += `Renovate has found errors that you should fix (in this branch) before finishing this PR.\\n\\n`;\n  for (const e of config.errors) {\n    errorText += `-   \\`${e.topic}\\`: ${e.message}\\n`;\n  }\n  errorText += '\\n---\\n';\n  return errorText;\n}\n\nfunction getDepWarnings(\n  packageFiles: Record<string, PackageFile[]>,\n): DepWarnings {\n  const warnings: string[] = [];\n  const warningFiles: string[] = [];\n  for (const files of Object.values(packageFiles ?? {})) {\n    for (const file of files ?? []) {\n      // TODO: remove condition when type is fixed (#22198)\n      if (file.packageFile) {\n        for (const dep of coerceArray(file.deps)) {\n          for (const w of coerceArray(dep.warnings)) {\n            const message = w.message;\n            if (!warnings.includes(message)) {\n              warnings.push(message);\n            }\n            if (!warningFiles.includes(file.packageFile)) {\n              warningFiles.push(file.packageFile);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (warnings.length) {\n    logger.warn({ warnings, files: warningFiles }, 'Package lookup failures');\n  }\n  return { warnings, warningFiles };\n}\n\nexport function getDepWarningsOnboardingPR(\n  packageFiles: Record<string, PackageFile[]>,\n  config: RenovateConfig,\n): string {\n  const { warnings, warningFiles } = getDepWarnings(packageFiles);\n  if (config.suppressNotifications?.includes('dependencyLookupWarnings')) {\n    return '';\n  }\n  let warningText = '';\n  if (!warnings.length) {\n    return '';\n  }\n  warningText = emojify(`\\n---\\n> \\n> :warning: **Warning**\\n> \\n`);\n  warningText += `> Please correct - or verify that you can safely ignore - these dependency lookup failures before you merge this PR.\\n> \\n`;\n  for (const w of warnings) {\n    warningText += `> -   \\`${w}\\`\\n`;\n  }\n  warningText +=\n    '> \\n> Files affected: ' +\n    warningFiles.map((f) => '`' + f + '`').join(', ') +\n    '\\n\\n';\n  return warningText;\n}\n\nexport function getDepWarningsPR(\n  packageFiles: Record<string, PackageFile[]>,\n  config: RenovateConfig,\n  dependencyDashboard?: boolean,\n): string {\n  const { warnings } = getDepWarnings(packageFiles);\n  if (config.suppressNotifications?.includes('dependencyLookupWarnings')) {\n    return '';\n  }\n  let warningText = '';\n  if (!warnings.length) {\n    return '';\n  }\n  warningText = emojify(`\\n---\\n\\n> :warning: **Warning**\\n> \\n`);\n  warningText += '> Some dependencies could not be looked up. ';\n  if (dependencyDashboard) {\n    warningText += `Check the Dependency Dashboard for more information.\\n\\n`;\n  } else {\n    warningText += `Check the warning logs for more information.\\n\\n`;\n  }\n  return warningText;\n}\n\nexport function getDepWarningsDashboard(\n  packageFiles: Record<string, PackageFile[]>,\n  config: RenovateConfig,\n): string {\n  if (config.suppressNotifications?.includes('dependencyLookupWarnings')) {\n    return '';\n  }\n  const { warnings, warningFiles } = getDepWarnings(packageFiles);\n  if (!warnings.length) {\n    return '';\n  }\n\n  const depWarnings = warnings\n    .map((w) =>\n      w.replace(regEx(/^Failed to look up(?: [-\\w]+)? dependency /), ''),\n    )\n    .map((dep) => '`' + dep + '`')\n    .join(', ');\n\n  let warningText = emojify(\n    `\\n---\\n\\n> :warning: **Warning**\\n> \\n> Renovate failed to look up the following dependencies: `,\n  );\n  warningText += depWarnings;\n  warningText += '.\\n> \\n> Files affected: ';\n  warningText += warningFiles.map((f) => '`' + f + '`').join(', ');\n  warningText += '\\n\\n---\\n\\n';\n  return warningText;\n}\n"]}