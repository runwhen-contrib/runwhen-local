{"version":3,"file":"error.js","sourceRoot":"","sources":["../../../lib/workers/repository/error.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RenovateConfig } from '../../config/types';\n\nimport {\n  CONFIG_SECRETS_EXPOSED,\n  CONFIG_VALIDATION,\n  EXTERNAL_HOST_ERROR,\n  MANAGER_LOCKFILE_ERROR,\n  MISSING_API_CREDENTIALS,\n  NO_VULNERABILITY_ALERTS,\n  PLATFORM_AUTHENTICATION_ERROR,\n  PLATFORM_BAD_CREDENTIALS,\n  PLATFORM_INTEGRATION_UNAUTHORIZED,\n  PLATFORM_RATE_LIMIT_EXCEEDED,\n  REPOSITORY_ACCESS_FORBIDDEN,\n  REPOSITORY_ARCHIVED,\n  REPOSITORY_BLOCKED,\n  REPOSITORY_CANNOT_FORK,\n  REPOSITORY_CHANGED,\n  REPOSITORY_CLOSED_ONBOARDING,\n  REPOSITORY_DISABLED,\n  REPOSITORY_DISABLED_BY_CONFIG,\n  REPOSITORY_EMPTY,\n  REPOSITORY_FORKED,\n  REPOSITORY_FORK_MISSING,\n  REPOSITORY_FORK_MODE_FORKED,\n  REPOSITORY_MIRRORED,\n  REPOSITORY_NOT_FOUND,\n  REPOSITORY_NO_CONFIG,\n  REPOSITORY_NO_PACKAGE_FILES,\n  REPOSITORY_RENAMED,\n  REPOSITORY_UNINITIATED,\n  SYSTEM_INSUFFICIENT_DISK_SPACE,\n  SYSTEM_INSUFFICIENT_MEMORY,\n  TEMPORARY_ERROR,\n  UNKNOWN_ERROR,\n} from '../../constants/error-messages';\nimport { logger } from '../../logger';\nimport { ExternalHostError } from '../../types/errors/external-host-error';\nimport {\n  raiseConfigWarningIssue,\n  raiseCredentialsWarningIssue,\n} from './error-config';\n\nexport default async function handleError(\n  config: RenovateConfig,\n  err: Error,\n): Promise<string> {\n  if (err.message === REPOSITORY_UNINITIATED) {\n    logger.info('Repository is uninitiated - skipping');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === REPOSITORY_EMPTY) {\n    logger.info('Repository is empty - skipping');\n    delete config.branchList;\n    return err.message;\n  }\n  const disabledMessages = [\n    REPOSITORY_CLOSED_ONBOARDING,\n    REPOSITORY_DISABLED,\n    REPOSITORY_DISABLED_BY_CONFIG,\n    REPOSITORY_NO_CONFIG,\n  ];\n  if (disabledMessages.includes(err.message)) {\n    logger.info('Repository is disabled - skipping');\n    return err.message;\n  }\n  if (err.message === REPOSITORY_ARCHIVED) {\n    logger.info('Repository is archived - skipping');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === REPOSITORY_MIRRORED) {\n    logger.info('Repository is a mirror - skipping');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === REPOSITORY_RENAMED) {\n    logger.info('Repository has been renamed - skipping');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === REPOSITORY_BLOCKED) {\n    delete config.branchList;\n    logger.info('Repository is blocked - skipping');\n    return err.message;\n  }\n  if (err.message === REPOSITORY_ACCESS_FORBIDDEN) {\n    delete config.branchList;\n    logger.info('Repository is forbidden');\n    return err.message;\n  }\n  if (err.message === REPOSITORY_NOT_FOUND) {\n    delete config.branchList;\n    logger.error('Repository is not found');\n    return err.message;\n  }\n  if (err.message === REPOSITORY_FORK_MODE_FORKED) {\n    logger.info(\n      'Repository is a fork and cannot be processed when Renovate is running in fork mode itself',\n    );\n    return err.message;\n  }\n  if (err.message === REPOSITORY_FORKED) {\n    logger.info(\n      'Repository is a fork and not manually configured - skipping - did you want to run with --fork-processing=enabled?',\n    );\n    return err.message;\n  }\n  if (err.message === REPOSITORY_CANNOT_FORK) {\n    logger.info('Cannot fork repository - skipping');\n    return err.message;\n  }\n  if (err.message === REPOSITORY_FORK_MISSING) {\n    logger.info('Cannot find fork required for fork mode - skipping');\n    return err.message;\n  }\n  if (err.message === REPOSITORY_NO_PACKAGE_FILES) {\n    logger.info('Repository has no package files - skipping');\n    return err.message;\n  }\n  if (err.message === NO_VULNERABILITY_ALERTS) {\n    logger.info('Repository has no vulnerability alerts - skipping');\n    return err.message;\n  }\n  if (err.message === REPOSITORY_CHANGED) {\n    logger.info('Repository has changed during renovation - aborting');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === CONFIG_VALIDATION) {\n    delete config.branchList;\n    logger.info({ error: err }, 'Repository has invalid config');\n    await raiseConfigWarningIssue(config, err);\n    return err.message;\n  }\n  if (err.message === MISSING_API_CREDENTIALS) {\n    delete config.branchList;\n    logger.info({ error: err }, MISSING_API_CREDENTIALS);\n    await raiseCredentialsWarningIssue(config, err);\n    return err.message;\n  }\n  if (err.message === CONFIG_SECRETS_EXPOSED) {\n    delete config.branchList;\n    logger.warn(\n      { error: err },\n      'Repository aborted due to potential secrets exposure',\n    );\n    return err.message;\n  }\n  if (err instanceof ExternalHostError) {\n    logger.warn(\n      { hostType: err.hostType, packageName: err.packageName, err: err.err },\n      'Host error',\n    );\n    logger.info('External host error causing abort - skipping');\n    delete config.branchList;\n    return err.message;\n  }\n  if (\n    err.message.includes('No space left on device') ||\n    err.message === SYSTEM_INSUFFICIENT_DISK_SPACE\n  ) {\n    logger.error('Disk space error - skipping');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === PLATFORM_RATE_LIMIT_EXCEEDED) {\n    logger.warn('Rate limit exceeded - aborting');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === SYSTEM_INSUFFICIENT_MEMORY) {\n    logger.warn('Insufficient memory - aborting');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === PLATFORM_BAD_CREDENTIALS) {\n    logger.warn('Bad credentials - aborting');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === PLATFORM_INTEGRATION_UNAUTHORIZED) {\n    logger.warn('Integration unauthorized - aborting');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === PLATFORM_AUTHENTICATION_ERROR) {\n    logger.warn('Authentication error - aborting');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === TEMPORARY_ERROR) {\n    logger.info('Temporary error - aborting');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message === MANAGER_LOCKFILE_ERROR) {\n    delete config.branchList;\n    logger.info('Lock file error - aborting');\n    delete config.branchList;\n    return err.message;\n  }\n  if (err.message.includes('The requested URL returned error: 5')) {\n    logger.warn({ err }, 'Git error - aborting');\n    delete config.branchList;\n    // rewrite this error\n    return EXTERNAL_HOST_ERROR;\n  }\n  if (\n    err.message.includes('remote end hung up unexpectedly') ||\n    err.message.includes('access denied or repository not exported')\n  ) {\n    logger.warn({ err }, 'Git error - aborting');\n    delete config.branchList;\n    // rewrite this error\n    return EXTERNAL_HOST_ERROR;\n  }\n  if (err.message.includes('fatal: not a git repository')) {\n    delete config.branchList;\n    return TEMPORARY_ERROR;\n  }\n  // Swallow this error so that other repositories can be processed\n  logger.error({ err }, `Repository has unknown error`);\n  // delete branchList to avoid cleaning up branches\n  delete config.branchList;\n\n  return UNKNOWN_ERROR;\n}\n"]}