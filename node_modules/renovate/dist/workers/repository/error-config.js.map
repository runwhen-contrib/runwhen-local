{"version":3,"file":"error-config.js","sourceRoot":"","sources":["../../../lib/workers/repository/error-config.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO #22198\nimport { GlobalConfig } from '../../config/global';\nimport type { RenovateConfig } from '../../config/types';\nimport { logger } from '../../logger';\nimport type { Pr } from '../../modules/platform';\nimport { platform } from '../../modules/platform';\n\nexport function raiseConfigWarningIssue(\n  config: RenovateConfig,\n  error: Error,\n): Promise<void> {\n  logger.debug('raiseConfigWarningIssue()');\n  const title = `Action Required: Fix Renovate Configuration`;\n  const body = `There is an error with this repository's Renovate configuration that needs to be fixed. As a precaution, Renovate will stop PRs until it is resolved.\\n\\n`;\n  const notificationName = 'configErrorIssue';\n  return raiseWarningIssue(config, notificationName, title, body, error);\n}\n\nexport function raiseCredentialsWarningIssue(\n  config: RenovateConfig,\n  error: Error,\n): Promise<void> {\n  logger.debug('raiseCredentialsWarningIssue()');\n  const title = `Action Required: Add missing credentials`;\n  const body = `There are missing credentials for the authentication-required feature. As a precaution, Renovate will pause PRs until it is resolved.\\n\\n`;\n  const notificationName = 'missingCredentialsError';\n  return raiseWarningIssue(config, notificationName, title, body, error);\n}\n\nasync function raiseWarningIssue(\n  config: RenovateConfig,\n  notificationName: string,\n  title: string,\n  initialBody: string,\n  error: Error,\n): Promise<void> {\n  if (config.mode === 'silent') {\n    logger.debug(\n      `Config warning issues are not created, updated or closed when mode=silent`,\n    );\n    return;\n  }\n  let body = initialBody;\n  if (error.validationSource) {\n    body += `Location: \\`${error.validationSource}\\`\\n`;\n  }\n  if (error.validationError) {\n    body += `Error type: ${error.validationError}\\n`;\n  }\n  if (error.validationMessage) {\n    body += `Message: ${error.validationMessage}\\n`;\n  }\n\n  const pr = await platform.getBranchPr(\n    config.onboardingBranch!,\n    config.baseBranch,\n  );\n  if (pr?.state === 'open') {\n    await handleOnboardingPr(pr, body);\n    return;\n  }\n\n  if (GlobalConfig.get('dryRun')) {\n    logger.info(\n      { configError: error },\n      'DRY-RUN: Would ensure configuration error issue',\n    );\n    return;\n  }\n\n  if (config.suppressNotifications?.includes(notificationName)) {\n    logger.info(\n      { notificationName },\n      'Configuration failure, issues will be suppressed',\n    );\n    return;\n  }\n\n  const res = await platform.ensureIssue({\n    title,\n    body,\n    once: false,\n    shouldReOpen: config.configWarningReuseIssue,\n    confidential: config.confidential,\n  });\n  if (res === 'created') {\n    logger.warn({ configError: error, res }, 'Configuration Warning');\n  }\n}\n\nasync function handleOnboardingPr(pr: Pr, issueMessage: string): Promise<void> {\n  logger.debug('Updating onboarding PR with config error notice');\n  if (GlobalConfig.get('dryRun')) {\n    logger.info(`DRY-RUN: Would update PR #${pr.number}`);\n    return;\n  }\n\n  let prBody = `## Action Required: Fix Renovate Configuration\\n\\n${issueMessage}`;\n  prBody += `\\n\\nOnce you have resolved this problem (in this onboarding branch), Renovate will return to providing you with a preview of your repository's configuration.`;\n\n  try {\n    await platform.updatePr({\n      number: pr.number,\n      prTitle: pr.title,\n      prBody,\n    });\n  } catch (err) /* istanbul ignore next */ {\n    logger.warn({ err }, 'Error updating onboarding PR');\n  }\n}\n"]}