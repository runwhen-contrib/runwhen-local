{"version":3,"file":"inherited.js","sourceRoot":"","sources":["../../../../lib/workers/repository/init/inherited.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { dequal } from 'dequal';\nimport { mergeChildConfig, removeGlobalConfig } from '../../../config';\nimport { parseFileConfig } from '../../../config/parse';\nimport { resolveConfigPresets } from '../../../config/presets';\nimport { applySecretsToConfig } from '../../../config/secrets';\nimport type { RenovateConfig } from '../../../config/types';\nimport { validateConfig } from '../../../config/validation';\nimport {\n  CONFIG_INHERIT_NOT_FOUND,\n  CONFIG_INHERIT_PARSE_ERROR,\n  CONFIG_VALIDATION,\n} from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { platform } from '../../../modules/platform';\nimport * as hostRules from '../../../util/host-rules';\nimport * as queue from '../../../util/http/queue';\nimport * as throttle from '../../../util/http/throttle';\nimport * as template from '../../../util/template';\n\nexport async function mergeInheritedConfig(\n  config: RenovateConfig,\n): Promise<RenovateConfig> {\n  // typescript doesn't know that repo is defined\n  if (!config.repository || !config.inheritConfig) {\n    return config;\n  }\n  if (\n    !is.string(config.inheritConfigRepoName) ||\n    !is.string(config.inheritConfigFileName)\n  ) {\n    // Config validation should prevent this error\n    logger.error(\n      {\n        inheritConfigRepoName: config.inheritConfigRepoName,\n        inheritConfigFileName: config.inheritConfigFileName,\n      },\n      'Invalid inherited config.',\n    );\n    return config;\n  }\n  const templateConfig = {\n    topLevelOrg: config.topLevelOrg,\n    parentOrg: config.parentOrg,\n    repository: config.repository,\n  };\n  const inheritConfigRepoName = template.compile(\n    config.inheritConfigRepoName,\n    templateConfig,\n    false,\n  );\n  logger.trace(\n    { templateConfig, inheritConfigRepoName },\n    'Compiled inheritConfigRepoName result.',\n  );\n  logger.debug(\n    `Checking for inherited config file ${config.inheritConfigFileName} in repo ${inheritConfigRepoName}.`,\n  );\n  let configFileRaw: string | null = null;\n  try {\n    configFileRaw = await platform.getRawFile(\n      config.inheritConfigFileName,\n      inheritConfigRepoName,\n    );\n  } catch (err) {\n    if (config.inheritConfigStrict) {\n      logger.debug({ err }, 'Error getting inherited config.');\n      throw new Error(CONFIG_INHERIT_NOT_FOUND);\n    }\n    logger.trace({ err }, `Error getting inherited config.`);\n  }\n  if (!configFileRaw) {\n    logger.debug(`No inherited config found in ${inheritConfigRepoName}.`);\n    return config;\n  }\n  const parseResult = parseFileConfig(\n    config.inheritConfigFileName,\n    configFileRaw,\n  );\n  if (!parseResult.success) {\n    logger.debug({ parseResult }, 'Error parsing inherited config.');\n    throw new Error(CONFIG_INHERIT_PARSE_ERROR);\n  }\n  const inheritedConfig = parseResult.parsedContents as RenovateConfig;\n  logger.debug({ config: inheritedConfig }, `Inherited config`);\n  const res = await validateConfig('inherit', inheritedConfig);\n  if (res.errors.length) {\n    logger.warn(\n      { errors: res.errors },\n      'Found errors in inherited configuration.',\n    );\n    throw new Error(CONFIG_VALIDATION);\n  }\n  if (res.warnings.length) {\n    logger.warn(\n      { warnings: res.warnings },\n      'Found warnings in inherited configuration.',\n    );\n  }\n  let filteredConfig = removeGlobalConfig(inheritedConfig, true);\n  if (!dequal(inheritedConfig, filteredConfig)) {\n    logger.debug(\n      { inheritedConfig, filteredConfig },\n      'Removed global config from inherited config.',\n    );\n  }\n\n  if (is.nullOrUndefined(filteredConfig.extends)) {\n    filteredConfig = applySecretsToConfig(filteredConfig, config.secrets ?? {});\n    setInheritedHostRules(filteredConfig);\n    return mergeChildConfig(config, filteredConfig);\n  }\n\n  logger.debug('Resolving presets found in inherited config');\n  const resolvedConfig = await resolveConfigPresets(\n    filteredConfig,\n    config,\n    config.ignorePresets,\n  );\n  logger.trace({ config: resolvedConfig }, 'Resolved inherited config');\n\n  const validationRes = await validateConfig('inherit', resolvedConfig);\n  if (validationRes.errors.length) {\n    logger.warn(\n      { errors: validationRes.errors },\n      'Found errors in presets inside the inherited configuration.',\n    );\n    throw new Error(CONFIG_VALIDATION);\n  }\n  if (validationRes.warnings.length) {\n    logger.warn(\n      { warnings: validationRes.warnings },\n      'Found warnings in presets inside the inherited configuration.',\n    );\n  }\n\n  // remove global config options once again, as resolved presets could have added some\n  filteredConfig = removeGlobalConfig(resolvedConfig, true);\n  if (!dequal(resolvedConfig, filteredConfig)) {\n    logger.debug(\n      { inheritedConfig: resolvedConfig, filteredConfig },\n      'Removed global config from inherited config presets.',\n    );\n  }\n\n  filteredConfig = applySecretsToConfig(filteredConfig, config.secrets ?? {});\n  setInheritedHostRules(filteredConfig);\n  return mergeChildConfig(config, filteredConfig);\n}\n\nfunction setInheritedHostRules(config: RenovateConfig): void {\n  if (config.hostRules) {\n    logger.debug('Setting hostRules from config');\n    for (const rule of config.hostRules) {\n      try {\n        hostRules.add(rule);\n      } catch (err) {\n        // istanbul ignore next\n        logger.warn(\n          { err, config: rule },\n          'Error setting hostRule from config',\n        );\n      }\n    }\n    // host rules can change concurrency\n    queue.clear();\n    throttle.clear();\n    delete config.hostRules;\n  }\n}\n"]}