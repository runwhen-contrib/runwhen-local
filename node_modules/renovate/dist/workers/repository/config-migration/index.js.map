{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/workers/repository/config-migration/index.ts"],"names":[],"mappings":";;AAWA,0CA4CC;AAtDD,4CAAyC;AACzC,qCAAsD;AACtD,0DAA6D;AAC7D,6BAA+C;AAOxC,KAAK,UAAU,eAAe,CACnC,MAAsB,EACtB,UAAoB;IAEpB,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC7B,eAAM,CAAC,KAAK,CACV,6EAA6E,CAC9E,CAAC;QACF,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC;IACpC,CAAC;IAED,MAAM,kBAAkB,GAAG,MAAM,mCAAmB,CAAC,QAAQ,EAAE,CAAC;IAChE,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACxB,eAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;QAC/C,mCAAmB,CAAC,KAAK,EAAE,CAAC;QAC5B,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC;IACpC,CAAC;IAED,MAAM,GAAG,GAAG,MAAM,IAAA,mCAA0B,EAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;IAEzE,4CAA4C;IAC5C,IAAI,GAAG,CAAC,MAAM,KAAK,qBAAqB,EAAE,CAAC;QACzC,mCAAmB,CAAC,KAAK,EAAE,CAAC;QAC5B,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC;IACpC,CAAC;IAED,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAErC,MAAM,EAAE,GAAG,MAAM,IAAA,4BAAuB,EAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;IAErE,iEAAiE;IACjE,yIAAyI;IACzI,IAAI,CAAC,EAAE,EAAE,CAAC;QACR,mCAAmB,CAAC,KAAK,EAAE,CAAC;QAC5B,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC;IACpC,CAAC;IAED,mCAAmB,CAAC,KAAK,EAAE,CAAC;IAE5B,OAAO;QACL,MAAM,EACJ,GAAG,CAAC,MAAM,KAAK,yBAAyB,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa;QACxE,QAAQ,EAAE,EAAE,CAAC,MAAM;KACpB,CAAC;AACJ,CAAC","sourcesContent":["import type { RenovateConfig } from '../../../config/types';\nimport { logger } from '../../../logger';\nimport { checkConfigMigrationBranch } from './branch';\nimport { MigratedDataFactory } from './branch/migrated-data';\nimport { ensureConfigMigrationPr } from './pr';\n\nexport type ConfigMigrationResult =\n  | { result: 'no-migration' }\n  | { result: 'add-checkbox' }\n  | { result: 'pr-exists' | 'pr-modified'; prNumber: number };\n\nexport async function configMigration(\n  config: RenovateConfig,\n  branchList: string[],\n): Promise<ConfigMigrationResult> {\n  if (config.mode === 'silent') {\n    logger.debug(\n      'Config migration issues are not created, updated or closed when mode=silent',\n    );\n    return { result: 'no-migration' };\n  }\n\n  const migratedConfigData = await MigratedDataFactory.getAsync();\n  if (!migratedConfigData) {\n    logger.debug('Config does not need migration');\n    MigratedDataFactory.reset();\n    return { result: 'no-migration' };\n  }\n\n  const res = await checkConfigMigrationBranch(config, migratedConfigData);\n\n  // migration needed but not demanded by user\n  if (res.result === 'no-migration-branch') {\n    MigratedDataFactory.reset();\n    return { result: 'add-checkbox' };\n  }\n\n  branchList.push(res.migrationBranch);\n\n  const pr = await ensureConfigMigrationPr(config, migratedConfigData);\n\n  // only happens incase a migration pr was created by another user\n  // for other cases in which a PR could not be found or created: we log warning and throw error from within the ensureConfigMigrationPr fn\n  if (!pr) {\n    MigratedDataFactory.reset();\n    return { result: 'add-checkbox' };\n  }\n\n  MigratedDataFactory.reset();\n\n  return {\n    result:\n      res.result === 'migration-branch-exists' ? 'pr-exists' : 'pr-modified',\n    prNumber: pr.number,\n  };\n}\n"]}