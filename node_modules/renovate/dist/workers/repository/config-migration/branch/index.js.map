{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/config-migration/branch/index.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { GlobalConfig } from '../../../../config/global';\nimport type { RenovateConfig } from '../../../../config/types';\nimport { logger } from '../../../../logger';\nimport type { FindPRConfig, Pr } from '../../../../modules/platform';\nimport { platform } from '../../../../modules/platform';\nimport { scm } from '../../../../modules/platform/scm';\nimport { getMigrationBranchName } from '../common';\nimport { ConfigMigrationCommitMessageFactory } from './commit-message';\nimport { createConfigMigrationBranch } from './create';\nimport type { MigratedData } from './migrated-data';\nimport { rebaseMigrationBranch } from './rebase';\n\nexport type CheckConfigMigrationBranchResult =\n  | { result: 'no-migration-branch' }\n  | {\n      result: 'migration-branch-exists' | 'migration-branch-modified';\n      migrationBranch: string;\n    };\n\nexport async function checkConfigMigrationBranch(\n  config: RenovateConfig,\n  migratedConfigData: MigratedData,\n): Promise<CheckConfigMigrationBranchResult> {\n  logger.debug('checkConfigMigrationBranch()');\n  const configMigrationCheckboxState =\n    config.dependencyDashboardChecks?.configMigrationCheckboxState;\n\n  if (!config.configMigration) {\n    if (\n      is.undefined(configMigrationCheckboxState) ||\n      configMigrationCheckboxState === 'no-checkbox' ||\n      configMigrationCheckboxState === 'unchecked'\n    ) {\n      logger.debug(\n        'Config migration needed but config migration is disabled and checkbox not checked or not present.',\n      );\n      return { result: 'no-migration-branch' };\n    }\n  }\n\n  const configMigrationBranch = getMigrationBranchName(config);\n\n  const branchPr = await migrationPrExists(\n    configMigrationBranch,\n    config.baseBranch,\n  ); // handles open/autoclosed PRs\n\n  if (!branchPr) {\n    const commitMessageFactory = new ConfigMigrationCommitMessageFactory(\n      config,\n      migratedConfigData.filename,\n    );\n    const prTitle = commitMessageFactory.getPrTitle();\n    const closedPrConfig: FindPRConfig = {\n      branchName: configMigrationBranch,\n      prTitle,\n      state: 'closed',\n      targetBranch: config.baseBranch,\n    };\n\n    // handles closed PR\n    const closedPr = await platform.findPr(closedPrConfig);\n\n    // found closed migration PR\n    if (closedPr) {\n      logger.debug('Closed config migration PR found.');\n\n      // if a closed pr exists and the checkbox for config migration is not checked\n      // return no-migration-branch result so that the checkbox gets added again\n      // we only want to create a config migration pr if the checkbox is checked\n      if (configMigrationCheckboxState !== 'checked') {\n        logger.debug(\n          'Config migration is enabled and needed. But a closed pr exists and checkbox is not checked. Skipping migration branch creation.',\n        );\n        return { result: 'no-migration-branch' };\n      }\n\n      logger.debug(\n        'Closed migration PR found and checkbox is checked. Try to delete this old branch and create a new one.',\n      );\n      await handlePr(config, closedPr);\n    }\n  }\n\n  let result: CheckConfigMigrationBranchResult['result'];\n\n  if (branchPr) {\n    logger.debug('Config Migration PR already exists');\n\n    if (await isMigrationBranchModified(config, configMigrationBranch)) {\n      logger.debug(\n        'Config Migration branch has been modified. Skipping branch rebase.',\n      );\n      result = 'migration-branch-modified';\n    } else {\n      await rebaseMigrationBranch(config, migratedConfigData);\n      if (platform.refreshPr) {\n        const configMigrationPr = await platform.getBranchPr(\n          configMigrationBranch,\n          config.baseBranch,\n        );\n        if (configMigrationPr) {\n          await platform.refreshPr(configMigrationPr.number);\n        }\n      }\n      result = 'migration-branch-exists';\n    }\n  } else {\n    logger.debug('Config Migration PR does not exist');\n    logger.debug('Need to create migration PR');\n    await createConfigMigrationBranch(config, migratedConfigData);\n    result = 'migration-branch-exists';\n  }\n  if (!GlobalConfig.get('dryRun')) {\n    await scm.checkoutBranch(configMigrationBranch);\n  }\n  return {\n    migrationBranch: configMigrationBranch,\n    result,\n  };\n}\n\nexport async function migrationPrExists(\n  branchName: string,\n  targetBranch?: string,\n): Promise<Pr | null> {\n  return await platform.getBranchPr(branchName, targetBranch);\n}\n\nasync function handlePr(config: RenovateConfig, pr: Pr): Promise<void> {\n  if (await scm.branchExists(pr.sourceBranch)) {\n    if (GlobalConfig.get('dryRun')) {\n      logger.info('DRY-RUN: Would delete branch ' + pr.sourceBranch);\n    } else {\n      await scm.deleteBranch(pr.sourceBranch);\n    }\n  }\n}\n\nasync function isMigrationBranchModified(\n  config: RenovateConfig,\n  configMigrationBranch: string,\n): Promise<boolean> {\n  const baseBranch = config.defaultBranch!;\n  return await scm.isBranchModified(configMigrationBranch, baseBranch);\n}\n"]}