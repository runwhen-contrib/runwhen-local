{"version":3,"file":"labels.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/update/pr/labels.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { dequal } from 'dequal';\nimport type { RenovateConfig } from '../../../../config/types';\nimport { logger } from '../../../../logger';\nimport { platform } from '../../../../modules/platform';\nimport * as template from '../../../../util/template';\n\n/**\n * Filter labels that go over the maximum char limit, based on platform limits.\n */\nfunction trimLabel(label: string, limit: number): string {\n  const trimmed = label.trim();\n  if (trimmed.length <= limit) {\n    return trimmed;\n  }\n\n  return trimmed.slice(0, limit).trim();\n}\n\nexport function prepareLabels(config: RenovateConfig): string[] {\n  const labelCharLimit = platform.labelCharLimit?.() ?? 50;\n  const labels = config.labels ?? [];\n  const addLabels = config.addLabels ?? [];\n  return [...new Set([...labels, ...addLabels])]\n    .filter(is.nonEmptyStringAndNotWhitespace)\n    .map((label) => template.compile(label, config))\n    .filter(is.nonEmptyStringAndNotWhitespace)\n    .map((label) => trimLabel(label, labelCharLimit))\n    .sort();\n}\n\n/**\n * Determine changed labels between old and new label arrays.\n *\n * This function takes two arrays of labels, 'oldLabels' and 'newLabels', and calculates the labels\n * that need to be added and removed to transition from 'oldLabels' to 'newLabels'.\n */\nexport function getChangedLabels(\n  oldLabels: string[] | undefined,\n  newLabels: string[] | undefined,\n): [string[] | undefined, string[] | undefined] {\n  const labelsToAdd = newLabels?.filter((l) => !oldLabels?.includes(l));\n  const labelsToRemove = oldLabels?.filter((l) => !newLabels?.includes(l));\n\n  return [labelsToAdd, labelsToRemove];\n}\n\n/**\n * Check if labels in the PR have been modified.\n *\n * This function compares two arrays of labels, 'prInitialLabels' and 'prCurrentLabels',\n * to determine if they are different, indicating that labels in the PR have been modified.\n */\nexport function areLabelsModified(\n  prInitialLabels: string[],\n  prCurrentLabels: string[],\n): boolean {\n  const modified = !dequal(prInitialLabels.sort(), prCurrentLabels.sort());\n\n  if (modified) {\n    logger.debug(\n      { prInitialLabels, prCurrentLabels },\n      'PR labels have been modified by user, skipping labels update',\n    );\n  }\n\n  return modified;\n}\n\n/**\n * Determine if labels should be updated in the Pull Request.\n */\nexport function shouldUpdateLabels(\n  prInitialLabels: string[] | undefined,\n  prCurrentLabels: string[] | undefined,\n  configuredLabels: string[] | undefined,\n): boolean {\n  // If the 'labelsInDebugData' field is undefined\n  // it means the PR was created before the update-labels logic was merged, and labels should not be updated.\n  //  Reference: https://github.com/renovatebot/renovate/pull/25340\n  if (!is.array(prInitialLabels)) {\n    return false;\n  }\n\n  // If the labels are unchanged, they should not be updated\n  if (dequal((configuredLabels ?? []).sort(), prInitialLabels.sort())) {\n    return false;\n  }\n\n  // If the labels in the PR have been modified by the user, they should not be updated\n  if (areLabelsModified(prInitialLabels, prCurrentLabels ?? [])) {\n    logger.debug('Labels have been modified by user - skipping labels update.');\n    return false;\n  }\n\n  logger.debug('Labels have been changed in repo config- updating labels.');\n  return true;\n}\n"]}