{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../../../lib/workers/repository/update/pr/changelog/common.ts"],"names":[],"mappings":";;AAGA,gCAGC;AA4BD,4DAcC;;AAhDD,8DAA8B;AAC9B,qDAAkD;AAElD,SAAgB,UAAU,CAAC,GAAW;IACpC,MAAM,CAAC,GAAG,IAAA,aAAK,EAAC,SAAS,CAAC,CAAC;IAC3B,OAAO,IAAA,iBAAO,EAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AACtC,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,SAAgB,wBAAwB,CAAC,CAAS,EAAE,CAAS;IAC3D,MAAM,0BAA0B,GAAG;QACjC,yBAAyB;QACzB,kBAAkB;KACnB,CAAC;IAEF,MAAM,cAAc,GAAG,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,MAAM,cAAc,GAAG,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,IAAI,cAAc,KAAK,cAAc,EAAE,CAAC;QACtC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;SAAM,IAAI,cAAc,IAAI,CAAC,IAAI,cAAc,IAAI,CAAC,EAAE,CAAC;QACtD,OAAO,cAAc,GAAG,cAAc,CAAC;IACzC,CAAC;IACD,OAAO,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC","sourcesContent":["import slugify from 'slugify';\nimport { regEx } from '../../../../../util/regex';\n\nexport function slugifyUrl(url: string): string {\n  const r = regEx(/[:/.]+/g);\n  return slugify(url.replace(r, ' '));\n}\n\n/**\n * A comparator function to sort changelog files by preference,\n * prioritizing markdown files and plain text files over other file types.\n *\n * Avoid selecting files like `CHANGELOG.json` when `CHANGELOG.md` is available.\n * @see https://github.com/renovatebot/renovate/issues/25830\n *\n * @example\n * ```\n * const changelogFiles = [\n * 'CHANGELOG.json',\n * 'CHANGELOG',\n * 'CHANGELOG.md',\n * ].sort(compareChangelogFilePath);\n *\n * console.log(changelogFiles); // =>\n * [\n *  'CHANGELOG.md',\n *  'CHANGELOG',\n *  'CHANGELOG.json',\n * ]\n * ```\n *\n * @param a path to changelog file\n * @param b path to changelog file\n */\nexport function compareChangelogFilePath(a: string, b: string): number {\n  const preferedChangelogRegexList = [\n    /\\.(?:md|markdown|mkd)$/i,\n    /\\.(?:txt|text)$/i,\n  ];\n\n  const aPreferedIndex = preferedChangelogRegexList.findIndex((f) => f.test(a));\n  const bPreferedIndex = preferedChangelogRegexList.findIndex((f) => f.test(b));\n  if (aPreferedIndex === bPreferedIndex) {\n    return a.localeCompare(b);\n  } else if (aPreferedIndex >= 0 && bPreferedIndex >= 0) {\n    return aPreferedIndex - bPreferedIndex;\n  }\n  return aPreferedIndex >= 0 ? -1 : 1;\n}\n"]}