{"version":3,"file":"source.js","sourceRoot":"","sources":["../../../../../../../lib/workers/repository/update/pr/changelog/github/source.ts"],"names":[],"mappings":";;;;AAAA,gEAA2B;AAC3B,4DAA+D;AAC/D,qDAAkD;AAClD,qFAA+D;AAE/D,sCAA4C;AAE5C,MAAa,qBAAsB,SAAQ,wBAAe;IACxD;QACE,KAAK,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,MAA2B;QACvC,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,OAAO,CAAC,UAAU,CAAC,qBAAqB,CAAC;YAC9C,CAAC,CAAC,yBAAyB;YAC3B,CAAC,CAAC,OAAO,GAAG,SAAS,CAAC;IAC1B,CAAC;IAED,aAAa,CACX,OAAe,EACf,UAAkB,EAClB,QAAgB,EAChB,QAAgB;QAEhB,OAAO,GAAG,OAAO,GAAG,UAAU,YAAY,QAAQ,MAAM,QAAQ,EAAE,CAAC;IACrE,CAAC;IAEkB,iBAAiB,CAAC,MAA2B;QAC9D,IACE,MAAM,CAAC,SAAS,KAAK,oDAAoD,EACzE,CAAC;YACD,eAAM,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAEkB,aAAa,CAAC,MAA2B;QAI1D,MAAM,SAAS,GAAG,MAAM,CAAC,SAAU,CAAC;QACpC,MAAM,SAAS,GAAG,kBAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACvC,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC5B,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC/B,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEvC,MAAM,GAAG,GAAG,SAAS,CAAC,UAAU,CAAC,qBAAqB,CAAC;YACrD,CAAC,CAAC,yBAAyB;YAC3B,CAAC,CAAC,SAAS,CAAC;QACd,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,CAAC,IAAI,CAAC;YAC/B,QAAQ,EAAE,QAAQ;YAClB,GAAG;YACH,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,qBAAqB;QACrB,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,IAAI,KAAK,YAAY,EAAE,CAAC;gBAC1D,IAAI,CAAC,qBAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,CAAC;oBACzC,eAAM,CAAC,KAAK,CACV,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,EACnC,4EAA4E,CAC7E,CAAC;oBACF,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;gBAC5B,CAAC;gBACD,eAAM,CAAC,IAAI,CACT,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,EACnC,2EAA2E,CAC5E,CAAC;gBACF,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;YACzD,CAAC;YACD,eAAM,CAAC,KAAK,CACV,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,EACnC,qFAAqF,CACtF,CAAC;YACF,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;QAC5B,CAAC;QACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3B,CAAC;CACF;AA1ED,sDA0EC","sourcesContent":["import URL from 'node:url';\nimport { GlobalConfig } from '../../../../../../config/global';\nimport { logger } from '../../../../../../logger';\nimport * as hostRules from '../../../../../../util/host-rules';\nimport type { BranchUpgradeConfig } from '../../../../../types';\nimport { ChangeLogSource } from '../source';\nimport type { ChangeLogError } from '../types';\nexport class GitHubChangeLogSource extends ChangeLogSource {\n  constructor() {\n    super('github', 'github-tags');\n  }\n\n  getAPIBaseUrl(config: BranchUpgradeConfig): string {\n    const baseUrl = this.getBaseUrl(config);\n    return baseUrl.startsWith('https://github.com/')\n      ? 'https://api.github.com/'\n      : baseUrl + 'api/v3/';\n  }\n\n  getCompareURL(\n    baseUrl: string,\n    repository: string,\n    prevHead: string,\n    nextHead: string,\n  ): string {\n    return `${baseUrl}${repository}/compare/${prevHead}...${nextHead}`;\n  }\n\n  protected override shouldSkipPackage(config: BranchUpgradeConfig): boolean {\n    if (\n      config.sourceUrl === 'https://github.com/DefinitelyTyped/DefinitelyTyped'\n    ) {\n      logger.trace('No release notes for @types');\n      return true;\n    }\n\n    return false;\n  }\n\n  protected override hasValidToken(config: BranchUpgradeConfig): {\n    isValid: boolean;\n    error?: ChangeLogError;\n  } {\n    const sourceUrl = config.sourceUrl!;\n    const parsedUrl = URL.parse(sourceUrl);\n    const host = parsedUrl.host;\n    const manager = config.manager;\n    const packageName = config.packageName;\n\n    const url = sourceUrl.startsWith('https://github.com/')\n      ? 'https://api.github.com/'\n      : sourceUrl;\n    const { token } = hostRules.find({\n      hostType: 'github',\n      url,\n      readOnly: true,\n    });\n    // istanbul ignore if\n    if (host && !token) {\n      if (host.endsWith('.github.com') || host === 'github.com') {\n        if (!GlobalConfig.get('githubTokenWarn')) {\n          logger.debug(\n            { manager, packageName, sourceUrl },\n            'GitHub token warning has been suppressed. Skipping release notes retrieval',\n          );\n          return { isValid: false };\n        }\n        logger.warn(\n          { manager, packageName, sourceUrl },\n          'No github.com token has been configured. Skipping release notes retrieval',\n        );\n        return { isValid: false, error: 'MissingGithubToken' };\n      }\n      logger.debug(\n        { manager, packageName, sourceUrl },\n        'Repository URL does not match any known github hosts - skipping changelog retrieval',\n      );\n      return { isValid: false };\n    }\n    return { isValid: true };\n  }\n}\n"]}