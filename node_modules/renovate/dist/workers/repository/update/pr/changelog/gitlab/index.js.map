{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../../lib/workers/repository/update/pr/changelog/gitlab/index.ts"],"names":[],"mappings":"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","sourcesContent":["import changelogFilenameRegex from 'changelog-filename-regex';\nimport { logger } from '../../../../../../logger';\nimport type { GitlabRelease } from '../../../../../../modules/datasource/gitlab-releases/types';\nimport type { GitlabTreeNode } from '../../../../../../types/platform/gitlab';\nimport { GitlabHttp } from '../../../../../../util/http/gitlab';\nimport { compareChangelogFilePath } from '../common';\nimport type {\n  ChangeLogFile,\n  ChangeLogNotes,\n  ChangeLogProject,\n  ChangeLogRelease,\n} from '../types';\n\nexport const id = 'gitlab-changelog';\nconst http = new GitlabHttp(id);\n\nexport async function getReleaseNotesMd(\n  repository: string,\n  apiBaseUrl: string,\n  sourceDirectory?: string,\n): Promise<ChangeLogFile | null> {\n  logger.trace('gitlab.getReleaseNotesMd()');\n  const urlEncodedRepo = encodeURIComponent(repository);\n  const apiPrefix = `${apiBaseUrl}projects/${urlEncodedRepo}/repository/`;\n\n  // https://docs.gitlab.com/13.2/ee/api/repositories.html#list-repository-tree\n  const tree = (\n    await http.getJsonUnchecked<GitlabTreeNode[]>(\n      `${apiPrefix}tree?per_page=100${\n        sourceDirectory ? `&path=${sourceDirectory}` : ''\n      }`,\n      {\n        paginate: true,\n      },\n    )\n  ).body;\n  const allFiles = tree.filter((f) => f.type === 'blob');\n  let files: GitlabTreeNode[] = [];\n  if (!files.length) {\n    files = allFiles.filter((f) => changelogFilenameRegex.test(f.name));\n  }\n  if (!files.length) {\n    logger.trace('no changelog file found');\n    return null;\n  }\n  const { path: changelogFile, id } = files\n    .sort((a, b) => compareChangelogFilePath(a.name, b.name))\n    .shift()!;\n  /* istanbul ignore if */\n  if (files.length !== 0) {\n    logger.debug(\n      `Multiple candidates for changelog file, using ${changelogFile}`,\n    );\n  }\n\n  // https://docs.gitlab.com/13.2/ee/api/repositories.html#raw-blob-content\n  const fileRes = await http.getText(`${apiPrefix}blobs/${id}/raw`);\n  const changelogMd = fileRes.body + '\\n#\\n##';\n  return { changelogFile, changelogMd };\n}\n\nexport async function getReleaseList(\n  project: ChangeLogProject,\n  _release: ChangeLogRelease,\n): Promise<ChangeLogNotes[]> {\n  logger.trace('gitlab.getReleaseNotesMd()');\n  const apiBaseUrl = project.apiBaseUrl;\n  const repository = project.repository;\n  const urlEncodedRepo = encodeURIComponent(repository);\n  const apiUrl = `${apiBaseUrl}projects/${urlEncodedRepo}/releases`;\n\n  const res = await http.getJsonUnchecked<GitlabRelease[]>(\n    `${apiUrl}?per_page=100`,\n    {\n      paginate: true,\n    },\n  );\n  return res.body.map((release) => ({\n    url: `${project.baseUrl}${repository}/-/releases/${release.tag_name}`,\n    notesSourceUrl: apiUrl,\n    name: release.name,\n    body: release.description,\n    tag: release.tag_name,\n  }));\n}\n"]}