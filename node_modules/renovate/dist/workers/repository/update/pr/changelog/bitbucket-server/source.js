"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BitbucketServerChangeLogSource = void 0;
const regex_1 = require("../../../../../../util/regex");
const url_1 = require("../../../../../../util/url");
const source_1 = require("../source");
const repositoryRegex = (0, regex_1.regEx)('^/(?:scm|projects)?/?(?<project>[^\\/]+)/(?:repos/)?(?<repo>[^\\/]+?)(?:\\.git|/.*|$)');
class BitbucketServerChangeLogSource extends source_1.ChangeLogSource {
    constructor() {
        super('bitbucket-server', 'bitbucket-server-tags');
    }
    getAPIBaseUrl(config) {
        return `${this.getBaseUrl(config)}rest/api/1.0/`;
    }
    getCompareURL(baseUrl, repository, prevHead, nextHead) {
        const [projectKey, repositorySlug] = repository.split('/');
        return `${baseUrl}projects/${projectKey}/repos/${repositorySlug}/compare/commits?sourceBranch=${nextHead}&targetBranch=${prevHead}`;
    }
    getRepositoryFromUrl(config) {
        const parsedUrl = (0, url_1.parseUrl)(config.sourceUrl);
        if (parsedUrl) {
            const match = repositoryRegex.exec(parsedUrl.pathname);
            if (match?.groups) {
                return `${match.groups.project}/${match.groups.repo}`;
            }
        }
        return '';
    }
}
exports.BitbucketServerChangeLogSource = BitbucketServerChangeLogSource;
//# sourceMappingURL=source.js.map