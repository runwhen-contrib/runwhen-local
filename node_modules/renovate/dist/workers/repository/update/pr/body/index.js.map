{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../lib/workers/repository/update/pr/body/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RenovateConfig } from '../../../../../config/types';\nimport type { PrDebugData } from '../../../../../modules/platform';\nimport { platform } from '../../../../../modules/platform';\nimport { detectPlatform } from '../../../../../util/common';\nimport { regEx } from '../../../../../util/regex';\nimport { toBase64 } from '../../../../../util/string';\nimport * as template from '../../../../../util/template';\nimport { joinUrlParts } from '../../../../../util/url';\nimport type { BranchConfig } from '../../../../types';\nimport { getDepWarningsPR, getWarnings } from '../../../errors-warnings';\nimport { getChangelogs } from './changelogs';\nimport { getPrConfigDescription } from './config-description';\nimport { getControls } from './controls';\nimport { getPrFooter } from './footer';\nimport { getPrHeader } from './header';\nimport { getPrExtraNotes, getPrNotes } from './notes';\nimport { getPrUpdatesTable } from './updates-table';\n\nfunction massageUpdateMetadata(config: BranchConfig): void {\n  config.upgrades.forEach((upgrade) => {\n    const {\n      homepage,\n      sourceUrl,\n      sourceDirectory,\n      changelogUrl,\n      dependencyUrl,\n    } = upgrade;\n    // TODO: types (#22198)\n    let depNameLinked = upgrade.depName!;\n    const primaryLink = homepage ?? sourceUrl ?? dependencyUrl;\n    if (primaryLink) {\n      depNameLinked = `[${depNameLinked}](${primaryLink})`;\n    }\n\n    let sourceRootPath = 'tree/HEAD';\n    if (sourceUrl) {\n      const sourcePlatform = detectPlatform(sourceUrl);\n      if (sourcePlatform === 'bitbucket') {\n        sourceRootPath = 'src/HEAD';\n      } else if (sourcePlatform === 'bitbucket-server') {\n        sourceRootPath = 'browse';\n      }\n    }\n\n    const otherLinks = [];\n    if (sourceUrl && (!!sourceDirectory || homepage)) {\n      otherLinks.push(\n        `[source](${getFullSourceUrl(sourceUrl, sourceRootPath, sourceDirectory)})`,\n      );\n    }\n    const templatedChangelogUrl = changelogUrl\n      ? template.compile(changelogUrl, upgrade, true)\n      : undefined;\n    if (templatedChangelogUrl) {\n      otherLinks.push(`[changelog](${templatedChangelogUrl})`);\n    }\n    if (otherLinks.length) {\n      depNameLinked += ` (${otherLinks.join(', ')})`;\n    }\n    upgrade.depNameLinked = depNameLinked;\n    const references: string[] = [];\n    if (homepage) {\n      references.push(`[homepage](${homepage})`);\n    }\n    if (sourceUrl) {\n      references.push(\n        `[source](${getFullSourceUrl(sourceUrl, sourceRootPath, sourceDirectory)})`,\n      );\n    }\n    if (templatedChangelogUrl) {\n      references.push(`[changelog](${templatedChangelogUrl})`);\n    }\n    upgrade.references = references.join(', ');\n  });\n}\n\nfunction getFullSourceUrl(\n  sourceUrl: string,\n  sourceRootPath: string,\n  sourceDirectory?: string,\n): string {\n  let fullUrl = sourceUrl;\n  if (sourceDirectory) {\n    fullUrl = joinUrlParts(sourceUrl, sourceRootPath, sourceDirectory);\n  }\n\n  return fullUrl;\n}\n\ninterface PrBodyConfig {\n  appendExtra?: string | null | undefined;\n  rebasingNotice?: string;\n  debugData: PrDebugData;\n}\n\nconst rebasingRegex = regEx(/\\*\\*Rebasing\\*\\*: .*/);\n\nexport function getPrBody(\n  branchConfig: BranchConfig,\n  prBodyConfig: PrBodyConfig,\n  config: RenovateConfig,\n): string {\n  massageUpdateMetadata(branchConfig);\n  let warnings = '';\n  warnings += getWarnings(branchConfig);\n  if (branchConfig.packageFiles) {\n    warnings += getDepWarningsPR(\n      branchConfig.packageFiles,\n      config,\n      branchConfig.dependencyDashboard,\n    );\n  }\n  const content = {\n    header: getPrHeader(branchConfig),\n    table: getPrUpdatesTable(branchConfig),\n    warnings,\n    notes: getPrNotes(branchConfig) + getPrExtraNotes(branchConfig),\n    changelogs: getChangelogs(branchConfig),\n    configDescription: getPrConfigDescription(branchConfig),\n    controls: getControls(),\n    footer: getPrFooter(branchConfig),\n  };\n\n  let prBody = '';\n  if (branchConfig.prBodyTemplate) {\n    const prBodyTemplate = branchConfig.prBodyTemplate;\n    prBody = template.compile(prBodyTemplate, content, false);\n    prBody = prBody.trim();\n    prBody = prBody.replace(regEx(/\\n\\n\\n+/g), '\\n\\n');\n    const prDebugData64 = toBase64(JSON.stringify(prBodyConfig.debugData));\n    prBody += `\\n<!--renovate-debug:${prDebugData64}-->\\n`;\n    prBody = platform.massageMarkdown(prBody);\n\n    if (prBodyConfig?.rebasingNotice) {\n      prBody = prBody.replace(\n        rebasingRegex,\n        `**Rebasing**: ${prBodyConfig.rebasingNotice}`,\n      );\n    }\n  }\n  return prBody;\n}\n"]}