{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/workers/repository/reconfigure/index.ts"],"names":[],"mappings":";;AAQA,wDAsBC;AA9BD,mDAAsD;AAEtD,4CAAyC;AACzC,uDAAoD;AACpD,2DAAmE;AACnE,mCAAmD;AACnD,yCAAuD;AAEhD,KAAK,UAAU,sBAAsB,CAC1C,MAAsB;IAEtB,eAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;IACzC,IAAI,qBAAY,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,OAAO,EAAE,CAAC;QAC7C,eAAM,CAAC,KAAK,CACV,gEAAgE,CACjE,CAAC;QACF,OAAO;IACT,CAAC;IAED,MAAM,iBAAiB,GAAG,IAAA,gCAAwB,EAAC,MAAM,CAAC,YAAa,CAAC,CAAC;IACzE,MAAM,YAAY,GAAG,MAAM,SAAG,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;IAE/D,oEAAoE;IACpE,IAAI,CAAC,YAAY,EAAE,CAAC;QAClB,eAAM,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;QAC5C,IAAA,gDAA4B,GAAE,CAAC,CAAC,4DAA4D;QAC5F,OAAO;IACT,CAAC;IAED,MAAM,IAAA,oCAAyB,EAAC,MAAM,CAAC,CAAC;AAC1C,CAAC","sourcesContent":["import { GlobalConfig } from '../../../config/global';\nimport type { RenovateConfig } from '../../../config/types';\nimport { logger } from '../../../logger';\nimport { scm } from '../../../modules/platform/scm';\nimport { deleteReconfigureBranchCache } from './reconfigure-cache';\nimport { getReconfigureBranchName } from './utils';\nimport { validateReconfigureBranch } from './validate';\n\nexport async function checkReconfigureBranch(\n  config: RenovateConfig,\n): Promise<void> {\n  logger.debug('checkReconfigureBranch()');\n  if (GlobalConfig.get('platform') === 'local') {\n    logger.debug(\n      'Not attempting to reconfigure when running with local platform',\n    );\n    return;\n  }\n\n  const reconfigureBranch = getReconfigureBranchName(config.branchPrefix!);\n  const branchExists = await scm.branchExists(reconfigureBranch);\n\n  // this is something the user initiates, so skip if no branch exists\n  if (!branchExists) {\n    logger.debug('No reconfigure branch found');\n    deleteReconfigureBranchCache(); // in order to remove cache when the branch has been deleted\n    return;\n  }\n\n  await validateReconfigureBranch(config);\n}\n"]}