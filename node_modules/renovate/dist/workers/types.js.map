{"version":3,"file":"types.js","sourceRoot":"","sources":["../../lib/workers/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { Merge } from 'type-fest';\nimport type {\n  GroupConfig,\n  LegacyAdminConfig,\n  RenovateConfig,\n  RenovateSharedConfig,\n  ValidationMessage,\n} from '../config/types';\nimport type { Release } from '../modules/datasource/types';\nimport type {\n  ArtifactError,\n  ArtifactNotice,\n  ExtractConfig,\n  LookupUpdate,\n  PackageDependency,\n  PackageFile,\n} from '../modules/manager/types';\nimport type { PlatformPrOptions } from '../modules/platform/types';\nimport type { FileChange } from '../util/git/types';\nimport type { MergeConfidence } from '../util/merge-confidence/types';\nimport type { Timestamp } from '../util/timestamp';\nimport type {\n  ChangeLogRelease,\n  ChangeLogResult,\n} from './repository/update/pr/changelog/types';\n\nexport type ReleaseWithNotes = Release & Partial<ChangeLogRelease>;\n\nexport interface BranchUpgradeConfig\n  extends Merge<RenovateConfig, PackageDependency>,\n    Partial<LookupUpdate>,\n    RenovateSharedConfig {\n  artifactErrors?: ArtifactError[];\n  artifactNotices?: ArtifactNotice[];\n  autoReplaceStringTemplate?: string;\n  baseDeps?: PackageDependency[];\n  branchName: string;\n  commitBody?: string;\n  commitMessage?: string;\n  commitMessageExtra?: string;\n  currentDigest?: string;\n  currentDigestShort?: string;\n  currentValue?: string;\n\n  currentValueTemplate?: string;\n  depIndex?: number;\n  depTypes?: string[];\n\n  displayPending?: string;\n  excludeCommitPaths?: string[];\n  githubName?: string;\n  group?: GroupConfig;\n  groupName?: string;\n  groupSlug?: string;\n  manager: string;\n  packageFile?: string;\n  lockFile?: string;\n  lockFiles?: string[];\n  reuseExistingBranch?: boolean;\n  prHeader?: string;\n  prFooter?: string;\n  prBodyNotes?: string[];\n  prBodyTemplate?: string;\n  prPriority?: number;\n  prTitle?: string;\n  prTitleStrict?: boolean;\n  prettyNewMajor?: string;\n  prettyNewVersion?: string;\n  releases?: ReleaseWithNotes[];\n  releaseTimestamp?: Timestamp;\n  repoName?: string;\n  minimumConfidence?: MergeConfidence | undefined;\n  sourceDirectory?: string;\n\n  updatedPackageFiles?: FileChange[];\n  updatedArtifacts?: FileChange[];\n\n  logJSON?: ChangeLogResult | null;\n\n  hasReleaseNotes?: boolean;\n  homepage?: string;\n  changelogUrl?: string;\n  dependencyUrl?: string;\n  sourceUrl?: string;\n  sourceRepo?: string;\n  sourceRepoOrg?: string;\n  sourceRepoName?: string;\n}\n\nexport type PrBlockedBy =\n  | 'BranchAutomerge'\n  | 'NeedsApproval'\n  | 'AwaitingTests'\n  | 'RateLimited'\n  | 'Error';\n\nexport type BranchResult =\n  | 'already-existed'\n  | 'automerged'\n  | 'done'\n  | 'error'\n  | 'needs-approval'\n  | 'needs-pr-approval'\n  | 'not-scheduled'\n  | 'no-work'\n  | 'pending'\n  | 'pr-created'\n  | 'pr-edited'\n  | 'pr-limit-reached'\n  | 'commit-limit-reached'\n  | 'branch-limit-reached'\n  | 'rebase'\n  | 'update-not-scheduled';\n\nexport interface BranchConfig\n  extends BranchUpgradeConfig,\n    LegacyAdminConfig,\n    PlatformPrOptions {\n  automergeComment?: string;\n  automergeType?: string;\n  automergedPreviously?: boolean;\n  baseBranch: string;\n  errors?: ValidationMessage[];\n  hasTypes?: boolean;\n  dependencyDashboardChecks?: Record<string, string>;\n  releaseTimestamp?: Timestamp;\n  forceCommit?: boolean;\n  rebaseRequested?: boolean;\n  result?: BranchResult;\n  upgrades: BranchUpgradeConfig[];\n  packageFiles?: Record<string, PackageFile[]>;\n  prBlockedBy?: PrBlockedBy;\n  prNo?: number;\n  stopUpdating?: boolean;\n  isConflicted?: boolean;\n  commitFingerprint?: string;\n  skipBranchUpdate?: boolean;\n}\n\nexport interface BranchMetadata {\n  branchName: string;\n  branchSha?: string | null;\n  baseBranch?: string;\n  baseBranchSha?: string | null;\n  automerge?: boolean;\n  isModified?: boolean;\n  isPristine?: boolean;\n}\n\nexport interface BaseBranchMetadata {\n  branchName: string;\n  sha: string;\n}\n\nexport interface BranchSummary {\n  baseBranches: BaseBranchMetadata[];\n  branches: BranchMetadata[];\n  cacheModified?: boolean;\n  defaultBranch?: string;\n  inactiveBranches: string[];\n}\n\nexport interface WorkerExtractConfig extends ExtractConfig {\n  manager: string;\n  fileList: string[];\n  fileMatch?: string[];\n  includePaths?: string[];\n  ignorePaths?: string[];\n  enabled?: boolean;\n}\n\nexport interface DepWarnings {\n  warnings: string[];\n  warningFiles: string[];\n}\n\nexport interface SelectAllConfig extends RenovateConfig {\n  dependencyDashboardRebaseAllOpen?: boolean;\n  dependencyDashboardAllPending?: boolean;\n  dependencyDashboardAllRateLimited?: boolean;\n}\n\nexport interface UpgradeFingerprintConfig {\n  autoReplaceStringTemplate?: string;\n  currentDigest?: string;\n  currentValue?: string;\n  currentVersion?: string;\n  datasource?: string;\n  depName?: string;\n  lockFile?: string;\n  lockedVersion?: string;\n  manager?: string | null;\n  newName?: string;\n  newDigest?: string;\n  newValue?: string;\n  newVersion?: string;\n  packageFile?: string;\n  replaceString?: string;\n}\n\nexport interface ExtractResult {\n  extractionFingerprints: Record<string, string | undefined>;\n  packageFiles: Record<string, PackageFile[]>;\n}\n"]}