// Generated by IcedCoffeeScript 112.8.1
var Generic, Packet,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Packet = require('./base').Packet;

Generic = (function(superClass) {
  extend(Generic, superClass);

  function Generic(type, body) {
    this.type = type;
    this.body = body;
  }

  return Generic;

})(Packet);

exports.Generic = Generic;

//# sourceMappingURL=generic.js.map
