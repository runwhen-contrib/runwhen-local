// Generated by IcedCoffeeScript 112.8.1
var AES, C, Packet, SHA1, SHA256, UserAttribute, bufferify, encrypt, native_rng, parse, ref, ref1, triplesec, uint_to_buffer,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

C = require('../../const').openpgp;

triplesec = require('triplesec');

ref = triplesec.hash, SHA1 = ref.SHA1, SHA256 = ref.SHA256;

AES = triplesec.ciphers.AES;

native_rng = triplesec.prng.native_rng;

ref1 = require('../../util'), bufferify = ref1.bufferify, uint_to_buffer = ref1.uint_to_buffer;

encrypt = require('../cfb').encrypt;

Packet = require('./base').Packet;

parse = require('pgp-utils').userid.parse;

UserAttribute = (function(superClass) {
  extend(UserAttribute, superClass);

  function UserAttribute(data) {
    this.data = data;
    UserAttribute.__super__.constructor.call(this);
  }

  UserAttribute.prototype.write = function() {
    return this.frame_packet(C.packet_tags.user_attribute, this.data);
  };

  UserAttribute.parse = function(slice) {
    return new UserAttribute(slice.consume_rest_to_buffer());
  };

  UserAttribute.prototype.to_user_attribute = function() {
    return this;
  };

  UserAttribute.prototype.to_signature_payload = function() {
    return Buffer.concat([Buffer.from([C.signatures.user_attribute]), uint_to_buffer(32, this.data.length), this.data]);
  };

  return UserAttribute;

})(Packet);

exports.UserAttribute = UserAttribute;

//# sourceMappingURL=user_attribute.js.map
