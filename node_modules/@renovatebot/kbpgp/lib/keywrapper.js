// Generated by IcedCoffeeScript 112.8.1
var C, KeyWrapper, Lifespan, Primary, Subkey,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

C = require('./const');

Lifespan = (function() {
  function Lifespan(arg) {
    this.generated = arg.generated, this.expire_in = arg.expire_in;
    if (this.expire_in === void 0) {
      this.expire_in = C.default_key_expire_in;
    }
  }

  Lifespan.prototype.expires_earlier_than = function(l2) {
    if (!l2.expire_in && this.expire_in) {
      return true;
    } else if (this.expire_in && !l2.expire_in) {
      return false;
    } else if (!this.expire_in && !l2.expire_in) {
      return false;
    } else {
      return (this.generated + this.expire_in) < (l2.generated + l2.expire_in);
    }
  };

  Lifespan.prototype.copy = function() {
    return new Lifespan({
      generated: this.generated,
      expire_in: this.expire_in
    });
  };

  return Lifespan;

})();

KeyWrapper = (function() {
  function KeyWrapper(arg) {
    this.key = arg.key, this.lifespan = arg.lifespan, this._pgp = arg._pgp, this._keybase = arg._keybase, this.flags = arg.flags;
  }

  KeyWrapper.prototype.ekid = function() {
    return this.key.ekid();
  };

  KeyWrapper.prototype.overwrite_with_omitting_revokes = function(kw2) {
    if (kw2._pgp.is_revoked()) {
      return;
    }
    if (this._pgp.is_revoked() || this.lifespan.expires_earlier_than(kw2.lifespan)) {
      return this.key = kw2.key, this.lifespan = kw2.lifespan, this._pgp = kw2._pgp, this._keybase = kw2._keybase, this.flags = kw2.flags, kw2;
    }
  };

  return KeyWrapper;

})();

Subkey = (function(superClass) {
  extend(Subkey, superClass);

  function Subkey(arg) {
    var _keybase, _pgp, flags, key, lifespan;
    key = arg.key, flags = arg.flags, _pgp = arg._pgp, _keybase = arg._keybase, this.desc = arg.desc, lifespan = arg.lifespan, this.primary = arg.primary;
    Subkey.__super__.constructor.call(this, {
      key: key,
      lifespan: lifespan,
      flags: flags,
      _pgp: _pgp,
      _keybase: _keybase
    });
  }

  return Subkey;

})(KeyWrapper);

Primary = (function(superClass) {
  extend(Primary, superClass);

  function Primary(arg) {
    var _keybase, _pgp, flags, key, lifespan;
    key = arg.key, lifespan = arg.lifespan, flags = arg.flags, _pgp = arg._pgp, _keybase = arg._keybase;
    Primary.__super__.constructor.call(this, {
      key: key,
      lifespan: lifespan,
      flags: flags,
      _pgp: _pgp,
      _keybase: _keybase
    });
  }

  return Primary;

})(KeyWrapper);

exports.Lifespan = Lifespan;

exports.Subkey = Subkey;

exports.Primary = Primary;

//# sourceMappingURL=keywrapper.js.map
