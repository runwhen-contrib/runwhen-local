// Generated by IcedCoffeeScript 112.8.1
var BaseKeyPair, Pair,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

BaseKeyPair = require('../basekeypair').BaseKeyPair;

exports.BaseKeyPair = Pair = (function(superClass) {
  extend(Pair, superClass);

  function Pair() {
    return Pair.__super__.constructor.apply(this, arguments);
  }

  Pair.prototype.export_secret_key_kb = function(args, cb) {
    var err, ref, res;
    err = res = null;
    if ((res = (ref = this.priv) != null ? ref.key : void 0) == null) {
      err = new Error("no private key available");
    }
    return cb(err, res);
  };

  return Pair;

})(BaseKeyPair);

//# sourceMappingURL=base.js.map
