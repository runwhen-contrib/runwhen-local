{"version":3,"sources":["../src/util.js"],"names":["token","isToken","str","test","isScheme","quote","replace","unquote","substr","length"],"mappings":";;;;;;AACA,IAAMA,KAAK,GAAG,2DAAd;;AAEO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,SACrB,OAAOA,GAAP,KAAe,QAAf,IAA2BF,KAAK,CAACG,IAAN,CAAWD,GAAX,CADN;AAAA,CAAhB;;;AAEA,IAAME,QAAQ,GAAGH,OAAjB;;;AACA,IAAMI,KAAK,GAAG,SAARA,KAAQ,CAACH,GAAD;AAAA,SAA0B,IAAGA,GAAG,CAACI,OAAJ,CAAY,IAAZ,EAAkB,KAAlB,CAAyB,GAAtD;AAAA,CAAd;;;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACL,GAAD;AAAA,SACrBA,GAAG,CAACM,MAAJ,CAAW,CAAX,EAAcN,GAAG,CAACO,MAAJ,GAAa,CAA3B,EAA8BH,OAA9B,CAAsC,MAAtC,EAA8C,GAA9C,CADqB;AAAA,CAAhB","sourcesContent":["// @flow\nconst token = /^[^\\u0000-\\u001F\\u007F()<>@,;:\\\\\"/?={}\\[\\]\\u0020\\u0009]+$/;\n\nexport const isToken = (str: mixed): %checks =>\n  typeof str === 'string' && token.test(str);\nexport const isScheme = isToken;\nexport const quote = (str: string): string => `\"${str.replace(/\"/g, '\\\\\"')}\"`;\nexport const unquote = (str: string): string =>\n  str.substr(1, str.length - 2).replace(/\\\\\"/g, '\"');\n"],"file":"util.js"}